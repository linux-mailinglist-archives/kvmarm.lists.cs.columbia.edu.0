Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id 69A484662D5
	for <lists+kvmarm@lfdr.de>; Thu,  2 Dec 2021 12:54:09 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 195BD4B1E0;
	Thu,  2 Dec 2021 06:54:09 -0500 (EST)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: 0.909
X-Spam-Level: 
X-Spam-Status: No, score=0.909 required=6.1 tests=[BAYES_00=-1.9,
	DKIM_SIGNED=0.1, DNS_FROM_AHBL_RHSBL=2.699,
	RCVD_IN_DNSWL_NONE=-0.0001, T_DKIM_INVALID=0.01] autolearn=no
Authentication-Results: mm01.cs.columbia.edu (amavisd-new); dkim=softfail
	(fail, message has been altered) header.i=@linaro.org
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id OU86F1EBKpJx; Thu,  2 Dec 2021 06:54:07 -0500 (EST)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 594174B156;
	Thu,  2 Dec 2021 06:54:03 -0500 (EST)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 475764B14D
 for <kvmarm@lists.cs.columbia.edu>; Thu,  2 Dec 2021 06:54:02 -0500 (EST)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id ClaAlQ0Jhams for <kvmarm@lists.cs.columbia.edu>;
 Thu,  2 Dec 2021 06:54:00 -0500 (EST)
Received: from mail-wm1-f53.google.com (mail-wm1-f53.google.com
 [209.85.128.53])
 by mm01.cs.columbia.edu (Postfix) with ESMTPS id 55A3E4B13D
 for <kvmarm@lists.cs.columbia.edu>; Thu,  2 Dec 2021 06:54:00 -0500 (EST)
Received: by mail-wm1-f53.google.com with SMTP id i12so22784485wmq.4
 for <kvmarm@lists.cs.columbia.edu>; Thu, 02 Dec 2021 03:54:00 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=rKZGIAkHy6Wk8HmnCBA18OX+dHqy4xS8aZv10RY6IUY=;
 b=MblWz4yZRq+L8PlG0X2he7aOI50DRfzcKKh4ACKITTzWX30sgubF6ilsdFMxEd/cQS
 xFLZ1BTlHOfMHh7CQxspuYRuGrJUrEyCvOIdhDFnTchqezn9PzrH9ckJ+CWok8XovBBD
 K6+gyy2yx9LT7mKq+egq+hEJEA87NYXr0Xi68A+e9Jr/mC4QLFDTUP6kiccMr/kmIrQ5
 ZwnzKuoQxybIktQMFBSxV4pnQTXf8+pGK4dQrO/AnVuKPsB9iYnb0zmN9Eg/ksvIscNO
 JrgkSwSh0NWBhv3zwQQKWrbfxNxvltgXoO4f6xtYCxyiOaMY6P8Ovm/lKTgo22JgZ7dg
 hG4Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=rKZGIAkHy6Wk8HmnCBA18OX+dHqy4xS8aZv10RY6IUY=;
 b=uP6e12qhnQZonEcxCLVkSVg+Qq3fPNSLeFOb3iQd1UmrW0PxHVo2fZZQAC2ngVfHys
 Eoul5JDsB61bw5CzHysPT7F5V0S51EsBTrzwCnuIPuoePWFshRPSDDzzF/2Oj+wsgKrC
 lVcLUd7Wvc4oPPd13IuQv2lymb5imlXQRMUTelJQF2exXIHZJcDIaGcvDWfFgpmErsKc
 o2zA/dbK6fsfl0SLZM+Bx9gXAKM6oteXeCB9fiAyJ5imMEvW2dchbZU5xJ6RLjLLXPZ0
 1EVWj6T9A7KHerle5gx5UCmD9YTkimqkD/AsT6ZHIsSrLredVd7CGCZ8m4fVQB/t+kMV
 ZAqg==
X-Gm-Message-State: AOAM532z76vcJjsNxMgNMqRDcYg/Naw9gAsApyWgAc8odGQyvqoSjOgd
 xkn1Mmcutbdk+NGepZxz5GHTkQ==
X-Google-Smtp-Source: ABdhPJwN0YmW7tIvGU7I4fBuMFiBCDaW5OLUlQiHzPXrTIhlhJE6apr185FR6mYBG1nfWLphgaXOBg==
X-Received: by 2002:a05:600c:1993:: with SMTP id
 t19mr5895466wmq.21.1638446039503; 
 Thu, 02 Dec 2021 03:53:59 -0800 (PST)
Received: from zen.linaroharston ([51.148.130.216])
 by smtp.gmail.com with ESMTPSA id b188sm1880708wmd.45.2021.12.02.03.53.53
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 02 Dec 2021 03:53:54 -0800 (PST)
Received: from zen.lan (localhost [127.0.0.1])
 by zen.linaroharston (Postfix) with ESMTP id BC5791FF9B;
 Thu,  2 Dec 2021 11:53:52 +0000 (GMT)
From: =?UTF-8?q?Alex=20Benn=C3=A9e?= <alex.bennee@linaro.org>
To: pbonzini@redhat.com,
	drjones@redhat.com,
	thuth@redhat.com
Subject: [kvm-unit-tests PATCH v9 4/9] lib: add isaac prng library from CCAN
Date: Thu,  2 Dec 2021 11:53:47 +0000
Message-Id: <20211202115352.951548-5-alex.bennee@linaro.org>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20211202115352.951548-1-alex.bennee@linaro.org>
References: <20211202115352.951548-1-alex.bennee@linaro.org>
MIME-Version: 1.0
Cc: kvm@vger.kernel.org, maz@kernel.org, christoffer.dall@arm.com,
 qemu-arm@nongnu.org, kvmarm@lists.cs.columbia.edu,
 linux-arm-kernel@lists.infradead.org,
 "Timothy B . Terriberry" <tterribe@xiph.org>
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

SXQncyBvZnRlbiB1c2VmdWwgdG8gaW50cm9kdWNlIHNvbWUgc29ydCBvZiByYW5kb20gdmFyaWF0
aW9uIHdoZW4KdGVzdGluZyBzZXZlcmFsIHJhY2luZyBDUFUgY29uZGl0aW9ucy4gSW5zdGVhZCBv
ZiBlYWNoIHRlc3QgaW1wbGVtZW50aW5nCnNvbWUgaGFsZi1hcnNlZCBQUk5HIGJyaW5nIGluIGEg
YSBkZWNlbnQgb25lIHdoaWNoIGhhcyBnb29kIHN0YXRpc3RpY2FsCnJhbmRvbW5lc3MuIE9idmlv
dXNseSBpdCBpcyBkZXRlcm1pbmlzdGljIGZvciBhIGdpdmVuIHNlZWQgdmFsdWUgd2hpY2gKaXMg
bGlrZWx5IHRoZSBiZWhhdmlvdXIgeW91IHdhbnQuCgpJJ3ZlIHB1bGxlZCBpbiB0aGUgSVNBQUMg
bGlicmFyeSBmcm9tIENDQU46CgogICAgaHR0cDovL2Njb2RlYXJjaGl2ZS5uZXQvaW5mby9pc2Fh
Yy5odG1sCgpJIHNoYXZlZCBvZmYgdGhlIGZsb2F0IHJlbGF0ZWQgc3R1ZmYgd2hpY2ggaXMgbGVz
cyB1c2VmdWwgZm9yIHVuaXQKdGVzdGluZyBhbmQgcmUtaW5kZW50ZWQgdG8gZml0IHRoZSBzdHls
ZS4gVGhlIG9yaWdpbmFsIGxpY2Vuc2Ugd2FzCkNDMCAoUHVibGljIERvbWFpbikgd2hpY2ggaXMg
Y29tcGF0aWJsZSB3aXRoIHRoZSBMR1BMIHYyIG9mCmt2bS11bml0LXRlc3RzLgoKU2lnbmVkLW9m
Zi1ieTogQWxleCBCZW5uw6llIDxhbGV4LmJlbm5lZUBsaW5hcm8ub3JnPgpDQzogVGltb3RoeSBC
LiBUZXJyaWJlcnJ5IDx0dGVycmliZUB4aXBoLm9yZz4KQWNrZWQtYnk6IEFuZHJldyBKb25lcyA8
ZHJqb25lc0ByZWRoYXQuY29tPgpNZXNzYWdlLUlkOiA8MjAyMTExMTgxODQ2NTAuNjYxNTc1LTYt
YWxleC5iZW5uZWVAbGluYXJvLm9yZz4KLS0tCiBhcm0vTWFrZWZpbGUuY29tbW9uIHwgICAxICsK
IGxpYi9wcm5nLmggICAgICAgICAgfCAgODIgKysrKysrKysrKysrKysrKysrKysrKwogbGliL3By
bmcuYyAgICAgICAgICB8IDE2MiArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKwogMyBmaWxlcyBjaGFuZ2VkLCAyNDUgaW5zZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUg
MTAwNjQ0IGxpYi9wcm5nLmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBsaWIvcHJuZy5jCgpkaWZmIC0t
Z2l0IGEvYXJtL01ha2VmaWxlLmNvbW1vbiBiL2FybS9NYWtlZmlsZS5jb21tb24KaW5kZXggMzgz
ODVlMGMuLjk5YmNmM2ZjIDEwMDY0NAotLS0gYS9hcm0vTWFrZWZpbGUuY29tbW9uCisrKyBiL2Fy
bS9NYWtlZmlsZS5jb21tb24KQEAgLTQ0LDYgKzQ0LDcgQEAgY2ZsYXRvYmpzICs9IGxpYi9wY2kt
dGVzdGRldi5vCiBjZmxhdG9ianMgKz0gbGliL3ZpcnRpby5vCiBjZmxhdG9ianMgKz0gbGliL3Zp
cnRpby1tbWlvLm8KIGNmbGF0b2JqcyArPSBsaWIvY2hyLXRlc3RkZXYubworY2ZsYXRvYmpzICs9
IGxpYi9wcm5nLm8KIGNmbGF0b2JqcyArPSBsaWIvYXJtL2lvLm8KIGNmbGF0b2JqcyArPSBsaWIv
YXJtL3NldHVwLm8KIGNmbGF0b2JqcyArPSBsaWIvYXJtL21tdS5vCmRpZmYgLS1naXQgYS9saWIv
cHJuZy5oIGIvbGliL3BybmcuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMC4u
YmY1Nzc2ZDEKLS0tIC9kZXYvbnVsbAorKysgYi9saWIvcHJuZy5oCkBAIC0wLDAgKzEsODIgQEAK
Ky8qCisgKiBQUk5HIEhlYWRlcgorICovCisjaWZuZGVmIF9fUFJOR19IX18KKyNkZWZpbmUgX19Q
Uk5HX0hfXworCisjIGluY2x1ZGUgPHN0ZGludC5oPgorCisKKwordHlwZWRlZiBzdHJ1Y3QgaXNh
YWNfY3R4IGlzYWFjX2N0eDsKKworCisKKy8qVGhpcyB2YWx1ZSBtYXkgYmUgbG93ZXJlZCB0byBy
ZWR1Y2UgbWVtb3J5IHVzYWdlIG9uIGVtYmVkZGVkIHBsYXRmb3JtcywgYXQKKyAgdGhlIGNvc3Qg
b2YgcmVkdWNpbmcgc2VjdXJpdHkgYW5kIGluY3JlYXNpbmcgYmlhcy4KKyAgUXVvdGluZyBCb2Ig
SmVua2luczogIlRoZSBjdXJyZW50IGJlc3QgZ3Vlc3MgaXMgdGhhdCBiaWFzIGlzIGRldGVjdGFi
bGUgYWZ0ZXIKKyAgMioqMzcgdmFsdWVzIGZvciBbSVNBQUNfU1pfTE9HXT0zLCAyKio0NSBmb3Ig
NCwgMioqNTMgZm9yIDUsIDIqKjYxIGZvciA2LAorICAyKio2OSBmb3IgNywgYW5kIDIqKjc3IHZh
bHVlcyBmb3IgW0lTQUFDX1NaX0xPR109OC4iKi8KKyNkZWZpbmUgSVNBQUNfU1pfTE9HICAgICAg
KDgpCisjZGVmaW5lIElTQUFDX1NaICAgICAgICAgICgxPDxJU0FBQ19TWl9MT0cpCisjZGVmaW5l
IElTQUFDX1NFRURfU1pfTUFYIChJU0FBQ19TWjw8MikKKworCisKKy8qSVNBQUMgaXMgdGhlIG1v
c3QgYWR2YW5jZWQgb2YgYSBzZXJpZXMgb2YgcHNldWRvLXJhbmRvbSBudW1iZXIgZ2VuZXJhdG9y
cworICBkZXNpZ25lZCBieSBSb2JlcnQgSi4gSmVua2lucyBKci4gaW4gMTk5Ni4KKyAgaHR0cDov
L3d3dy5idXJ0bGVidXJ0bGUubmV0L2JvYi9yYW5kL2lzYWFjLmh0bWwKKyAgVG8gcXVvdGU6Cisg
IE5vIGVmZmljaWVudCBtZXRob2QgaXMga25vd24gZm9yIGRlZHVjaW5nIHRoZWlyIGludGVybmFs
IHN0YXRlcy4KKyAgSVNBQUMgcmVxdWlyZXMgYW4gYW1vcnRpemVkIDE4Ljc1IGluc3RydWN0aW9u
cyB0byBwcm9kdWNlIGEgMzItYml0IHZhbHVlLgorICBUaGVyZSBhcmUgbm8gY3ljbGVzIGluIElT
QUFDIHNob3J0ZXIgdGhhbiAyKio0MCB2YWx1ZXMuCisgIFRoZSBleHBlY3RlZCBjeWNsZSBsZW5n
dGggaXMgMioqODI5NSB2YWx1ZXMuKi8KK3N0cnVjdCBpc2FhY19jdHh7CisJdW5zaWduZWQgbjsK
Kwl1aW50MzJfdCByW0lTQUFDX1NaXTsKKwl1aW50MzJfdCBtW0lTQUFDX1NaXTsKKwl1aW50MzJf
dCBhOworCXVpbnQzMl90IGI7CisJdWludDMyX3QgYzsKK307CisKKworLyoqCisgKiBpc2FhY19p
bml0IC0gSW5pdGlhbGl6ZSBhbiBpbnN0YW5jZSBvZiB0aGUgSVNBQUMgcmFuZG9tIG51bWJlciBn
ZW5lcmF0b3IuCisgKiBAX2N0eDogICBUaGUgaW5zdGFuY2UgdG8gaW5pdGlhbGl6ZS4KKyAqIEBf
c2VlZDogIFRoZSBzcGVjaWZpZWQgc2VlZCBieXRlcy4KKyAqICAgICAgICAgIFRoaXMgbWF5IGJl
IE5VTEwgaWYgX25zZWVkIGlzIGxlc3MgdGhhbiBvciBlcXVhbCB0byB6ZXJvLgorICogQF9uc2Vl
ZDogVGhlIG51bWJlciBvZiBieXRlcyB0byB1c2UgZm9yIHRoZSBzZWVkLgorICogICAgICAgICAg
SWYgdGhpcyBpcyBncmVhdGVyIHRoYW4gSVNBQUNfU0VFRF9TWl9NQVgsIHRoZSBleHRyYSBieXRl
cyBhcmUKKyAqICAgICAgICAgICBpZ25vcmVkLgorICovCit2b2lkIGlzYWFjX2luaXQoaXNhYWNf
Y3R4ICpfY3R4LGNvbnN0IHVuc2lnbmVkIGNoYXIgKl9zZWVkLGludCBfbnNlZWQpOworCisvKioK
KyAqIGlzYWFjX3Jlc2VlZCAtIE1peCBhIG5ldyBiYXRjaCBvZiBlbnRyb3B5IGludG8gdGhlIGN1
cnJlbnQgc3RhdGUuCisgKiBUbyByZXNldCBJU0FBQyB0byBhIGtub3duIHN0YXRlLCBjYWxsIGlz
YWFjX2luaXQoKSBhZ2FpbiBpbnN0ZWFkLgorICogQF9jdHg6ICAgVGhlIGluc3RhbmNlIHRvIHJl
c2VlZC4KKyAqIEBfc2VlZDogIFRoZSBzcGVjaWZpZWQgc2VlZCBieXRlcy4KKyAqICAgICAgICAg
IFRoaXMgbWF5IGJlIE5VTEwgaWYgX25zZWVkIGlzIHplcm8uCisgKiBAX25zZWVkOiBUaGUgbnVt
YmVyIG9mIGJ5dGVzIHRvIHVzZSBmb3IgdGhlIHNlZWQuCisgKiAgICAgICAgICBJZiB0aGlzIGlz
IGdyZWF0ZXIgdGhhbiBJU0FBQ19TRUVEX1NaX01BWCwgdGhlIGV4dHJhIGJ5dGVzIGFyZQorICog
ICAgICAgICAgIGlnbm9yZWQuCisgKi8KK3ZvaWQgaXNhYWNfcmVzZWVkKGlzYWFjX2N0eCAqX2N0
eCxjb25zdCB1bnNpZ25lZCBjaGFyICpfc2VlZCxpbnQgX25zZWVkKTsKKy8qKgorICogaXNhYWNf
bmV4dF91aW50MzIgLSBSZXR1cm4gdGhlIG5leHQgcmFuZG9tIDMyLWJpdCB2YWx1ZS4KKyAqIEBf
Y3R4OiBUaGUgSVNBQUMgaW5zdGFuY2UgdG8gZ2VuZXJhdGUgdGhlIHZhbHVlIHdpdGguCisgKi8K
K3VpbnQzMl90IGlzYWFjX25leHRfdWludDMyKGlzYWFjX2N0eCAqX2N0eCk7CisvKioKKyAqIGlz
YWFjX25leHRfdWludCAtIFVuaWZvcm0gcmFuZG9tIGludGVnZXIgbGVzcyB0aGFuIHRoZSBnaXZl
biB2YWx1ZS4KKyAqIEBfY3R4OiBUaGUgSVNBQUMgaW5zdGFuY2UgdG8gZ2VuZXJhdGUgdGhlIHZh
bHVlIHdpdGguCisgKiBAX246ICAgVGhlIHVwcGVyIGJvdW5kIG9uIHRoZSByYW5nZSBvZiBudW1i
ZXJzIHJldHVybmVkIChub3QgaW5jbHVzaXZlKS4KKyAqICAgICAgICBUaGlzIG11c3QgYmUgZ3Jl
YXRlciB0aGFuIHplcm8gYW5kIGxlc3MgdGhhbiAyKiozMi4KKyAqICAgICAgICBUbyByZXR1cm4g
aW50ZWdlcnMgaW4gdGhlIGZ1bGwgcmFuZ2UgMC4uLjIqKjMyLTEsIHVzZQorICogICAgICAgICBp
c2FhY19uZXh0X3VpbnQzMigpIGluc3RlYWQuCisgKiBSZXR1cm46IEFuIGludGVnZXIgdW5pZm9y
bWx5IGRpc3RyaWJ1dGVkIGJldHdlZW4gMCBhbmQgX24tMSAoaW5jbHVzaXZlKS4KKyAqLwordWlu
dDMyX3QgaXNhYWNfbmV4dF91aW50KGlzYWFjX2N0eCAqX2N0eCx1aW50MzJfdCBfbik7CisKKyNl
bmRpZgpkaWZmIC0tZ2l0IGEvbGliL3BybmcuYyBiL2xpYi9wcm5nLmMKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggMDAwMDAwMDAuLmViZDZkZjc1Ci0tLSAvZGV2L251bGwKKysrIGIvbGliL3By
bmcuYwpAQCAtMCwwICsxLDE2MiBAQAorLyoKKyAqIFBzZXVkbyBSYW5kb20gTnVtYmVyIEdlbmVy
YXRvcgorICoKKyAqIExpZnRlZCBmcm9tIGNjYW4gbW9kdWxlcyBpbG9nL2lzYWFjIHVuZGVyIEND
MAorICogICAtIGh0dHA6Ly9jY29kZWFyY2hpdmUubmV0L2luZm8vaXNhYWMuaHRtbAorICogICAt
IGh0dHA6Ly9jY29kZWFyY2hpdmUubmV0L2luZm8vaWxvZy5odG1sCisgKgorICogQW5kIGxpZ2h0
bHkgaGFja2VkIHRvIGNvbXBpbGUgdW5kZXIgdGhlIEtWTSB1bml0IHRlc3QgZW52aXJvbm1lbnQu
CisgKiBUaGlzIHByb3ZpZGVzIGEgaGFuZHkgUk5HIGZvciB0b3J0dXJlIHRlc3RzIHRoYXQgd2Fu
dCB0byB2YXJ5CisgKiBkZWxheXMgYW5kIHRoZSBsaWtlLgorICoKKyAqLworCisvKldyaXR0ZW4g
YnkgVGltb3RoeSBCLiBUZXJyaWJlcnJ5ICh0dGVycmliZUB4aXBoLm9yZykgMTk5OS0yMDA5Lgor
ICBDQzAgKFB1YmxpYyBkb21haW4pIC0gc2VlIExJQ0VOU0UgZmlsZSBmb3IgZGV0YWlscworICBC
YXNlZCBvbiB0aGUgcHVibGljIGRvbWFpbiBpbXBsZW1lbnRhdGlvbiBieSBSb2JlcnQgSi4gSmVu
a2lucyBKci4qLworCisjaW5jbHVkZSAibGliY2ZsYXQuaCIKKworI2luY2x1ZGUgPHN0cmluZy5o
PgorI2luY2x1ZGUgInBybmcuaCIKKworI2RlZmluZSBJU0FBQ19NQVNLICAgICAgICAoMHhGRkZG
RkZGRlUpCisKKy8qIEV4dHJhY3QgSVNBQUNfU1pfTE9HIGJpdHMgKHN0YXJ0aW5nIGF0IGJpdCAy
KS4gKi8KK3N0YXRpYyBpbmxpbmUgdWludDMyX3QgbG93ZXJfYml0cyh1aW50MzJfdCB4KQorewor
CXJldHVybiAoeCAmICgoSVNBQUNfU1otMSkgPDwgMikpID4+IDI7Cit9CisKKy8qIEV4dHJhY3Qg
bmV4dCBJU0FBQ19TWl9MT0cgYml0cyAoc3RhcnRpbmcgYXQgYml0IElTQUFDX1NaX0xPRysyKS4g
Ki8KK3N0YXRpYyBpbmxpbmUgdWludDMyX3QgdXBwZXJfYml0cyh1aW50MzJfdCB5KQoreworCXJl
dHVybiAoeSA+PiAoSVNBQUNfU1pfTE9HKzIpKSAmIChJU0FBQ19TWi0xKTsKK30KKworc3RhdGlj
IHZvaWQgaXNhYWNfdXBkYXRlKGlzYWFjX2N0eCAqX2N0eCl7CisJdWludDMyX3QgKm07CisJdWlu
dDMyX3QgKnI7CisJdWludDMyX3QgIGE7CisJdWludDMyX3QgIGI7CisJdWludDMyX3QgIHg7CisJ
dWludDMyX3QgIHk7CisJaW50ICAgICAgIGk7CisJbT1fY3R4LT5tOworCXI9X2N0eC0+cjsKKwlh
PV9jdHgtPmE7CisJYj1fY3R4LT5iKygrK19jdHgtPmMpOworCWZvcihpPTA7aTxJU0FBQ19TWi8y
O2krKyl7CisJCXg9bVtpXTsKKwkJYT0oYV5hPDwxMykrbVtpK0lTQUFDX1NaLzJdOworCQltW2ld
PXk9bVtsb3dlcl9iaXRzKHgpXSthK2I7CisJCXJbaV09Yj1tW3VwcGVyX2JpdHMoeSldK3g7CisJ
CXg9bVsrK2ldOworCQlhPShhXmE+PjYpK21baStJU0FBQ19TWi8yXTsKKwkJbVtpXT15PW1bbG93
ZXJfYml0cyh4KV0rYStiOworCQlyW2ldPWI9bVt1cHBlcl9iaXRzKHkpXSt4OworCQl4PW1bKytp
XTsKKwkJYT0oYV5hPDwyKSttW2krSVNBQUNfU1ovMl07CisJCW1baV09eT1tW2xvd2VyX2JpdHMo
eCldK2ErYjsKKwkJcltpXT1iPW1bdXBwZXJfYml0cyh5KV0reDsKKwkJeD1tWysraV07CisJCWE9
KGFeYT4+MTYpK21baStJU0FBQ19TWi8yXTsKKwkJbVtpXT15PW1bbG93ZXJfYml0cyh4KV0rYSti
OworCQlyW2ldPWI9bVt1cHBlcl9iaXRzKHkpXSt4OworCX0KKwlmb3IoaT1JU0FBQ19TWi8yO2k8
SVNBQUNfU1o7aSsrKXsKKwkJeD1tW2ldOworCQlhPShhXmE8PDEzKSttW2ktSVNBQUNfU1ovMl07
CisJCW1baV09eT1tW2xvd2VyX2JpdHMoeCldK2ErYjsKKwkJcltpXT1iPW1bdXBwZXJfYml0cyh5
KV0reDsKKwkJeD1tWysraV07CisJCWE9KGFeYT4+NikrbVtpLUlTQUFDX1NaLzJdOworCQltW2ld
PXk9bVtsb3dlcl9iaXRzKHgpXSthK2I7CisJCXJbaV09Yj1tW3VwcGVyX2JpdHMoeSldK3g7CisJ
CXg9bVsrK2ldOworCQlhPShhXmE8PDIpK21baS1JU0FBQ19TWi8yXTsKKwkJbVtpXT15PW1bbG93
ZXJfYml0cyh4KV0rYStiOworCQlyW2ldPWI9bVt1cHBlcl9iaXRzKHkpXSt4OworCQl4PW1bKytp
XTsKKwkJYT0oYV5hPj4xNikrbVtpLUlTQUFDX1NaLzJdOworCQltW2ldPXk9bVtsb3dlcl9iaXRz
KHgpXSthK2I7CisJCXJbaV09Yj1tW3VwcGVyX2JpdHMoeSldK3g7CisJfQorCV9jdHgtPmI9YjsK
KwlfY3R4LT5hPWE7CisJX2N0eC0+bj1JU0FBQ19TWjsKK30KKworc3RhdGljIHZvaWQgaXNhYWNf
bWl4KHVpbnQzMl90IF94WzhdKXsKKwlzdGF0aWMgY29uc3QgdW5zaWduZWQgY2hhciBTSElGVFs4
XT17MTEsMiw4LDE2LDEwLDQsOCw5fTsKKwlpbnQgaTsKKwlmb3IoaT0wO2k8ODtpKyspeworCQlf
eFtpXV49X3hbKGkrMSkmN108PFNISUZUW2ldOworCQlfeFsoaSszKSY3XSs9X3hbaV07CisJCV94
WyhpKzEpJjddKz1feFsoaSsyKSY3XTsKKwkJaSsrOworCQlfeFtpXV49X3hbKGkrMSkmN10+PlNI
SUZUW2ldOworCQlfeFsoaSszKSY3XSs9X3hbaV07CisJCV94WyhpKzEpJjddKz1feFsoaSsyKSY3
XTsKKwl9Cit9CisKKwordm9pZCBpc2FhY19pbml0KGlzYWFjX2N0eCAqX2N0eCxjb25zdCB1bnNp
Z25lZCBjaGFyICpfc2VlZCxpbnQgX25zZWVkKXsKKwlfY3R4LT5hPV9jdHgtPmI9X2N0eC0+Yz0w
OworCW1lbXNldChfY3R4LT5yLDAsc2l6ZW9mKF9jdHgtPnIpKTsKKwlpc2FhY19yZXNlZWQoX2N0
eCxfc2VlZCxfbnNlZWQpOworfQorCit2b2lkIGlzYWFjX3Jlc2VlZChpc2FhY19jdHggKl9jdHgs
Y29uc3QgdW5zaWduZWQgY2hhciAqX3NlZWQsaW50IF9uc2VlZCl7CisJdWludDMyX3QgKm07CisJ
dWludDMyX3QgKnI7CisJdWludDMyX3QgIHhbOF07CisJaW50ICAgICAgIGk7CisJaW50ICAgICAg
IGo7CisJbT1fY3R4LT5tOworCXI9X2N0eC0+cjsKKwlpZihfbnNlZWQ+SVNBQUNfU0VFRF9TWl9N
QVgpX25zZWVkPUlTQUFDX1NFRURfU1pfTUFYOworCWZvcihpPTA7aTxfbnNlZWQ+PjI7aSsrKXsK
KwkJcltpXV49KHVpbnQzMl90KV9zZWVkW2k8PDJ8M108PDI0fCh1aW50MzJfdClfc2VlZFtpPDwy
fDJdPDwxNnwKKwkJCSh1aW50MzJfdClfc2VlZFtpPDwyfDFdPDw4fF9zZWVkW2k8PDJdOworCX0K
KwlfbnNlZWQtPWk8PDI7CisJaWYoX25zZWVkPjApeworCQl1aW50MzJfdCByaTsKKwkJcmk9X3Nl
ZWRbaTw8Ml07CisJCWZvcihqPTE7ajxfbnNlZWQ7aisrKXJpfD0odWludDMyX3QpX3NlZWRbaTw8
MnxqXTw8KGo8PDMpOworCQlyW2krK11ePXJpOworCX0KKwl4WzBdPXhbMV09eFsyXT14WzNdPXhb
NF09eFs1XT14WzZdPXhbN109MHg5RTM3NzlCOVU7CisJZm9yKGk9MDtpPDQ7aSsrKWlzYWFjX21p
eCh4KTsKKwlmb3IoaT0wO2k8SVNBQUNfU1o7aSs9OCl7CisJCWZvcihqPTA7ajw4O2orKyl4W2pd
Kz1yW2kral07CisJCWlzYWFjX21peCh4KTsKKwkJbWVtY3B5KG0raSx4LHNpemVvZih4KSk7CisJ
fQorCWZvcihpPTA7aTxJU0FBQ19TWjtpKz04KXsKKwkJZm9yKGo9MDtqPDg7aisrKXhbal0rPW1b
aStqXTsKKwkJaXNhYWNfbWl4KHgpOworCQltZW1jcHkobStpLHgsc2l6ZW9mKHgpKTsKKwl9CisJ
aXNhYWNfdXBkYXRlKF9jdHgpOworfQorCit1aW50MzJfdCBpc2FhY19uZXh0X3VpbnQzMihpc2Fh
Y19jdHggKl9jdHgpeworCWlmKCFfY3R4LT5uKWlzYWFjX3VwZGF0ZShfY3R4KTsKKwlyZXR1cm4g
X2N0eC0+clstLV9jdHgtPm5dOworfQorCit1aW50MzJfdCBpc2FhY19uZXh0X3VpbnQoaXNhYWNf
Y3R4ICpfY3R4LHVpbnQzMl90IF9uKXsKKwl1aW50MzJfdCByOworCXVpbnQzMl90IHY7CisJdWlu
dDMyX3QgZDsKKwlkb3sKKwkJcj1pc2FhY19uZXh0X3VpbnQzMihfY3R4KTsKKwkJdj1yJV9uOwor
CQlkPXItdjsKKwl9CisJd2hpbGUoKChkK19uLTEpJklTQUFDX01BU0spPGQpOworCXJldHVybiB2
OworfQotLSAKMi4zMC4yCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwprdm1hcm0gbWFpbGluZyBsaXN0Cmt2bWFybUBsaXN0cy5jcy5jb2x1bWJpYS5lZHUK
aHR0cHM6Ly9saXN0cy5jcy5jb2x1bWJpYS5lZHUvbWFpbG1hbi9saXN0aW5mby9rdm1hcm0K
