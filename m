Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id 8DA65543949
	for <lists+kvmarm@lfdr.de>; Wed,  8 Jun 2022 18:42:22 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 817D34B280;
	Wed,  8 Jun 2022 12:42:21 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: -1.789
X-Spam-Level: 
X-Spam-Status: No, score=-1.789 required=6.1 tests=[BAYES_00=-1.9,
	DKIM_SIGNED=0.1, T_DKIM_INVALID=0.01, URIBL_BLOCKED=0.001]
	autolearn=unavailable
Authentication-Results: mm01.cs.columbia.edu (amavisd-new); dkim=softfail
	(fail, message has been altered) header.i=@kernel.org
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id xIfGaWyyUe1A; Wed,  8 Jun 2022 12:42:21 -0400 (EDT)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 2A0F14B208;
	Wed,  8 Jun 2022 12:42:20 -0400 (EDT)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id CF7644B0CB
 for <kvmarm@lists.cs.columbia.edu>; Wed,  8 Jun 2022 12:42:18 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id FsN8C23w9zst for <kvmarm@lists.cs.columbia.edu>;
 Wed,  8 Jun 2022 12:42:17 -0400 (EDT)
Received: from ams.source.kernel.org (ams.source.kernel.org [145.40.68.75])
 by mm01.cs.columbia.edu (Postfix) with ESMTPS id 530CA49F19
 for <kvmarm@lists.cs.columbia.edu>; Wed,  8 Jun 2022 12:42:17 -0400 (EDT)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ams.source.kernel.org (Postfix) with ESMTPS id 85F46B823D1;
 Wed,  8 Jun 2022 16:42:15 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 501F4C34116;
 Wed,  8 Jun 2022 16:42:14 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1654706534;
 bh=lJgUM8GOBIZ/XpsvzLcQSc3ckUaWGitjs+t1n/9XY24=;
 h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
 b=rrItJ2rwFonOwxdPvvc0pXC7XD7UusALImPpjOUHeJAKo5PBvgwfYKjd1eggKhjcR
 /HPPDq6UUeaShJRdddnBjZXLbaiQC9YHrjGnMFNVSBcZNCo1ZCZ/ugF6puNGsIoeGg
 syjVpcPjkK4js73Mk0z6U0shldBy8HTFoVd0Z5ffxatM9w4NYwatCcCaFCt+OCAdU8
 jzP1wNq7zOr2Uvf5FZK1459gq9nrZvpw3qHvwLXAUANafupIIvwg9rW+hSL9m0ZKeo
 1LCqstNIOUV2FtnSzmkJxR2rqNW29q+2MZyBxOAJt4WdccUkRcaodTLJqYeNs5WTDG
 RXos3xpuzKZpQ==
Received: from sofa.misterjones.org ([185.219.108.64] helo=why.misterjones.org)
 by disco-boy.misterjones.org with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.94.2)
 (envelope-from <maz@kernel.org>)
 id 1nyyl1-00GfTt-Rb; Wed, 08 Jun 2022 17:42:11 +0100
Date: Wed, 08 Jun 2022 17:42:11 +0100
Message-ID: <87h74v3y58.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Fuad Tabba <tabba@google.com>
Subject: Re: [PATCH 15/18] KVM: arm64: Warn when PENDING_EXCEPTION and
 INCREMENT_PC are set together
In-Reply-To: <CA+EHjTyW62HaJdH_L1RMBzQpzkNbFBAYpXQ-y_Wg4u1a2eVJwA@mail.gmail.com>
References: <20220528113829.1043361-1-maz@kernel.org>
 <20220528113829.1043361-16-maz@kernel.org>
 <CA+EHjTyW62HaJdH_L1RMBzQpzkNbFBAYpXQ-y_Wg4u1a2eVJwA@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: tabba@google.com, kvmarm@lists.cs.columbia.edu,
 kvm@vger.kernel.org, linux-arm-kernel@lists.infradead.org, james.morse@arm.com,
 suzuki.poulose@arm.com, alexandru.elisei@arm.com, oupton@google.com,
 will@kernel.org, qperret@google.com, broonie@kernel.org,
 kernel-team@android.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org);
 SAEximRunCond expanded to false
Cc: kernel-team@android.com, kvm@vger.kernel.org, Will Deacon <will@kernel.org>,
 Mark Brown <broonie@kernel.org>, kvmarm@lists.cs.columbia.edu,
 linux-arm-kernel@lists.infradead.org
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

On Wed, 08 Jun 2022 16:16:55 +0100,
Fuad Tabba <tabba@google.com> wrote:
> 
> Hi Marc,
> 
> On Sat, May 28, 2022 at 12:49 PM Marc Zyngier <maz@kernel.org> wrote:
> >
> > We really don't want PENDING_EXCEPTION and INCREMENT_PC to ever be
> > set at the same time, as they are mutually exclusive. Add checks
> > that will generate a warning should this ever happen.
> >
> > Signed-off-by: Marc Zyngier <maz@kernel.org>
> > ---
> >  arch/arm64/include/asm/kvm_emulate.h | 1 +
> >  arch/arm64/kvm/hyp/nvhe/sys_regs.c   | 2 ++
> >  arch/arm64/kvm/inject_fault.c        | 8 ++++++++
> >  3 files changed, 11 insertions(+)
> >
> > diff --git a/arch/arm64/include/asm/kvm_emulate.h b/arch/arm64/include/asm/kvm_emulate.h
> > index 46e631cd8d9e..861fa0b24a7f 100644
> > --- a/arch/arm64/include/asm/kvm_emulate.h
> > +++ b/arch/arm64/include/asm/kvm_emulate.h
> > @@ -473,6 +473,7 @@ static inline unsigned long vcpu_data_host_to_guest(struct kvm_vcpu *vcpu,
> >
> >  static __always_inline void kvm_incr_pc(struct kvm_vcpu *vcpu)
> >  {
> > +       WARN_ON(vcpu_get_flag(vcpu, PENDING_EXCEPTION));
> >         vcpu_set_flag(vcpu, INCREMENT_PC);
> >  }
> >
> > diff --git a/arch/arm64/kvm/hyp/nvhe/sys_regs.c b/arch/arm64/kvm/hyp/nvhe/sys_regs.c
> > index 2841a2d447a1..04973984b6db 100644
> > --- a/arch/arm64/kvm/hyp/nvhe/sys_regs.c
> > +++ b/arch/arm64/kvm/hyp/nvhe/sys_regs.c
> > @@ -38,6 +38,8 @@ static void inject_undef64(struct kvm_vcpu *vcpu)
> >         *vcpu_pc(vcpu) = read_sysreg_el2(SYS_ELR);
> >         *vcpu_cpsr(vcpu) = read_sysreg_el2(SYS_SPSR);
> >
> > +       WARN_ON(vcpu_get_flag(vcpu, INCREMENT_PC));
> > +
> >         vcpu_set_flag(vcpu, PENDING_EXCEPTION);
> >         vcpu_set_flag(vcpu, EXCEPT_AA64_EL1_SYNC);
> >
> > diff --git a/arch/arm64/kvm/inject_fault.c b/arch/arm64/kvm/inject_fault.c
> > index a9a7b513f3b0..2f4b9afc16ec 100644
> > --- a/arch/arm64/kvm/inject_fault.c
> > +++ b/arch/arm64/kvm/inject_fault.c
> > @@ -20,6 +20,8 @@ static void inject_abt64(struct kvm_vcpu *vcpu, bool is_iabt, unsigned long addr
> >         bool is_aarch32 = vcpu_mode_is_32bit(vcpu);
> >         u32 esr = 0;
> >
> > +       WARN_ON(vcpu_get_flag(vcpu, INCREMENT_PC));
> > +
> 
> Minor nit: While we're at it, should we just create a helper for
> setting PENDING_EXCEPTION, same as we have for INCREMENT_PC? That
> might make the code clearer and save us from the hassle of having this
> WARN_ON before every instance of setting PENDING_EXCEPTION?

Good point. I ended up with this:

#define kvm_pend_exception(v, e)					\
	do {								\
		WARN_ON(vcpu_get_flag((v), INCREMENT_PC));		\
		vcpu_set_flag((v), PENDING_EXCEPTION);			\
		vcpu_set_flag((v), e);					\
	} while (0)

It has to be a macro in order to deal with the flag expansion, but is
otherwise a welcome cleanup.

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.
_______________________________________________
kvmarm mailing list
kvmarm@lists.cs.columbia.edu
https://lists.cs.columbia.edu/mailman/listinfo/kvmarm
