Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id 5873A2C2E74
	for <lists+kvmarm@lfdr.de>; Tue, 24 Nov 2020 18:27:16 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id D02704B717;
	Tue, 24 Nov 2020 12:27:15 -0500 (EST)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: -1.501
X-Spam-Level: 
X-Spam-Status: No, score=-1.501 required=6.1 tests=[BAYES_00=-1.9,
	DNS_FROM_AHBL_RHSBL=2.699, RCVD_IN_DNSWL_MED=-2.3]
	autolearn=unavailable
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id baT2Eun2BsRr; Tue, 24 Nov 2020 12:27:15 -0500 (EST)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 7C0EF4B6A0;
	Tue, 24 Nov 2020 12:27:14 -0500 (EST)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 097824B68D
 for <kvmarm@lists.cs.columbia.edu>; Tue, 24 Nov 2020 12:27:13 -0500 (EST)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 0PJIvYDJBJ9u for <kvmarm@lists.cs.columbia.edu>;
 Tue, 24 Nov 2020 12:27:11 -0500 (EST)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 9AFEC4B678
 for <kvmarm@lists.cs.columbia.edu>; Tue, 24 Nov 2020 12:27:11 -0500 (EST)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 18C011396;
 Tue, 24 Nov 2020 09:27:11 -0800 (PST)
Received: from [192.168.0.110] (unknown [172.31.20.19])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 6253F3F71F;
 Tue, 24 Nov 2020 09:27:10 -0800 (PST)
Subject: Re: [PATCH 0/8] KVM: arm64: Disabled PMU handling
To: Marc Zyngier <maz@kernel.org>, linux-arm-kernel@lists.infradead.org,
 kvmarm@lists.cs.columbia.edu, kvm@vger.kernel.org
References: <20201113182602.471776-1-maz@kernel.org>
From: Alexandru Elisei <alexandru.elisei@arm.com>
Message-ID: <750f5543-054a-f1aa-229f-2d41b8e233dd@arm.com>
Date: Tue, 24 Nov 2020 17:28:30 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101
 Thunderbird/78.4.3
MIME-Version: 1.0
In-Reply-To: <20201113182602.471776-1-maz@kernel.org>
Content-Language: en-US
Cc: kernel-team@android.com
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

SGkgTWFyYywKCkkgYmVsaWV2ZSB0aGVyZSBpcyBzb21ldGhpbmcgbWlzc2luZyBmcm9tIHRoaXMg
c2VyaWVzLgoKVGhlIG9yaWdpbmFsIGJlaGF2aW91ciwgd2hpY2ggdGhpcyBzZXJpZXMgY2hhbmdl
cywgd2FzIG5vdCB0byBkbyByZWdpc3RlcgplbXVsYXRpb24gYW5kIFBNVSBzdGF0ZSB1cGRhdGUg
aWYgdGhlIFBNVSB3YXNuJ3QgcmVhZHksIHdoZXJlIHZjcHUtPmFyY2gucG11LnJlYWR5CndhcyBz
ZXQgdG8gdHJ1ZSBpZiB0aGUgUE1VIHdhcyBpbml0aWFsaXplZCBwcm9wZXJseSBpbiBrdm1fdmNw
dV9maXJzdF9ydW5faW5pdCgpCi0+IGt2bV9hcm1fcG11X3YzX2VuYWJsZSgpLgoKVGhlIHNlcmll
cyBjaGFuZ2VzIFBNVSBlbXVsYXRpb24gc3VjaCB0aGF0IHJlZ2lzdGVyIGVtdWxhdGlvbiBhbmQg
cG11IHN0YXRlIHVwZGF0ZQppcyBnYXRlZCBvbmx5IG9uIHRoZSBWQ1BVIGZlYXR1cmUgYmVpbmcg
c2V0LiBUaGlzIG1lYW5zIHRoYXQgbm93IHVzZXJzcGFjZSBjYW4gc2V0CnRoZSBWQ1BVIGZlYXR1
cmUsIGRvbid0IGRvIGFueSBpbml0aWFsaXphdGlvbiwgYW5kIHJ1biBhIGd1ZXN0IHdoaWNoIGNh
biBhY2Nlc3MKUE1VIHJlZ2lzdGVycy4gQWxzbyBrdm1fcG11X3VwZGF0ZV9zdGF0ZSgpIHdpbGwg
bm93IGJlIGNhbGxlZCBiZWZvcmUgZWFjaCBWTQplbnRyeS4gSSdtIG5vdCBleGFjdGx5IHN1cmUg
d2hhdCBoYXBwZW5zIGlmIHdlIGNhbGwga3ZtX3ZnaWNfaW5qZWN0X2lycSgpIGZvciBhbgppcnFf
bnVtID0gMCBhbmQgbm90IG93bmVkIGJ5IHRoZSBQTVUgKHRoZSBvd25lciBpcyBzZXQgS1ZNX0FS
TV9WQ1BVX1BNVV9WM19JTklUIC0+Cmt2bV9hcm1fcG11X3YzX2luaXQoKSksIGJ1dCBJIGRvbid0
IHRoaW5rIHRoYXQncyBhbGxvd2VkLgoKSSB3YXMgYWxzbyBhYmxlIHRvIHRyaWdnZXIgdGhpcyB3
YXJuaW5nIHdpdGggYSBtb2RpZmllZCB2ZXJzaW9uIG9mIGt2bXRvb2w6CgpbwqAgMTE4Ljk3MjE3
NF0gLS0tLS0tLS0tLS0tWyBjdXQgaGVyZSBdLS0tLS0tLS0tLS0tClvCoCAxMTguOTc0MjEyXSBV
bmtub3duIFBNVSB2ZXJzaW9uIDAKW8KgIDExOC45Nzc2MjJdIFdBUk5JTkc6IENQVTogMCBQSUQ6
IDIzOCBhdCBhcmNoL2FybTY0L2t2bS9wbXUtZW11bC5jOjMzCmt2bV9wbXVfZXZlbnRfbWFzay5p
c3JhLjArMHg2Yy8weDc0ClvCoCAxMTguOTg3MjcxXSBNb2R1bGVzIGxpbmtlZCBpbjoKW8KgIDEx
OC45OTA0MTRdIENQVTogMCBQSUQ6IDIzOCBDb21tOiBrdm0tdmNwdS0wIE5vdCB0YWludGVkCjUu
MTAuMC1yYzQtMDAwMDgtZ2M0Y2Q1MTg2ZmMyYSAjMzcKW8KgIDExOC45OTkwMDZdIEhhcmR3YXJl
IG5hbWU6IEdsb2JhbHNjYWxlIE1hcnZlbGwgRVNQUkVTU09CaW4gQm9hcmQgKERUKQpbwqAgMTE5
LjAwNTY0MV0gcHN0YXRlOiA0MDAwMDAwNSAoblpjdiBkYWlmIC1QQU4gLVVBTyAtVENPIEJUWVBF
PS0tKQpbwqAgMTE5LjAxMTgyNV0gcGMgOiBrdm1fcG11X2V2ZW50X21hc2suaXNyYS4wKzB4NmMv
MHg3NApbwqAgMTE5LjAxNjkyOV0gbHIgOiBrdm1fcG11X2V2ZW50X21hc2suaXNyYS4wKzB4NmMv
MHg3NApbwqAgMTE5LjAyMjAzNF0gc3AgOiBmZmZmODAwMDEyNzRiYTQwClvCoCAxMTkuMDI1NDM4
XSB4Mjk6IGZmZmY4MDAwMTI3NGJhNDAgeDI4OiBmZmZmMDAwMDA5MWM0NmEwClvCoCAxMTkuMDMw
OTAzXSB4Mjc6IDAwMDAwMDAwMDAwMDAwMDAgeDI2OiBmZmZmODAwMDExZTE2ZWUwClvCoCAxMTku
MDM2MzY4XSB4MjU6IGZmZmY4MDAwMTFlMTY2YzggeDI0OiBmZmZmMDAwMDA2ZTAwMDAwClvCoCAx
MTkuMDQxODM0XSB4MjM6IDAwMDAwMDAwMDAwMDAwMDAgeDIyOiBmZmZmODAwMDEyNzRiYjIwClvC
oCAxMTkuMDQ3MzAwXSB4MjE6IDAwMDAwMDAwMDAwMDAwMDAgeDIwOiAwMDAwMDAwMDAwMDAwMDFm
ClvCoCAxMTkuMDUyNzY1XSB4MTk6IDAwMDAwMDAwMDAwMDAwMDAgeDE4OiAwMDAwMDAwMDAwMDAw
MDMwClvCoCAxMTkuMDU4MjMxXSB4MTc6IDAwMDAwMDAwMDAwMDAwMDAgeDE2OiAwMDAwMDAwMDAw
MDAwMDAwClvCoCAxMTkuMDYzNjk3XSB4MTU6IGZmZmYwMDAwMDIyY2FmMzAgeDE0OiBmZmZmZmZm
ZmZmZmZmZmZmClvCoCAxMTkuMDY5MTYzXSB4MTM6IGZmZmY4MDAwMTFiNzI3MTggeDEyOiAwMDAw
MDAwMDAwMDAwNDU2ClvCoCAxMTkuMDc0NjI3XSB4MTE6IDAwMDAwMDAwMDAwMDAxNzIgeDEwOiBm
ZmZmODAwMDExYmNhNzE4ClvCoCAxMTkuMDgwMDk0XSB4OSA6IDAwMDAwMDAwZmZmZmYwMDAgeDgg
OiBmZmZmODAwMDExYjcyNzE4ClvCoCAxMTkuMDg1NTU5XSB4NyA6IGZmZmY4MDAwMTFiY2E3MTgg
eDYgOiAwMDAwMDAwMDAwMDAwMDAwClvCoCAxMTkuMDkxMDI1XSB4NSA6IDAwMDAwMDAwMDAwMDAw
MDAgeDQgOiBmZmZmMDAwMDNkZGJlOTAwClvCoCAxMTkuMDk2NDkxXSB4MyA6IGZmZmYwMDAwM2Rk
YzU3ZjAgeDIgOiBmZmZmMDAwMDNkZGJlOTAwClvCoCAxMTkuMTAxOTU2XSB4MSA6IDM0ZDBkNGIz
MzIxYjkxMDAgeDAgOiAwMDAwMDAwMDAwMDAwMDAwClvCoCAxMTkuMTA3NDIyXSBDYWxsIHRyYWNl
OgpbwqAgMTE5LjEwOTkzNV3CoCBrdm1fcG11X2V2ZW50X21hc2suaXNyYS4wKzB4NmMvMHg3NApb
wqAgMTE5LjExNDY4NF3CoCBrdm1fcG11X3NldF9jb3VudGVyX2V2ZW50X3R5cGUrMHgyYy8weDgw
ClvCoCAxMTkuMTE5ODgyXcKgIGFjY2Vzc19wbXVfZXZ0eXBlcisweDEyOC8weDE4MApbwqAgMTE5
LjEyNDE4MV3CoCBwZXJmb3JtX2FjY2VzcysweDM0LzB4YjAKW8KgIDExOS4xMjc5NDJdwqAga3Zt
X2hhbmRsZV9zeXNfcmVnKzB4YzgvMHgxNjAKW8KgIDExOS4xMzIxNTZdwqAgaGFuZGxlX2V4aXQr
MHg2Yy8weDFmMApbwqAgMTE5LjEzNTczOF3CoCBrdm1fYXJjaF92Y3B1X2lvY3RsX3J1bisweDFl
OC8weDczYwpbwqAgMTE5LjE0MDQ4OF3CoCBrdm1fdmNwdV9pb2N0bCsweDIzYy8weDU0NApbwqAg
MTE5LjE0NDQzM13CoCBfX2FybTY0X3N5c19pb2N0bCsweGE4LzB4ZjAKW8KgIDExOS4xNDg0NjRd
wqAgZWwwX3N2Y19jb21tb24uY29uc3Rwcm9wLjArMHg3OC8weDFhMApbwqAgMTE5LjE1MzM5MF3C
oCBkb19lbDBfc3ZjKzB4MjQvMHg5MApbwqAgMTE5LjE1Njc5Nl3CoCBlbDBfc3luY19oYW5kbGVy
KzB4MjU0LzB4MjYwClvCoCAxMTkuMTYwOTE1XcKgIGVsMF9zeW5jKzB4MTc0LzB4MTgwClvCoCAx
MTkuMTY0MzE5XSAtLS1bIGVuZCB0cmFjZSBjMGMyZTZmMjk5ZDU4ODIzIF0tLS0KCkkgcmVtb3Zl
ZCBhbGwgS1ZNX0FSTV9WQ1BVX1BNVV9WM19DVFJMIGlvY3RsIGNhbGxzIGZyb20ga3ZtdG9vbCdz
IHBtdSBlbXVsYXRpb24sCmFuZCBJIHN0YXJ0ZWQgdGhlIHBtdSB0ZXN0IGZyb20ga3ZtLXVuaXQt
dGVzdHM6CgokIC4vbGt2bS1wbXUgcnVuIC1jMSAtbTY0IC1mIGFybS9wbXUuZmxhdCAtLXBtdSAt
cCBjeWNsZS1jb3VudGVyCgpUaGUgcmVhc29uIGZvciB0aGUgd2FybmluZyBpcyB0aGF0IHRoZSBj
b3JyZWN0IHZhbHVlIGZvciBrdm0tPmFyY2gucG11dmVyIGlzIHNldAppbiBrdm1fYXJtX3BtdV92
M19zZXRfYXR0cigpLCB3aGljaCBpcyBub3QgY2FsbGVkIGFueW1vcmUuCgpUaGlzIGRpZmYgc2Vl
bXMgdG8gc29sdmUgdGhlIGlzc3VlOgoKZGlmZiAtLWdpdCBhL2FyY2gvYXJtNjQva3ZtL3BtdS1l
bXVsLmMgYi9hcmNoL2FybTY0L2t2bS9wbXUtZW11bC5jCmluZGV4IDY0M2NmODE5ZjNjMC4uMTUw
YjljYjBmNzQxIDEwMDY0NAotLS0gYS9hcmNoL2FybTY0L2t2bS9wbXUtZW11bC5jCisrKyBiL2Fy
Y2gvYXJtNjQva3ZtL3BtdS1lbXVsLmMKQEAgLTgyNSw5ICs4MjUsMTIgQEAgYm9vbCBrdm1fYXJt
X3N1cHBvcnRfcG11X3YzKHZvaWQpCsKgCsKgaW50IGt2bV9hcm1fcG11X3YzX2VuYWJsZShzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUpCsKgewotwqDCoMKgwqDCoMKgIGlmICghdmNwdS0+YXJjaC5wbXUu
Y3JlYXRlZCkKK8KgwqDCoMKgwqDCoCBpZiAoIWt2bV92Y3B1X2hhc19wbXUodmNwdSkpCsKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCByZXR1cm4gMDsKwqAKK8KgwqDCoMKgwqDCoCBpZiAo
IXZjcHUtPmFyY2gucG11LmNyZWF0ZWQpCivCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHJl
dHVybiAtRU5PRVhFQzsKKwrCoMKgwqDCoMKgwqDCoCAvKgrCoMKgwqDCoMKgwqDCoMKgICogQSB2
YWxpZCBpbnRlcnJ1cHQgY29uZmlndXJhdGlvbiBmb3IgdGhlIFBNVSBpcyBlaXRoZXIgdG8gaGF2
ZSBhCsKgwqDCoMKgwqDCoMKgwqAgKiBwcm9wZXJseSBjb25maWd1cmVkIGludGVycnVwdCBudW1i
ZXIgYW5kIHVzaW5nIGFuIGluLWtlcm5lbAoKSWYgeW91IGFncmVlIHdpdGggdGhlIGZpeCwgSSBj
YW4gc2VuZCBhIHByb3BlciBwYXRjaC4gdmNwdS0+YXJjaC5wbXUuY3JlYXRlZCBpcwpzZXQgaW4g
a3ZtX2FybV9wbXVfdjNfaW5pdCgpLCB3aGljaCBjaGVja3MgaWYgdGhlIGludGVycnVwdCBJRCBo
YXMgYmVlbiBzZXQuIEkKY2hvc2UgdG8gcmV0dXJuIC1FTk9FWEVDwqAgYmVjYXVzZSB0aGF0J3Mg
d2hhdCBLVk1fUlVOIHJldHVybnMgaWYgdGhlIHZjcHUgaXNuJ3QKaW5pdGlhbGl6ZWQgaW4ga3Zt
X2FyY2hfdmNwdV9pb2N0bF9ydW4oKS4KClRoYW5rcywKCkFsZXgKCk9uIDExLzEzLzIwIDY6MjUg
UE0sIE1hcmMgWnluZ2llciB3cm90ZToKPiBJdCByZWNlbnRseSBkYXduZWQgb24gbWUgdGhhdCB0
aGUgd2F5IHdlIGhhbmRsZSBQTVUgdHJhcHMgd2hlbiB0aGUgUE1VCj4gaXMgZGlzYWJsZWQgaXMg
cGxhaW4gd3JvbmcuIFdlIGNvbnNpZGVyIHRoYXQgaGFuZGxpbmcgdGhlIHJlZ2lzdGVycyBhcwo+
IFJBWi9XSSBpcyBhIGZpbmUgdGhpbmcgdG8gZG8sIHdoaWxlIHRoZSBBUk12OCBBUk0gaXMgcHJl
dHR5IGNsZWFyIHRoYXQKPiB0aGF0J3Mgbm90IE9LIGFuZCB0aGF0IHN1Y2ggcmVnaXN0ZXJzIHNo
b3VsZCBVTkRFRiB3aGVuIEZFQVRfUE1VdjMKPiBkb2Vzbid0IGV4aXN0LiBJIHdlbnQgYWxsIHRo
ZSB3YXkgYmFjayB0byB0aGUgZmlyc3QgcHVibGljIHZlcnNpb24gb2YKPiB0aGUgc3BlYywgYW5k
IGl0IHR1cm5zIG91dCB3ZSB3ZXJlICphbHdheXMqIHdyb25nLgo+Cj4gSXQgcHJvYmFibHkgY29t
ZXMgZnJvbSB0aGUgZmFjdCB0aGF0IHdlIHVzZWQgbm90IHRvIHRyYXAgdGhlIElECj4gcmVnaXN0
ZXJzLCBhbmQgdGh1cyB3ZXJlIHVuYWJsZSB0byBhZHZlcnRpc2UgdGhlIGxhY2sgb2YgUE1VLCBi
dXQKPiB0aGF0J3MgaGFyZGx5IGFuIGV4Y3VzZS4gU28gbGV0J3MgZml4IHRoZSBkYW1uZWQgdGhp
bmcuCj4KPiBUaGlzIHNlcmllcyBhZGRzIGFuIGV4dHJhIGNoZWNrIGluIHRoZSBoZWxwZXJzIHRo
YXQgY2hlY2sgZm9yIHRoZQo+IHZhbGlkaXR5IG9mIHRoZSBQTVUgYWNjZXNzIChtb3N0IG9mIHRo
ZSByZWdpc3RlcnMgaGF2ZSB0byBjaGVja2VkCj4gYWdhaW5zdCBzb21lIGVuYWJsZSBmbGFncyBh
bmQvb3IgdGhlIGFjY2Vzc2luZyBleGNlcHRpb24gbGV2ZWwpLCBhbmQKPiByaWRzIHVzIG9mIHRo
ZSBSQVovV0kgYmVoYXZpb3VyLgo+Cj4gVGhpcyBlbmFibGVzIHVzIHRvIG1ha2UgYWRkaXRpb25h
bCBjbGVhbnVwcywgdG8gdGhlIHBvaW50IHdoZXJlIHdlIGNhbgo+IHJlbW92ZSB0aGUgUE1VICJy
ZWFkeSIgc3RhdGUgdGhhdCBhbHdheXMgaGFkIHZlcnkgYml6YXJyZSBzZW1hbnRpY3MuCj4gQWxs
IGluIGFsbCwgYSBuZWdhdGl2ZSBkaWZmc3RhdCwgYW5kIHNwZWMgY29tcGxpYW50IGJlaGF2aW91
cnMuIFdoYXQncwo+IG5vdCB0byBsaWtlPwo+Cj4gSSd2ZSBydW4gYSBmZXcgZ3Vlc3RzIHdpdGgg
YW5kIHdpdGhvdXQgUE1VcyBhcyB3ZWxsIGFzIEtVVCwgYW5kCj4gbm90aGluZyBjYXVnaHQgZmly
ZS4gVGhlIHBhdGNoZXMgYXJlIG9uIHRvcCBvZiBrdm1hcm0vcXVldWUuCj4KPiBNYXJjIFp5bmdp
ZXIgKDgpOgo+ICAgS1ZNOiBhcm02NDogQWRkIGt2bV92Y3B1X2hhc19wbXUoKSBoZWxwZXIKPiAg
IEtWTTogYXJtNjQ6IFNldCBJRF9BQTY0REZSMF9FTDEuUE1VVmVyIHRvIDAgd2hlbiBubyBQTVUg
c3VwcG9ydAo+ICAgS1ZNOiBhcm02NDogUmVmdXNlIGlsbGVnYWwgS1ZNX0FSTV9WQ1BVX1BNVV9W
MyBhdCByZXNldCB0aW1lCj4gICBLVk06IGFybTY0OiBJbmplY3QgVU5ERUYgb24gUE1VIGFjY2Vz
cyB3aGVuIG5vIFBNVSBjb25maWd1cmVkCj4gICBLVk06IGFybTY0OiBSZW1vdmUgUE1VIFJBWi9X
SSBoYW5kbGluZwo+ICAgS1ZNOiBhcm02NDogUmVtb3ZlIGRlYWQgUE1VIHN5c3JlZyBkZWNvZGlu
ZyBjb2RlCj4gICBLVk06IGFybTY0OiBHYXRlIGt2bV9wbXVfdXBkYXRlX3N0YXRlKCkgb24gdGhl
IFBNVSBmZWF0dXJlCj4gICBLVk06IGFybTY0OiBHZXQgcmlkIG9mIHRoZSBQTVUgcmVhZHkgc3Rh
dGUKPgo+ICBhcmNoL2FybTY0L2luY2x1ZGUvYXNtL2t2bV9ob3N0LmggfCAgMyArKwo+ICBhcmNo
L2FybTY0L2t2bS9wbXUtZW11bC5jICAgICAgICAgfCAxMSArKystLS0tCj4gIGFyY2gvYXJtNjQv
a3ZtL3Jlc2V0LmMgICAgICAgICAgICB8ICA0ICsrKwo+ICBhcmNoL2FybTY0L2t2bS9zeXNfcmVn
cy5jICAgICAgICAgfCA1MSArKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCj4gIGluY2x1
ZGUva3ZtL2FybV9wbXUuaCAgICAgICAgICAgICB8ICAzIC0tCj4gIDUgZmlsZXMgY2hhbmdlZCwg
MjQgaW5zZXJ0aW9ucygrKSwgNDggZGVsZXRpb25zKC0pCj4KX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX18Ka3ZtYXJtIG1haWxpbmcgbGlzdAprdm1hcm1AbGlz
dHMuY3MuY29sdW1iaWEuZWR1Cmh0dHBzOi8vbGlzdHMuY3MuY29sdW1iaWEuZWR1L21haWxtYW4v
bGlzdGluZm8va3ZtYXJtCg==
