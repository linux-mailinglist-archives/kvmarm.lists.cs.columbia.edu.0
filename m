Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id 9CFA9513CF8
	for <lists+kvmarm@lfdr.de>; Thu, 28 Apr 2022 23:00:06 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id D975049F1C;
	Thu, 28 Apr 2022 17:00:05 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: -1.789
X-Spam-Level: 
X-Spam-Status: No, score=-1.789 required=6.1 tests=[BAYES_00=-1.9,
	DKIM_SIGNED=0.1, T_DKIM_INVALID=0.01, URIBL_BLOCKED=0.001]
	autolearn=unavailable
Authentication-Results: mm01.cs.columbia.edu (amavisd-new); dkim=softfail
	(fail, message has been altered) header.i=@kernel.org
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id kXBjwcGy4c2m; Thu, 28 Apr 2022 17:00:05 -0400 (EDT)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 7B97F49F05;
	Thu, 28 Apr 2022 17:00:04 -0400 (EDT)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id B9CB949B0A
 for <kvmarm@lists.cs.columbia.edu>; Thu, 28 Apr 2022 17:00:02 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id MDZ+ACHsS3sF for <kvmarm@lists.cs.columbia.edu>;
 Thu, 28 Apr 2022 17:00:01 -0400 (EDT)
Received: from ams.source.kernel.org (ams.source.kernel.org [145.40.68.75])
 by mm01.cs.columbia.edu (Postfix) with ESMTPS id 6F0754965C
 for <kvmarm@lists.cs.columbia.edu>; Thu, 28 Apr 2022 17:00:01 -0400 (EDT)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ams.source.kernel.org (Postfix) with ESMTPS id B4AF0B83036;
 Thu, 28 Apr 2022 20:59:59 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 780DEC385A9;
 Thu, 28 Apr 2022 20:59:58 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1651179598;
 bh=j2F1E9EcpdnjqQ0aWfONaAfWZbJZ0eFC7BwA5vIzrDo=;
 h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
 b=EJHfK2TtiLPQy31VeyXF5LHoikUz1CANwKqF0cVcAR6+gSeoY1JaOW5g0IEAlIXpm
 A/LNaiMDpxktqgTZwlinjx7XleS/cRfCZgg1sY6wxn1KnHCX8xJC5Hv6bniYMSwBEV
 XlXacFZBN7q3mSwMY9cDUnkRE5ljnafkqXdHVg59t6CzdXmnhVxvXGaJHQ74zKdb92
 f0nXKjAOZTULh3bjBIhQ3FTIqyN0SgU00yBsjNl9ahBbot9gq+rcaxH8XdsfUpq8iO
 pfOYHbD80bwU5gUwZb24N8I7kSTy5Cx1UYtgg2T9oX/YSosDZdQ+Qe2Abcu0FZuTTU
 8JK4queHzqiQA==
Received: from sofa.misterjones.org ([185.219.108.64] helo=why.misterjones.org)
 by disco-boy.misterjones.org with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.94.2)
 (envelope-from <maz@kernel.org>)
 id 1nkBEx-007liY-S9; Thu, 28 Apr 2022 21:59:56 +0100
Date: Thu, 28 Apr 2022 21:59:55 +0100
Message-ID: <87tuac9b5g.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Alexandru Elisei <alexandru.elisei@arm.com>
Subject: Re: [PATCH v3 0/5] arm64: Treat ESR_ELx as a 64-bit register
In-Reply-To: <20220425114444.368693-1-alexandru.elisei@arm.com>
References: <20220425114444.368693-1-alexandru.elisei@arm.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: alexandru.elisei@arm.com, catalin.marinas@arm.com,
 will@kernel.org, linux-arm-kernel@lists.infradead.org, james.morse@arm.com,
 suzuki.poulose@arm.com, kvmarm@lists.cs.columbia.edu, mark.rutland@arm.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org);
 SAEximRunCond expanded to false
Cc: catalin.marinas@arm.com, will@kernel.org, kvmarm@lists.cs.columbia.edu,
 linux-arm-kernel@lists.infradead.org
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

On Mon, 25 Apr 2022 12:44:39 +0100,
Alexandru Elisei <alexandru.elisei@arm.com> wrote:
> 
> The ESR_EL{1,2} registers were originally 32-bit, then were extended to
> 64-bit with the upper 32 bits RES0, and in ARM DDI 0487H.a the FEAT_LS64
> feature was added which now makes use of the upper bits. This series aims
> to teach Linux to treat it consistently as a 64-bit register with the goal
> of making it easier to add support in the future for features that use the
> upper 32 bits.
> 
> Patches #1 ("arm64: Make ESR_ELx_xVC_IMM_MASK compatible with assembly")
> and #2 ("arm64: compat: Do not treat syscall number as ESR_ELx for a bad
> syscall") are fixes for some minor issues which I found while working on
> changing ESR_ELx to 64-bit.
> 
> Patches #3 ("arm64: Treat ESR_ELx as a 64bit register") and #4 ("KVM:
> arm64: Treat ESR_EL2 as a 64-bit register") are where the ESR_ELx registers
> are changed to 64-bit. I chose to make the KVM changes a separate patch
> because KVM prefers to use u64 for the registers.
> 
> And in patch #5 ("KVM: arm64: uapi: Add kvm_debug_exit_arch.hsr_high") I
> add a new field to the user API struct kvm_debug_exit_arch that represents
> the higher 32 bits, and a flag to go with it (details in the patch).
> 
> Tested by running ltp for a few hours (minimal changes from the previous
> version) and kvm-unit-tests on a rockpro64.
> 
> Changes in v3:
> 
> * Rebased on top of v5.18-rc4
> * Clear kvm_run->flags in kvm_arch_vcpu_ioctl_run() in patch #5 ("KVM:
>   arm64: uapi: Add kvm_debug_exit_arch.hsr_high")
> * Documented KVM_DEBUG_ARCH_HSR_HIGH_VALID.
> 
> Changes in v2:
> 
> * Added the KVM_DEBUG_ARCH_HSR_HIGH_VALID kvm_run flag to patch #5 ("KVM:
>   arm64: uapi: Add kvm_debug_exit_arch.hsr_high"), and updated the commit
>   message to match (Marc)
> * Rebased on top of v5.18-rc3.
> 
> 
> Alexandru Elisei (5):
>   arm64: Make ESR_ELx_xVC_IMM_MASK compatible with assembly
>   arm64: compat: Do not treat syscall number as ESR_ELx for a bad
>     syscall
>   arm64: Treat ESR_ELx as a 64-bit register
>   KVM: arm64: Treat ESR_EL2 as a 64-bit register
>   KVM: arm64: uapi: Add kvm_debug_exit_arch.hsr_high
> 
>  Documentation/virt/kvm/api.rst          |  2 +
>  arch/arm64/include/asm/debug-monitors.h |  4 +-
>  arch/arm64/include/asm/esr.h            |  8 +--
>  arch/arm64/include/asm/exception.h      | 28 +++++-----
>  arch/arm64/include/asm/kvm_emulate.h    |  6 +--
>  arch/arm64/include/asm/kvm_host.h       |  2 +-
>  arch/arm64/include/asm/kvm_ras.h        |  2 +-
>  arch/arm64/include/asm/system_misc.h    |  4 +-
>  arch/arm64/include/asm/traps.h          | 12 ++---
>  arch/arm64/include/uapi/asm/kvm.h       |  2 +
>  arch/arm64/kernel/debug-monitors.c      | 12 ++---
>  arch/arm64/kernel/entry-common.c        |  6 +--
>  arch/arm64/kernel/fpsimd.c              |  6 +--
>  arch/arm64/kernel/hw_breakpoint.c       |  4 +-
>  arch/arm64/kernel/kgdb.c                |  6 +--
>  arch/arm64/kernel/probes/kprobes.c      |  4 +-
>  arch/arm64/kernel/probes/uprobes.c      |  4 +-
>  arch/arm64/kernel/sys_compat.c          |  2 +-
>  arch/arm64/kernel/traps.c               | 66 +++++++++++------------
>  arch/arm64/kvm/arm.c                    |  1 +
>  arch/arm64/kvm/handle_exit.c            | 16 +++---
>  arch/arm64/kvm/hyp/include/hyp/switch.h |  2 +-
>  arch/arm64/kvm/hyp/nvhe/sys_regs.c      |  2 +-
>  arch/arm64/kvm/hyp/vgic-v3-sr.c         |  4 +-
>  arch/arm64/kvm/inject_fault.c           |  4 +-
>  arch/arm64/kvm/sys_regs.c               |  4 +-
>  arch/arm64/mm/fault.c                   | 70 ++++++++++++-------------
>  27 files changed, 145 insertions(+), 138 deletions(-)

For the series:

Reviewed-by: Marc Zyngier <maz@kernel.org>

Given the scale of the changes, I expect this go be routed via the
arm64 tree, but I can also take it if needed.

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.
_______________________________________________
kvmarm mailing list
kvmarm@lists.cs.columbia.edu
https://lists.cs.columbia.edu/mailman/listinfo/kvmarm
