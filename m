Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id CF34A37A26B
	for <lists+kvmarm@lfdr.de>; Tue, 11 May 2021 10:45:10 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 03EAB4B485;
	Tue, 11 May 2021 04:45:10 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: -4.201
X-Spam-Level: 
X-Spam-Status: No, score=-4.201 required=6.1 tests=[BAYES_00=-1.9,
	DNS_FROM_AHBL_RHSBL=2.699, RCVD_IN_DNSWL_HI=-5] autolearn=unavailable
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id l-PgqOeKD0SW; Tue, 11 May 2021 04:45:09 -0400 (EDT)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 7F0894B46F;
	Tue, 11 May 2021 04:45:08 -0400 (EDT)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 969F84B38A
 for <kvmarm@lists.cs.columbia.edu>; Tue, 11 May 2021 04:45:07 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id uMExvs3VkpQm for <kvmarm@lists.cs.columbia.edu>;
 Tue, 11 May 2021 04:45:06 -0400 (EDT)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mm01.cs.columbia.edu (Postfix) with ESMTPS id 403C54B378
 for <kvmarm@lists.cs.columbia.edu>; Tue, 11 May 2021 04:45:06 -0400 (EDT)
Received: from disco-boy.misterjones.org (disco-boy.misterjones.org
 [51.254.78.96])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 7F5A9616EC;
 Tue, 11 May 2021 08:45:04 +0000 (UTC)
Received: from 78.163-31-62.static.virginmediabusiness.co.uk ([62.31.163.78]
 helo=why.misterjones.org)
 by disco-boy.misterjones.org with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.94.2)
 (envelope-from <maz@kernel.org>)
 id 1lgO0k-000dSP-4n; Tue, 11 May 2021 09:45:02 +0100
Date: Tue, 11 May 2021 09:45:01 +0100
Message-ID: <87lf8loe0i.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Fuad Tabba <tabba@google.com>
Subject: Re: [PATCH 2/2] KVM: arm64: Commit pending PC adjustemnts before
 returning to userspace
In-Reply-To: <CA+EHjTzoWYhgVjURzi9V8nGQO5DOimgGKv7gQcfrRgd-Gf2j2Q@mail.gmail.com>
References: <20210510094915.1909484-1-maz@kernel.org>
 <20210510094915.1909484-3-maz@kernel.org>
 <CA+EHjTzcfmt4mxh05a_P+nheQ_A2FuXhpgvKXuV5__pZP0SxkA@mail.gmail.com>
 <871radvg9n.wl-maz@kernel.org>
 <CA+EHjTzoWYhgVjURzi9V8nGQO5DOimgGKv7gQcfrRgd-Gf2j2Q@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
X-SA-Exim-Connect-IP: 62.31.163.78
X-SA-Exim-Rcpt-To: tabba@google.com, kvm@vger.kernel.org,
 kvmarm@lists.cs.columbia.edu, linux-arm-kernel@lists.infradead.org,
 yuzenghui@huawei.com, james.morse@arm.com, suzuki.poulose@arm.com,
 alexandru.elisei@arm.com, kernel-team@android.com, stable@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org);
 SAEximRunCond expanded to false
Cc: kvm@vger.kernel.org, kernel-team@android.com, stable@vger.kernel.org,
 "open list:KERNEL VIRTUAL MACHINE FOR ARM64 \(KVM/arm64\)"
 <kvmarm@lists.cs.columbia.edu>,
 "moderated list:ARM64 PORT \(AARCH64 ARCHITECTURE\)"
 <linux-arm-kernel@lists.infradead.org>
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

On Tue, 11 May 2021 09:22:37 +0100,
Fuad Tabba <tabba@google.com> wrote:
> 
> Hi Marc,
> 
> 
> On Tue, May 11, 2021 at 9:14 AM Marc Zyngier <maz@kernel.org> wrote:
> >
> > Hi Fuad,
> >
> > On Tue, 11 May 2021 09:03:40 +0100,
> > Fuad Tabba <tabba@google.com> wrote:
> > >
> > > Hi Marc,
> > >
> > > > KVM: arm64: Commit pending PC adjustemnts before returning to userspace
> > >
> > > s/adjustments/adjustments
> >
> > Looks like Gmail refuses to let you mimic my spelling mistakes! :D
> >
> > >
> > > On Mon, May 10, 2021 at 10:49 AM Marc Zyngier <maz@kernel.org> wrote:
> > > >
> > > > KVM currently updates PC (and the corresponding exception state)
> > > > using a two phase approach: first by setting a set of flags,
> > > > then by converting these flags into a state update when the vcpu
> > > > is about to enter the guest.
> > > >
> > > > However, this creates a disconnect with userspace if the vcpu thread
> > > > returns there with any exception/PC flag set. In this case, the exposed
> > > > context is wrong, as userpsace doesn't have access to these flags
> > > > (they aren't architectural). It also means that these flags are
> > > > preserved across a reset, which isn't expected.
> > > >
> > > > To solve this problem, force an explicit synchronisation of the
> > > > exception state on vcpu exit to userspace. As an optimisation
> > > > for nVHE systems, only perform this when there is something pending.
> > >
> > > I've tested this with a few nvhe and vhe tests that exercise both
> > > __kvm_adjust_pc call paths (__kvm_vcpu_run and
> > > kvm_arch_vcpu_ioctl_run), and the tests ran as expected.  I'll do the
> > > same for v2 when you send it out.
> >
> > Ah, that's interesting. Do you have tests that actually fail when
> > hitting this bug? Given that this is pretty subtle, it'd be good to
> > have a way to make sure it doesn't crop up again.
> 
> Nothing that fails, just code that generates exceptions or emulates
> instructions at various points. That said, I think it should be
> straightforward to write a selftest for this. I'll give it a go.

PC adjustment is easy-ish: have a vcpu to hit WFI with no interrupt
pending, send the thread a signal to make it exit to userspace, update
the PC to another address, and check that the instruction at that
address is actually executed.

Exception injection is a lot more difficult: you need to force a vcpu
exit to userspace right after having caused an exception to be
injected by KVM. I can't think of an easy way to do that other than
repeatedly executing an instruction that generates an exception while
signalling the thread to force the exit. Ugly.

	M.

-- 
Without deviation from the norm, progress is not possible.
_______________________________________________
kvmarm mailing list
kvmarm@lists.cs.columbia.edu
https://lists.cs.columbia.edu/mailman/listinfo/kvmarm
