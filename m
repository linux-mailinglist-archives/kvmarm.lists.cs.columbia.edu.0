Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id 32B4E57B415
	for <lists+kvmarm@lfdr.de>; Wed, 20 Jul 2022 11:45:29 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 2F9854CFDA;
	Wed, 20 Jul 2022 05:45:28 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: -1.789
X-Spam-Level: 
X-Spam-Status: No, score=-1.789 required=6.1 tests=[BAYES_00=-1.9,
	DKIM_SIGNED=0.1, T_DKIM_INVALID=0.01, URIBL_BLOCKED=0.001]
	autolearn=unavailable
Authentication-Results: mm01.cs.columbia.edu (amavisd-new); dkim=softfail
	(fail, message has been altered) header.i=@kernel.org
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id XyibY2zOH10A; Wed, 20 Jul 2022 05:45:28 -0400 (EDT)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 02C9E4CFD6;
	Wed, 20 Jul 2022 05:45:27 -0400 (EDT)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 604E74CFCB
 for <kvmarm@lists.cs.columbia.edu>; Wed, 20 Jul 2022 05:45:25 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 4AagLv06Cdor for <kvmarm@lists.cs.columbia.edu>;
 Wed, 20 Jul 2022 05:45:24 -0400 (EDT)
Received: from dfw.source.kernel.org (dfw.source.kernel.org [139.178.84.217])
 by mm01.cs.columbia.edu (Postfix) with ESMTPS id 4AA284CE54
 for <kvmarm@lists.cs.columbia.edu>; Wed, 20 Jul 2022 05:45:24 -0400 (EDT)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by dfw.source.kernel.org (Postfix) with ESMTPS id 582A76126A;
 Wed, 20 Jul 2022 09:45:23 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id B7478C3411E;
 Wed, 20 Jul 2022 09:45:22 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1658310322;
 bh=aehb2vEzH/4KGB23P72fH2CEhv2w4wOGRXR9VC4eeK0=;
 h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
 b=Ru2iataoS3WnwRehXdua9jcZvHJl0s8DaF0ubF2NhYN1ObmcZaFKaVfBGCbGDQ6sg
 HJ/FnXB43kJbrWv+EdBKlsPUi0zDlzTP3FcCSOr0N1Q/ppQf7agefnGOGqpv+CjUMT
 u+fO0qGny1ljnlBjA0G/wlDo+ETS91yLd5Thc9n4JYxxq7PehDnqCTyiJcm1+0Rbc5
 MYId4iT8D4/hgKKMQRO+M9QpgRsP/cnUE58Rbm4waJLznqu1VwaTufAz4nmY4kVYNn
 oUOoxTkcXrGo9nl5mUkjI5O5c6AuXrmsGNqE1YD4LHUEvACvrRL3Ppul2icWTY0YeA
 z3Z+vvsn5CSBw==
Received: from sofa.misterjones.org ([185.219.108.64] helo=why.misterjones.org)
 by disco-boy.misterjones.org with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.95)
 (envelope-from <maz@kernel.org>) id 1oE6Ge-008kEn-KB;
 Wed, 20 Jul 2022 10:45:20 +0100
Date: Wed, 20 Jul 2022 10:45:20 +0100
Message-ID: <875yjsyv67.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Ricardo Koller <ricarkol@google.com>
Subject: Re: [kvm-unit-tests PATCH 3/3] arm: pmu: Remove checks for !overflow
 in chained counters tests
In-Reply-To: <Yte/YXWYSikyQcqh@google.com>
References: <20220718154910.3923412-1-ricarkol@google.com>
 <20220718154910.3923412-4-ricarkol@google.com>
 <87edyhz68i.wl-maz@kernel.org> <Yte/YXWYSikyQcqh@google.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: ricarkol@google.com, kvm@vger.kernel.org,
 kvmarm@lists.cs.columbia.edu, drjones@redhat.com, alexandru.elisei@arm.com,
 eric.auger@redhat.com, oliver.upton@linux.dev, reijiw@google.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org);
 SAEximRunCond expanded to false
Cc: drjones@redhat.com, kvm@vger.kernel.org, oliver.upton@linux.dev,
 kvmarm@lists.cs.columbia.edu
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

On Wed, 20 Jul 2022 09:40:01 +0100,
Ricardo Koller <ricarkol@google.com> wrote:
> 
> On Tue, Jul 19, 2022 at 12:34:05PM +0100, Marc Zyngier wrote:
> > On Mon, 18 Jul 2022 16:49:10 +0100,
> > Ricardo Koller <ricarkol@google.com> wrote:
> > > 
> > > A chained event overflowing on the low counter can set the overflow flag
> > > in PMOVS.  KVM does not set it, but real HW and the fast-model seem to.
> > > Moreover, the AArch64.IncrementEventCounter() pseudocode in the ARM ARM
> > > (DDI 0487H.a, J1.1.1 "aarch64/debug") also sets the PMOVS bit on
> > > overflow.
> > 
> > Isn't this indicative of a bug in the KVM emulation? To be honest, the
> > pseudocode looks odd. It says:
> > 
> > <quote>
> > 	if old_value<64:ovflw> != new_value<64:ovflw> then
> > 	    PMOVSSET_EL0<idx> = '1';
> > 	    PMOVSCLR_EL0<idx> = '1';
> > </quote>
> > 
> > which I find remarkably ambiguous. Is this setting and clearing the
> > overflow bit? Or setting it in the single register that backs the two
> > accessors in whatever way it can?
> > 
> > If it is the second interpretation that is correct, then KVM
> > definitely needs fixing
> 
> I think it's the second, as those two "= '1'" apply to the non-chained
> counters case as well, which should definitely set the bit in PMOVSSET.
> 
> > (though this looks pretty involved for
> > anything that isn't a SWINC event).
> 
> Ah, I see, there's a pretty convenient kvm_pmu_software_increment() for
> SWINC, but a non-SWINC event is implemented as a single 64-bit perf
> event.

Indeed. Which means we need to de-optimise chained counters to being
32bit events, which is pretty annoying (for rapidly firing events, the
interrupt rate is going to be significantly higher).

I guess we should also investigate the support for FEAT_PMUv3p5 and
native 64bit counters. Someone is bound to build it at some point.

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.
_______________________________________________
kvmarm mailing list
kvmarm@lists.cs.columbia.edu
https://lists.cs.columbia.edu/mailman/listinfo/kvmarm
