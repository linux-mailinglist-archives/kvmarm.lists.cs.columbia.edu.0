Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id 6B898508FCB
	for <lists+kvmarm@lfdr.de>; Wed, 20 Apr 2022 20:50:35 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id D39E44B15E;
	Wed, 20 Apr 2022 14:50:34 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: -1.789
X-Spam-Level: 
X-Spam-Status: No, score=-1.789 required=6.1 tests=[BAYES_00=-1.9,
	DKIM_SIGNED=0.1, T_DKIM_INVALID=0.01, URIBL_BLOCKED=0.001]
	autolearn=unavailable
Authentication-Results: mm01.cs.columbia.edu (amavisd-new); dkim=softfail
	(fail, message has been altered) header.i=@kernel.org
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 2IsCgjQDl5YZ; Wed, 20 Apr 2022 14:50:34 -0400 (EDT)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 852874B175;
	Wed, 20 Apr 2022 14:50:33 -0400 (EDT)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 0263C4B15E
 for <kvmarm@lists.cs.columbia.edu>; Wed, 20 Apr 2022 14:50:33 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id l5dol3W3z2hF for <kvmarm@lists.cs.columbia.edu>;
 Wed, 20 Apr 2022 14:50:31 -0400 (EDT)
Received: from dfw.source.kernel.org (dfw.source.kernel.org [139.178.84.217])
 by mm01.cs.columbia.edu (Postfix) with ESMTPS id A2AFF4B15C
 for <kvmarm@lists.cs.columbia.edu>; Wed, 20 Apr 2022 14:50:31 -0400 (EDT)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by dfw.source.kernel.org (Postfix) with ESMTPS id E5FDB60FCA;
 Wed, 20 Apr 2022 18:50:30 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id B08FDC385A0;
 Wed, 20 Apr 2022 18:50:30 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1650480630;
 bh=TtpYHAojBKeFkFtzR8GvyFddahkz6NTMC2Tu1YaWfEc=;
 h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
 b=KXNNu8UMbtulTxejPpUKkAbRITmuRqN5XhQAMhPdb4UZvhS3Q6ohduM35eWAf6DaG
 6m3esYRyAT2ZvvWyOGSverrpS7o5XSscZgK914A348XuJHwxEIb2d6t1rRHc+23fKx
 nLWP+8kSDqH/C/WYjaljQBtfPGp7S/VsQlrtXoe2FFUfE4pSp12NrVNzlC+yC/eAEF
 7yEBLDTnFMpgjI2r4AVm+htUubzXRUGtNjC4X+ljhAZdSblVukmanvG0XXyWduWO8k
 gVWgYgYlREVbK1WFHApeoJhSwA0axqaW2yBtDrVQEIjzX7UIQpXlGpsJN6DRt4ffj5
 d+qhujr3KSC0Q==
Received: from sofa.misterjones.org ([185.219.108.64] helo=why.misterjones.org)
 by disco-boy.misterjones.org with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.94.2)
 (envelope-from <maz@kernel.org>)
 id 1nhFPI-005hdC-7b; Wed, 20 Apr 2022 19:50:28 +0100
Date: Wed, 20 Apr 2022 19:50:27 +0100
Message-ID: <87ilr3a8ss.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Catalin Marinas <catalin.marinas@arm.com>
Subject: Re: [PATCH v2 00/10] arm64: Add initial support for FEAT_WFxT
In-Reply-To: <YmBBz8yKPAWSHAJo@arm.com>
References: <20220419182755.601427-1-maz@kernel.org> <YmBBz8yKPAWSHAJo@arm.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: catalin.marinas@arm.com,
 linux-arm-kernel@lists.infradead.org, kvmarm@lists.cs.columbia.edu,
 kvm@vger.kernel.org, will@kernel.org, mark.rutland@arm.com,
 james.morse@arm.com, suzuki.poulose@arm.com, alexandru.elisei@arm.com,
 joey.gouly@arm.com, kernel-team@android.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org);
 SAEximRunCond expanded to false
Cc: kernel-team@android.com, kvm@vger.kernel.org,
 Joey Gouly <joey.gouly@arm.com>, Will Deacon <will@kernel.org>,
 kvmarm@lists.cs.columbia.edu, linux-arm-kernel@lists.infradead.org
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

On Wed, 20 Apr 2022 18:24:31 +0100,
Catalin Marinas <catalin.marinas@arm.com> wrote:
> 
> On Tue, Apr 19, 2022 at 07:27:45PM +0100, Marc Zyngier wrote:
> > A potential addition to this series would be to remove the event
> > generation from the counters, and rely on the timeout where it
> > matters (spinlocks?). Feedback welcome.
> 
> I think we still need to keep the event generation around, at least for
> hardware bugs we don't know about. I don't think user-space rely on it
> though, people tend to come up with weird delays like isb ;). But yes,
> the WFET should be handy when it turns up in hardware.

My hope was that the trick of using the event generation to work
around systems failing to broadcast events could become a thing of the
past when WFET is present in the HW. After all, they serve the same
purpose (generate a local event to un-wedge the CPU).

But the more I look at it, the more I hate the potential solution. One
of the issues is that WFxT takes an absolute deadline, rather than a
relative one. So you end up with things like:

	ISB
	MRS	x0, CNTVCT_EL0
	ADD	x0, x0, #some_small_value
	WFET	x0

which is really heavy handed for the slow path of an atomic operation.
Even if you have ECV and CNTVCTSS_EL0 (which allows you to get rid of
the ISB), it is a royal pain.

It would be much better if there was a *relative* version of WFET that
would directly take a timeout relative to the current virtual count,
but I can sense HW designers calling me names already, so I'll shut
up.

	M.

-- 
Without deviation from the norm, progress is not possible.
_______________________________________________
kvmarm mailing list
kvmarm@lists.cs.columbia.edu
https://lists.cs.columbia.edu/mailman/listinfo/kvmarm
