Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id 129064662D9
	for <lists+kvmarm@lfdr.de>; Thu,  2 Dec 2021 12:54:15 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id B61264B1F1;
	Thu,  2 Dec 2021 06:54:14 -0500 (EST)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: 0.909
X-Spam-Level: 
X-Spam-Status: No, score=0.909 required=6.1 tests=[BAYES_00=-1.9,
	DKIM_SIGNED=0.1, DNS_FROM_AHBL_RHSBL=2.699,
	RCVD_IN_DNSWL_NONE=-0.0001, T_DKIM_INVALID=0.01] autolearn=unavailable
Authentication-Results: mm01.cs.columbia.edu (amavisd-new); dkim=softfail
	(fail, message has been altered) header.i=@linaro.org
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 7Hkep3HgSYca; Thu,  2 Dec 2021 06:54:14 -0500 (EST)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id CEC6F4B17C;
	Thu,  2 Dec 2021 06:54:10 -0500 (EST)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id B507C4B20B
 for <kvmarm@lists.cs.columbia.edu>; Thu,  2 Dec 2021 06:54:09 -0500 (EST)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id UvbLb59WYupr for <kvmarm@lists.cs.columbia.edu>;
 Thu,  2 Dec 2021 06:54:08 -0500 (EST)
Received: from mail-wr1-f50.google.com (mail-wr1-f50.google.com
 [209.85.221.50])
 by mm01.cs.columbia.edu (Postfix) with ESMTPS id E937C4B1C9
 for <kvmarm@lists.cs.columbia.edu>; Thu,  2 Dec 2021 06:54:05 -0500 (EST)
Received: by mail-wr1-f50.google.com with SMTP id i5so59081938wrb.2
 for <kvmarm@lists.cs.columbia.edu>; Thu, 02 Dec 2021 03:54:05 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=5qrZomYEfS1eQv8dSqIYkm1o8Qv98maLqRFTfMX4vPc=;
 b=nUEiK5nR6AdzMizvXdj6V06/i75iEb/LRYTcMFVkucIBk0/9Plk+0XmBiDq9swFkS0
 mXcaUjY+vbvFUVbFS+mHQeE1SA6S8GXlCqY7Q1wtVR1+mBxffDm1db4F5HD/lStV5j6J
 w2m1hXQATS4/4yjIgS/f73yvXH2KeT5VLJ1KCr5ynQgsgnB2Qxe3+YEEV4Q9cEtQwzfY
 K8a+R2E9g6p/wnHh+PxgdkcAzgJ7XSGuaoa+lzZT5ZJANpDLVL4d5XxOM3aPkl5nCFWB
 KOxwC8/Oc1wOQhlvrxXOgcMS1XBI0f+POR9VJQrqOSQssIYQo+I8cNG4AahfNmLYBgr3
 +B8w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=5qrZomYEfS1eQv8dSqIYkm1o8Qv98maLqRFTfMX4vPc=;
 b=HM2rQ4Kkh8zTOxlLRKS3BVyoqyDP3TslUxvKgzJ0/MNDzAzJOeWAx5gKFMx6GxjEdU
 xBTi9AnQtku6iz+au0Rs7CmSyWGPsi5b1R//PWjWOK29qs+YEFmqs4C/fmL1kHADoVJR
 XkA/cnVhwwZbjOEJWcScgDhfLUyKC3/myxAz/5QUe/fvvxYLNyzYIwKQmEJHdd+Mcg89
 PwMHNIOJXKbS4xpAsRw/PjoLLYuatnQRe9pCwmp8zWiv1udNDZFyPYI2q0VCLcfzQ9gY
 LwJxzwq8TCToYccmXYUciNE0rVTeQ/tun0L1z6EWkI8P/lNwW4RT3C8mmWWFXJ8qf8ik
 0kcw==
X-Gm-Message-State: AOAM5314vqUWZTHLOegdN0I4SOQ6NxDGpLZ6p8zrPboIpOXZ4mWYu6Ld
 HLOJtqV2Y5IvrdJuzI3wri9BmQ==
X-Google-Smtp-Source: ABdhPJxbbpYZ0p2rsevY+kRWjTuw212pPJF0u3W7uB5ncxf7vNnsTFJHQ/+xiHqlNhuFpiDogKN6rA==
X-Received: by 2002:adf:fb09:: with SMTP id c9mr13716612wrr.223.1638446045065; 
 Thu, 02 Dec 2021 03:54:05 -0800 (PST)
Received: from zen.linaroharston ([51.148.130.216])
 by smtp.gmail.com with ESMTPSA id s63sm2154085wme.22.2021.12.02.03.53.54
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 02 Dec 2021 03:53:59 -0800 (PST)
Received: from zen.lan (localhost [127.0.0.1])
 by zen.linaroharston (Postfix) with ESMTP id DFFEF1FF9D;
 Thu,  2 Dec 2021 11:53:52 +0000 (GMT)
From: =?UTF-8?q?Alex=20Benn=C3=A9e?= <alex.bennee@linaro.org>
To: pbonzini@redhat.com,
	drjones@redhat.com,
	thuth@redhat.com
Subject: [kvm-unit-tests PATCH v9 6/9] arm/locking-tests: add comprehensive
 locking test
Date: Thu,  2 Dec 2021 11:53:49 +0000
Message-Id: <20211202115352.951548-7-alex.bennee@linaro.org>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20211202115352.951548-1-alex.bennee@linaro.org>
References: <20211202115352.951548-1-alex.bennee@linaro.org>
MIME-Version: 1.0
Cc: kvm@vger.kernel.org, maz@kernel.org, christoffer.dall@arm.com,
 qemu-arm@nongnu.org, kvmarm@lists.cs.columbia.edu,
 linux-arm-kernel@lists.infradead.org
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

VGhpcyB0ZXN0IGhhcyBiZWVuIHdyaXR0ZW4gbWFpbmx5IHRvIHN0cmVzcyBtdWx0aS10aHJlYWRl
ZCBUQ0cgYmVoYXZpb3VyCmJ1dCB3aWxsIGRlbW9uc3RyYXRlIGZhaWx1cmUgYnkgZGVmYXVsdCBv
biByZWFsIGhhcmR3YXJlLiBUaGUgdGVzdCB0YWtlcwp0aGUgZm9sbG93aW5nIHBhcmFtZXRlcnM6
CgogIC0gImxvY2siIHVzZSBHQ0MncyBsb2NraW5nIHNlbWFudGljcwogIC0gImF0b21pYyIgdXNl
IEdDQydzIF9fYXRvbWljIHByaW1pdGl2ZXMKICAtICJ3ZmVsb2NrIiB1c2UgV2FpdEZvckV2ZW50
IHNsZWVwCiAgLSAiZXhjbCIgdXNlIGxvYWQvc3RvcmUgZXhjbHVzaXZlIHNlbWFudGljcwoKQWxz
byB0d28gbW9yZSBvcHRpb25zIGFsbG93IHRoZSB0ZXN0IHRvIGJlIHR3ZWFrZWQKCiAgLSAibm9z
aHVmZmxlIiBkaXNhYmxlcyB0aGUgbWVtb3J5IHNodWZmbGluZwogIC0gImNvdW50PSVsZCIgc2V0
IHlvdXIgb3duIHBlci1DUFUgaW5jcmVtZW50IGNvdW50CgpTaWduZWQtb2ZmLWJ5OiBBbGV4IEJl
bm7DqWUgPGFsZXguYmVubmVlQGxpbmFyby5vcmc+Ck1lc3NhZ2UtSWQ6IDwyMDIxMTExODE4NDY1
MC42NjE1NzUtOC1hbGV4LmJlbm5lZUBsaW5hcm8ub3JnPgoKLS0tCnY5CiAgLSBtb3ZlIGJhY2sg
dG8gdW5pdHRlc3RzLmNmZywgZHJvcCBhY2NlbD10Y2cKICAtIHMvcHJpbnRmL3JlcG9ydF9pbmZv
Ci0tLQogYXJtL01ha2VmaWxlLmNvbW1vbiB8ICAgMiArLQogYXJtL2xvY2tpbmctdGVzdC5jICB8
IDMyMiArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogYXJtL3Nw
aW5sb2NrLXRlc3QuYyB8ICA4NyAtLS0tLS0tLS0tLS0KIGFybS91bml0dGVzdHMuY2ZnICAgfCAg
MzAgKysrKysKIDQgZmlsZXMgY2hhbmdlZCwgMzUzIGluc2VydGlvbnMoKyksIDg4IGRlbGV0aW9u
cygtKQogY3JlYXRlIG1vZGUgMTAwNjQ0IGFybS9sb2NraW5nLXRlc3QuYwogZGVsZXRlIG1vZGUg
MTAwNjQ0IGFybS9zcGlubG9jay10ZXN0LmMKCmRpZmYgLS1naXQgYS9hcm0vTWFrZWZpbGUuY29t
bW9uIGIvYXJtL01ha2VmaWxlLmNvbW1vbgppbmRleCBlM2YwNGYyZC4uZjkwNTk3MTggMTAwNjQ0
Ci0tLSBhL2FybS9NYWtlZmlsZS5jb21tb24KKysrIGIvYXJtL01ha2VmaWxlLmNvbW1vbgpAQCAt
NSw3ICs1LDYgQEAKICMKIAogdGVzdHMtY29tbW9uICA9ICQoVEVTVF9ESVIpL3NlbGZ0ZXN0LmZs
YXQKLXRlc3RzLWNvbW1vbiArPSAkKFRFU1RfRElSKS9zcGlubG9jay10ZXN0LmZsYXQKIHRlc3Rz
LWNvbW1vbiArPSAkKFRFU1RfRElSKS9wY2ktdGVzdC5mbGF0CiB0ZXN0cy1jb21tb24gKz0gJChU
RVNUX0RJUikvcG11LmZsYXQKIHRlc3RzLWNvbW1vbiArPSAkKFRFU1RfRElSKS9naWMuZmxhdApA
QCAtMTMsNiArMTIsNyBAQCB0ZXN0cy1jb21tb24gKz0gJChURVNUX0RJUikvcHNjaS5mbGF0CiB0
ZXN0cy1jb21tb24gKz0gJChURVNUX0RJUikvc2lldmUuZmxhdAogdGVzdHMtY29tbW9uICs9ICQo
VEVTVF9ESVIpL3BsMDMxLmZsYXQKIHRlc3RzLWNvbW1vbiArPSAkKFRFU1RfRElSKS90bGJmbHVz
aC1jb2RlLmZsYXQKK3Rlc3RzLWNvbW1vbiArPSAkKFRFU1RfRElSKS9sb2NraW5nLXRlc3QuZmxh
dAogCiB0ZXN0cy1hbGwgPSAkKHRlc3RzLWNvbW1vbikgJCh0ZXN0cykKIGFsbDogZGlyZWN0b3Jp
ZXMgJCh0ZXN0cy1hbGwpCmRpZmYgLS1naXQgYS9hcm0vbG9ja2luZy10ZXN0LmMgYi9hcm0vbG9j
a2luZy10ZXN0LmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAuLjkzZDkyNTBj
Ci0tLSAvZGV2L251bGwKKysrIGIvYXJtL2xvY2tpbmctdGVzdC5jCkBAIC0wLDAgKzEsMzIyIEBA
CisvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vci1sYXRlcgorLyoKKyAqIExv
Y2tpbmcgVGVzdAorICoKKyAqIFRoaXMgdGVzdCBhbGxvd3MgdXMgdG8gc3RyZXNzIHRoZSB2YXJp
b3VzIGF0b21pYyBwcmltaXRpdmVzIG9mIGEgVk0KKyAqIGd1ZXN0LiBBIG51bWJlciBvZiBtZXRo
b2RzIGFyZSBhdmFpbGFibGUgdGhhdCB1c2UgdmFyaW91cyBwYXR0ZXJucworICogdG8gaW1wbGVt
ZW50IGEgbG9jay4KKyAqCisgKiBDb3B5cmlnaHQgKEMpIDIwMTcgTGluYXJvCisgKiBBdXRob3I6
IEFsZXggQmVubsOpZSA8YWxleC5iZW5uZWVAbGluYXJvLm9yZz4KKyAqCisgKiBUaGlzIHByb2dy
YW0gaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlm
eQorICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5z
ZSB2ZXJzaW9uIDIgYXMKKyAqIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0
aW9uLgorICovCisKKyNpbmNsdWRlIDxsaWJjZmxhdC5oPgorI2luY2x1ZGUgPGFzbS9zbXAuaD4K
KyNpbmNsdWRlIDxhc20vY3B1bWFzay5oPgorI2luY2x1ZGUgPGFzbS9iYXJyaWVyLmg+CisjaW5j
bHVkZSA8YXNtL21tdS5oPgorCisjaW5jbHVkZSA8cHJuZy5oPgorCisjZGVmaW5lIE1BWF9DUFVT
IDgKKworLyogVGVzdCBkZWZpbml0aW9uIHN0cnVjdHVyZQorICoKKyAqIEEgc2ltcGxlIHN0cnVj
dHVyZSB0aGF0IGRlc2NyaWJlcyB0aGUgdGVzdCBuYW1lLCBleHBlY3RlZCBwYXNzIGFuZAorICog
aW5jcmVtZW50IGZ1bmN0aW9uLgorICovCisKKy8qIEZ1bmN0aW9uIHBvaW50ZXJzIGZvciB0ZXN0
ICovCit0eXBlZGVmIHZvaWQgKCppbmNfZm4pKGludCBjcHUpOworCit0eXBlZGVmIHN0cnVjdCB7
CisJY29uc3QgY2hhciAqdGVzdF9uYW1lOworCWJvb2wgIHNob3VsZF9wYXNzOworCWluY19mbiBt
YWluX2ZuOworfSB0ZXN0X2Rlc2NyX3Q7CisKKy8qIEhvdyBtYW55IGluY3JlbWVudHMgdG8gZG8g
Ki8KK3N0YXRpYyBpbnQgaW5jcmVtZW50X2NvdW50ID0gMTAwMDAwMDsKK3N0YXRpYyBib29sIGRv
X3NodWZmbGUgPSB0cnVlOworCisvKiBTaGFyZWQgdmFsdWUgYWxsIHRoZSB0ZXN0cyBhdHRlbXB0
IHRvIHNhZmVseSBpbmNyZW1lbnQgdXNpbmcKKyAqIHZhcmlvdXMgZm9ybXMgb2YgYXRvbWljIGxv
Y2tpbmcgYW5kIGV4Y2x1c2l2ZSBiZWhhdmlvdXIuCisgKi8KK3N0YXRpYyB1bnNpZ25lZCBpbnQg
c2hhcmVkX3ZhbHVlOworCisvKiBQQUdFX1NJWkUgKiB1aW50MzJfdCBtZWFucyB3ZSBzcGFuIHNl
dmVyYWwgcGFnZXMgKi8KK19fYXR0cmlidXRlX18oKGFsaWduZWQoUEFHRV9TSVpFKSkpIHN0YXRp
YyB1aW50MzJfdCBtZW1vcnlfYXJyYXlbUEFHRV9TSVpFXTsKKworLyogV2UgdXNlIHRoZSBhbGln
bm1lbnQgb2YgdGhlIGZvbGxvd2luZyB0byBlbnN1cmUgYWNjZXNzZXMgdG8gbG9ja2luZworICog
YW5kIHN5bmNocm9uaXNhdGlvbiBwcmltYXRpdmVzIGRvbid0IGludGVyZmVyZSB3aXRoIHRoZSBw
YWdlIG9mIHRoZQorICogc2hhcmVkIHZhbHVlCisgKi8KK19fYXR0cmlidXRlX18oKGFsaWduZWQo
UEFHRV9TSVpFKSkpIHN0YXRpYyB1bnNpZ25lZCBpbnQgcGVyX2NwdV92YWx1ZVtNQVhfQ1BVU107
CitfX2F0dHJpYnV0ZV9fKChhbGlnbmVkKFBBR0VfU0laRSkpKSBzdGF0aWMgY3B1bWFza190IHNt
cF90ZXN0X2NvbXBsZXRlOworX19hdHRyaWJ1dGVfXygoYWxpZ25lZChQQUdFX1NJWkUpKSkgc3Ry
dWN0IGlzYWFjX2N0eCBwcm5nX2NvbnRleHRbTUFYX0NQVVNdOworCisvKiBTb21lIG9mIHRoZSBh
cHByb2FjaGVzIHVzZSBhIGdsb2JhbCBsb2NrIHRvIHByZXZlbnQgY29udGVudGlvbi4gKi8KK3N0
YXRpYyBpbnQgZ2xvYmFsX2xvY2s7CisKKy8qIEluIGFueSBTTVAgc2V0dGluZyB0aGlzICpzaG91
bGQqIGZhaWwgZHVlIHRvIGNvcmVzIHN0ZXBwaW5nIG9uCisgKiBlYWNoIG90aGVyIHVwZGF0aW5n
IHRoZSBzaGFyZWQgdmFyaWFibGUKKyAqLworc3RhdGljIHZvaWQgaW5jcmVtZW50X3NoYXJlZChp
bnQgY3B1KQoreworCSh2b2lkKWNwdTsKKworCXNoYXJlZF92YWx1ZSsrOworfQorCisvKiBHQ0Mg
X19zeW5jIHByaW1pdGl2ZXMgYXJlIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIF9fYXRvbWljICov
CitzdGF0aWMgdm9pZCBpbmNyZW1lbnRfc2hhcmVkX3dpdGhfbG9jayhpbnQgY3B1KQoreworCSh2
b2lkKWNwdTsKKworCXdoaWxlIChfX3N5bmNfbG9ja190ZXN0X2FuZF9zZXQoJmdsb2JhbF9sb2Nr
LCAxKSk7CisKKwlzaGFyZWRfdmFsdWUrKzsKKworCV9fc3luY19sb2NrX3JlbGVhc2UoJmdsb2Jh
bF9sb2NrKTsKK30KKworLyoKKyAqIEluIHByYWN0aWNlIGV2ZW4gX19BVE9NSUNfUkVMQVhFRCB1
c2VzIEFSTSdzIGxkeHIvc3RleCBleGNsdXNpdmUKKyAqIHNlbWFudGljcworICovCitzdGF0aWMg
dm9pZCBpbmNyZW1lbnRfc2hhcmVkX3dpdGhfYXRvbWljKGludCBjcHUpCit7CisJKHZvaWQpY3B1
OworCisJX19hdG9taWNfYWRkX2ZldGNoKCZzaGFyZWRfdmFsdWUsIDEsIF9fQVRPTUlDX1NFUV9D
U1QpOworfQorCisKKy8qCisgKiBMb2FkL3N0b3JlIGV4Y2x1c2l2ZSB3aXRoIFdGRSAod2FpdC1m
b3ItZXZlbnQpCisgKgorICogU2VlIEFSTXY4IEFSTSBleGFtcGxlczoKKyAqICAgVXNlIG9mIFdh
aXQgRm9yIEV2ZW50IChXRkUpIGFuZCBTZW5kIEV2ZW50IChTRVYpIHdpdGggbG9ja3MKKyAqLwor
CitzdGF0aWMgdm9pZCBpbmNyZW1lbnRfc2hhcmVkX3dpdGhfd2ZlbG9jayhpbnQgY3B1KQorewor
CSh2b2lkKWNwdTsKKworI2lmIGRlZmluZWQoX19hYXJjaDY0X18pCisJYXNtIHZvbGF0aWxlKAor
CSIJbW92ICAgICB3MSwgIzFcbiIKKwkiICAgICAgIHNldmxcbiIKKwkiICAgICAgIHByZm0gUFNU
TDFLRUVQLCBbJVtsb2NrXV1cbiIKKwkiMTogICAgIHdmZVxuIgorCSIJbGRheHIJdzAsIFslW2xv
Y2tdXVxuIgorCSIJY2JueiAgICB3MCwgMWJcbiIKKwkiCXN0eHIgICAgdzAsIHcxLCBbJVtsb2Nr
XV1cbiIKKwkiCWNibnoJdzAsIDFiXG4iCisJLyogbG9jayBoZWxkICovCisJIglsZHIJdzAsIFsl
W3NwdHJdXVxuIgorCSIJYWRkCXcwLCB3MCwgIzB4MVxuIgorCSIJc3RyCXcwLCBbJVtzcHRyXV1c
biIKKwkvKiBub3cgcmVsZWFzZSAqLworCSIJc3Rscgl3enIsIFslW2xvY2tdXVxuIgorCTogLyog
b3V0ICovCisJOiBbbG9ja10gInIiICgmZ2xvYmFsX2xvY2spLCBbc3B0cl0gInIiICgmc2hhcmVk
X3ZhbHVlKSAvKiBpbiAqLworCTogIncwIiwgIncxIiwgImNjIik7CisjZWxzZQorCWFzbSB2b2xh
dGlsZSgKKwkiCW1vdiAgICAgcjEsICMxXG4iCisJIjE6CWxkcmV4CXIwLCBbJVtsb2NrXV1cbiIK
KwkiCWNtcCAgICAgcjAsICMwXG4iCisJIgl3ZmVuZVxuIgorCSIJc3RyZXhlcSByMCwgcjEsIFsl
W2xvY2tdXVxuIgorCSIJY21wZXEJcjAsICMwXG4iCisJIglibmUJMWJcbiIKKwkiCWRtYlxuIgor
CS8qIGxvY2sgaGVsZCAqLworCSIJbGRyCXIwLCBbJVtzcHRyXV1cbiIKKwkiCWFkZAlyMCwgcjAs
ICMweDFcbiIKKwkiCXN0cglyMCwgWyVbc3B0cl1dXG4iCisJLyogbm93IHJlbGVhc2UgKi8KKwki
CW1vdglyMCwgIzBcbiIKKwkiCWRtYlxuIgorCSIJc3RyCXIwLCBbJVtsb2NrXV1cbiIKKwkiCWRz
YlxuIgorCSIJc2V2XG4iCisJOiAvKiBvdXQgKi8KKwk6IFtsb2NrXSAiciIgKCZnbG9iYWxfbG9j
ayksIFtzcHRyXSAiciIgKCZzaGFyZWRfdmFsdWUpIC8qIGluICovCisJOiAicjAiLCAicjEiLCAi
Y2MiKTsKKyNlbmRpZgorfQorCisKKy8qCisgKiBIYW5kLXdyaXR0ZW4gdmVyc2lvbiBvZiB0aGUg
bG9hZC9zdG9yZSBleGNsdXNpdmUKKyAqLworc3RhdGljIHZvaWQgaW5jcmVtZW50X3NoYXJlZF93
aXRoX2V4Y2woaW50IGNwdSkKK3sKKwkodm9pZCljcHU7CisKKyNpZiBkZWZpbmVkKF9fYWFyY2g2
NF9fKQorCWFzbSB2b2xhdGlsZSgKKwkiMToJbGR4cgl3MCwgWyVbc3B0cl1dXG4iCisJIglhZGQg
ICAgIHcwLCB3MCwgIzB4MVxuIgorCSIJc3R4cgl3MSwgdzAsIFslW3NwdHJdXVxuIgorCSIJY2Ju
egl3MSwgMWJcbiIKKwk6IC8qIG91dCAqLworCTogW3NwdHJdICJyIiAoJnNoYXJlZF92YWx1ZSkg
LyogaW4gKi8KKwk6ICJ3MCIsICJ3MSIsICJjYyIpOworI2Vsc2UKKwlhc20gdm9sYXRpbGUoCisJ
IjE6CWxkcmV4CXIwLCBbJVtzcHRyXV1cbiIKKwkiCWFkZCAgICAgcjAsIHIwLCAjMHgxXG4iCisJ
IglzdHJleAlyMSwgcjAsIFslW3NwdHJdXVxuIgorCSIJY21wCXIxLCAjMFxuIgorCSIJYm5lCTFi
XG4iCisJOiAvKiBvdXQgKi8KKwk6IFtzcHRyXSAiciIgKCZzaGFyZWRfdmFsdWUpIC8qIGluICov
CisJOiAicjAiLCAicjEiLCAiY2MiKTsKKyNlbmRpZgorfQorCisvKiBUZXN0IGFycmF5ICovCitz
dGF0aWMgdGVzdF9kZXNjcl90IHRlc3RzW10gPSB7CisJeyAibm9uZSIsIGZhbHNlLCBpbmNyZW1l
bnRfc2hhcmVkIH0sCisJeyAibG9jayIsIHRydWUsIGluY3JlbWVudF9zaGFyZWRfd2l0aF9sb2Nr
IH0sCisJeyAiYXRvbWljIiwgdHJ1ZSwgaW5jcmVtZW50X3NoYXJlZF93aXRoX2F0b21pYyB9LAor
CXsgIndmZWxvY2siLCB0cnVlLCBpbmNyZW1lbnRfc2hhcmVkX3dpdGhfd2ZlbG9jayB9LAorCXsg
ImV4Y2wiLCB0cnVlLCBpbmNyZW1lbnRfc2hhcmVkX3dpdGhfZXhjbCB9Cit9OworCisvKiBUaGUg
aWRlYSBvZiB0aGlzIGlzIGp1c3QgdG8gZ2VuZXJhdGUgc29tZSByYW5kb20gbG9hZC9zdG9yZQor
ICogYWN0aXZpdHkgd2hpY2ggbWF5IG9yIG1heSBub3QgcmFjZSB3aXRoIGFuIHVuLWJhcnJpZWQg
aW5jcmVtZW50ZWQKKyAqIG9mIHRoZSBzaGFyZWQgY291bnRlcgorICovCitzdGF0aWMgdm9pZCBz
aHVmZmxlX21lbW9yeShpbnQgY3B1KQoreworCWludCBpOworCXVpbnQzMl90IGxzcGF0ID0gaXNh
YWNfbmV4dF91aW50MzIoJnBybmdfY29udGV4dFtjcHVdKTsKKwl1aW50MzJfdCBzZXEgPSBpc2Fh
Y19uZXh0X3VpbnQzMigmcHJuZ19jb250ZXh0W2NwdV0pOworCWludCBjb3VudCA9IHNlcSAmIDB4
MWY7CisJdWludDMyX3QgdmFsID0gMDsKKworCXNlcSA+Pj0gNTsKKworCWZvciAoaSA9IDA7IGkg
PCBjb3VudDsgaSsrKSB7CisJCWludCBpbmRleCA9IHNlcSAmIH5QQUdFX01BU0s7CisKKwkJaWYg
KGxzcGF0ICYgMSkKKwkJCXZhbCBePSBtZW1vcnlfYXJyYXlbaW5kZXhdOworCQllbHNlCisJCQlt
ZW1vcnlfYXJyYXlbaW5kZXhdID0gdmFsOworCisJCXNlcSA+Pj0gUEFHRV9TSElGVDsKKwkJc2Vx
IF49IGxzcGF0OworCQlsc3BhdCA+Pj0gMTsKKwl9CisKK30KKworc3RhdGljIGluY19mbiBpbmNy
ZW1lbnRfZnVuY3Rpb247CisKK3N0YXRpYyB2b2lkIGRvX2luY3JlbWVudCh2b2lkKQoreworCWlu
dCBpOworCWludCBjcHUgPSBzbXBfcHJvY2Vzc29yX2lkKCk7CisKKwlyZXBvcnRfaW5mbygiQ1BV
JWQ6IG9ubGluZSBhbmQgKytpbmciLCBjcHUpOworCisJZm9yIChpID0gMDsgaSA8IGluY3JlbWVu
dF9jb3VudDsgaSsrKSB7CisJCXBlcl9jcHVfdmFsdWVbY3B1XSsrOworCQlpbmNyZW1lbnRfZnVu
Y3Rpb24oY3B1KTsKKworCQlpZiAoZG9fc2h1ZmZsZSkKKwkJCXNodWZmbGVfbWVtb3J5KGNwdSk7
CisJfQorCisJcmVwb3J0X2luZm8oIkNQVSVkOiBEb25lLCAlZCBpbmNzXG4iLCBjcHUsIHBlcl9j
cHVfdmFsdWVbY3B1XSk7CisKKwljcHVtYXNrX3NldF9jcHUoY3B1LCAmc21wX3Rlc3RfY29tcGxl
dGUpOworCWlmIChjcHUgIT0gMCkKKwkJaGFsdCgpOworfQorCitzdGF0aWMgdm9pZCBzZXR1cF9h
bmRfcnVuX3Rlc3QodGVzdF9kZXNjcl90ICp0ZXN0KQoreworCXVuc2lnbmVkIGludCBpLCBzdW0g
PSAwOworCWludCBjcHUsIGNwdV9jbnQgPSAwOworCisJaW5jcmVtZW50X2Z1bmN0aW9uID0gdGVz
dC0+bWFpbl9mbjsKKworCS8qIGZpbGwgb3VyIHJhbmRvbSBwYWdlICovCisJZm9yIChpID0gMDsg
aSA8IFBBR0VfU0laRTsgaSsrKQorCQltZW1vcnlfYXJyYXlbaV0gPSBpc2FhY19uZXh0X3VpbnQz
MigmcHJuZ19jb250ZXh0WzBdKTsKKworCWZvcl9lYWNoX3ByZXNlbnRfY3B1KGNwdSkgeworCQl1
aW50MzJfdCBzZWVkMiA9IGlzYWFjX25leHRfdWludDMyKCZwcm5nX2NvbnRleHRbMF0pOworCisJ
CWNwdV9jbnQrKzsKKwkJaWYgKGNwdSA9PSAwKQorCQkJY29udGludWU7CisKKwkJaXNhYWNfaW5p
dCgmcHJuZ19jb250ZXh0W2NwdV0sICh1bnNpZ25lZCBjaGFyICopICZzZWVkMiwgc2l6ZW9mKHNl
ZWQyKSk7CisJCXNtcF9ib290X3NlY29uZGFyeShjcHUsIGRvX2luY3JlbWVudCk7CisJfQorCisJ
ZG9faW5jcmVtZW50KCk7CisKKwl3aGlsZSAoIWNwdW1hc2tfZnVsbCgmc21wX3Rlc3RfY29tcGxl
dGUpKQorCQljcHVfcmVsYXgoKTsKKworCS8qIEFsbCBDUFVzIGRvbmUsIGRvIHdlIGFkZCB1cCAq
LworCWZvcl9lYWNoX3ByZXNlbnRfY3B1KGNwdSkgeworCQlzdW0gKz0gcGVyX2NwdV92YWx1ZVtj
cHVdOworCX0KKworCWlmICh0ZXN0LT5zaG91bGRfcGFzcykKKwkJcmVwb3J0KHN1bSA9PSBzaGFy
ZWRfdmFsdWUsICJ0b3RhbCBpbmNzICVkIiwgc2hhcmVkX3ZhbHVlKTsKKwllbHNlCisJCXJlcG9y
dF94ZmFpbCh0cnVlLCBzdW0gPT0gc2hhcmVkX3ZhbHVlLCAidG90YWwgaW5jcyAlZCIsIHNoYXJl
ZF92YWx1ZSk7Cit9CisKK2ludCBtYWluKGludCBhcmdjLCBjaGFyICoqYXJndikKK3sKKwlzdGF0
aWMgY29uc3QgdW5zaWduZWQgY2hhciBzZWVkW10gPSAibXlzZWVkIjsKKwl0ZXN0X2Rlc2NyX3Qg
KnRlc3QgPSAmdGVzdHNbMF07CisJaW50IGk7CisJdW5zaWduZWQgaW50IGo7CisKKwlpc2FhY19p
bml0KCZwcm5nX2NvbnRleHRbMF0sICZzZWVkWzBdLCBzaXplb2Yoc2VlZCkpOworCisJZm9yIChp
ID0gMDsgaSA8IGFyZ2M7IGkrKykgeworCQljaGFyICphcmcgPSBhcmd2W2ldOworCisJCS8qIENo
ZWNrIGZvciB0ZXN0IG5hbWUgKi8KKwkJZm9yIChqID0gMDsgaiA8IEFSUkFZX1NJWkUodGVzdHMp
OyBqKyspIHsKKwkJCWlmIChzdHJjbXAoYXJnLCB0ZXN0c1tqXS50ZXN0X25hbWUpID09IDApCisJ
CQkJdGVzdCA9ICZ0ZXN0c1tqXTsKKwkJfQorCisJCS8qIFRlc3QgbW9kaWZpZXJzICovCisJCWlm
IChzdHJjbXAoYXJnLCAibm9zaHVmZmxlIikgPT0gMCkgeworCQkJZG9fc2h1ZmZsZSA9IGZhbHNl
OworCQkJcmVwb3J0X3ByZWZpeF9wdXNoKCJub3NodWZmbGUiKTsKKwkJfSBlbHNlIGlmIChzdHJz
dHIoYXJnLCAiY291bnQ9IikgIT0gTlVMTCkgeworCQkJY2hhciAqcCA9IHN0cnN0cihhcmcsICI9
Iik7CisKKwkJCWluY3JlbWVudF9jb3VudCA9IGF0b2wocCsxKTsKKwkJfSBlbHNlIHsKKwkJCWlz
YWFjX3Jlc2VlZCgmcHJuZ19jb250ZXh0WzBdLCAodW5zaWduZWQgY2hhciAqKSBhcmcsIHN0cmxl
bihhcmcpKTsKKwkJfQorCX0KKworCWlmICh0ZXN0KQorCQlzZXR1cF9hbmRfcnVuX3Rlc3QodGVz
dCk7CisJZWxzZQorCQlyZXBvcnQoZmFsc2UsICJVbmtub3duIHRlc3QiKTsKKworCXJldHVybiBy
ZXBvcnRfc3VtbWFyeSgpOworfQpkaWZmIC0tZ2l0IGEvYXJtL3NwaW5sb2NrLXRlc3QuYyBiL2Fy
bS9zcGlubG9jay10ZXN0LmMKZGVsZXRlZCBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDczYWVhNzZh
Li4wMDAwMDAwMAotLS0gYS9hcm0vc3BpbmxvY2stdGVzdC5jCisrKyAvZGV2L251bGwKQEAgLTEs
ODcgKzAsMCBAQAotLyoKLSAqIFNwaW5sb2NrIHRlc3QKLSAqCi0gKiBUaGlzIGNvZGUgaXMgYmFz
ZWQgb24gY29kZSBmcm9tIHRoZSB0Y2dfYmFyZW1ldGFsX3Rlc3RzLgotICoKLSAqIENvcHlyaWdo
dCAoQykgMjAxNSBWaXJ0dWFsIE9wZW4gU3lzdGVtcyBTQVMKLSAqCi0gKiBUaGlzIHByb2dyYW0g
aXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeQot
ICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2
ZXJzaW9uIDIgYXMKLSAqIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9u
LgotICovCi0KLSNpbmNsdWRlIDxsaWJjZmxhdC5oPgotI2luY2x1ZGUgPGFzbS9zbXAuaD4KLSNp
bmNsdWRlIDxhc20vYmFycmllci5oPgotCi0jZGVmaW5lIExPT1BfU0laRSAxMDAwMDAwMAotCi1z
dHJ1Y3QgbG9ja19vcHMgewotCXZvaWQgKCpsb2NrKShpbnQgKnYpOwotCXZvaWQgKCp1bmxvY2sp
KGludCAqdik7Ci19Owotc3RhdGljIHN0cnVjdCBsb2NrX29wcyBsb2NrX29wczsKLQotc3RhdGlj
IHZvaWQgZ2NjX2J1aWx0aW5fbG9jayhpbnQgKmxvY2tfdmFyKQotewotCXdoaWxlIChfX3N5bmNf
bG9ja190ZXN0X2FuZF9zZXQobG9ja192YXIsIDEpKTsKLX0KLXN0YXRpYyB2b2lkIGdjY19idWls
dGluX3VubG9jayhpbnQgKmxvY2tfdmFyKQotewotCV9fc3luY19sb2NrX3JlbGVhc2UobG9ja192
YXIpOwotfQotc3RhdGljIHZvaWQgbm9uZV9sb2NrKGludCAqbG9ja192YXIpCi17Ci0Jd2hpbGUg
KCoodm9sYXRpbGUgaW50ICopbG9ja192YXIgIT0gMCk7Ci0JKih2b2xhdGlsZSBpbnQgKilsb2Nr
X3ZhciA9IDE7Ci19Ci1zdGF0aWMgdm9pZCBub25lX3VubG9jayhpbnQgKmxvY2tfdmFyKQotewot
CSoodm9sYXRpbGUgaW50ICopbG9ja192YXIgPSAwOwotfQotCi1zdGF0aWMgaW50IGdsb2JhbF9h
LCBnbG9iYWxfYjsKLXN0YXRpYyBpbnQgZ2xvYmFsX2xvY2s7Ci0KLXN0YXRpYyB2b2lkIHRlc3Rf
c3BpbmxvY2sodm9pZCAqZGF0YSBfX3VudXNlZCkKLXsKLQlpbnQgaSwgZXJyb3JzID0gMDsKLQlp
bnQgY3B1ID0gc21wX3Byb2Nlc3Nvcl9pZCgpOwotCi0JcHJpbnRmKCJDUFUlZCBvbmxpbmVcbiIs
IGNwdSk7Ci0KLQlmb3IgKGkgPSAwOyBpIDwgTE9PUF9TSVpFOyBpKyspIHsKLQotCQlsb2NrX29w
cy5sb2NrKCZnbG9iYWxfbG9jayk7Ci0KLQkJaWYgKGdsb2JhbF9hID09IChjcHUgKyAxKSAlIDIp
IHsKLQkJCWdsb2JhbF9hID0gMTsKLQkJCWdsb2JhbF9iID0gMDsKLQkJfSBlbHNlIHsKLQkJCWds
b2JhbF9hID0gMDsKLQkJCWdsb2JhbF9iID0gMTsKLQkJfQotCi0JCWlmIChnbG9iYWxfYSA9PSBn
bG9iYWxfYikKLQkJCWVycm9ycysrOwotCi0JCWxvY2tfb3BzLnVubG9jaygmZ2xvYmFsX2xvY2sp
OwotCX0KLQlyZXBvcnQoZXJyb3JzID09IDAsICJDUFUlZDogRG9uZSAtIEVycm9yczogJWQiLCBj
cHUsIGVycm9ycyk7Ci19Ci0KLWludCBtYWluKGludCBhcmdjLCBjaGFyICoqYXJndikKLXsKLQly
ZXBvcnRfcHJlZml4X3B1c2goInNwaW5sb2NrIik7Ci0JaWYgKGFyZ2MgPiAxICYmIHN0cmNtcChh
cmd2WzFdLCAiYmFkIikgIT0gMCkgewotCQlsb2NrX29wcy5sb2NrID0gZ2NjX2J1aWx0aW5fbG9j
azsKLQkJbG9ja19vcHMudW5sb2NrID0gZ2NjX2J1aWx0aW5fdW5sb2NrOwotCX0gZWxzZSB7Ci0J
CWxvY2tfb3BzLmxvY2sgPSBub25lX2xvY2s7Ci0JCWxvY2tfb3BzLnVubG9jayA9IG5vbmVfdW5s
b2NrOwotCX0KLQotCW9uX2NwdXModGVzdF9zcGlubG9jaywgTlVMTCk7Ci0KLQlyZXR1cm4gcmVw
b3J0X3N1bW1hcnkoKTsKLX0KZGlmZiAtLWdpdCBhL2FybS91bml0dGVzdHMuY2ZnIGIvYXJtL3Vu
aXR0ZXN0cy5jZmcKaW5kZXggMzRjOGE5NWIuLjBhNzU3NTU2IDEwMDY0NAotLS0gYS9hcm0vdW5p
dHRlc3RzLmNmZworKysgYi9hcm0vdW5pdHRlc3RzLmNmZwpAQCAtMjY2LDMgKzI2NiwzMyBAQCBz
bXAgPSAkKCgkTUFYX1NNUD40PzQ6JE1BWF9TTVApKQogZXh0cmFfcGFyYW1zID0gLWFwcGVuZCAn
cGFnZSBzZWxmJwogZ3JvdXBzID0gbm9kZWZhdWx0IG10dGNnCiAKKyMgTG9ja2luZyB0ZXN0cwor
W2xvY2tpbmc6Om5vbmVdCitmaWxlID0gbG9ja2luZy10ZXN0LmZsYXQKK3NtcCA9ICQoKCRNQVhf
U01QPjQ/NDokTUFYX1NNUCkpCitncm91cHMgPSBub2RlZmF1bHQgbXR0Y2cgbG9ja2luZworCitb
bG9ja2luZzo6bG9ja10KK2ZpbGUgPSBsb2NraW5nLXRlc3QuZmxhdAorc21wID0gJCgoJE1BWF9T
TVA+ND80OiRNQVhfU01QKSkKK2V4dHJhX3BhcmFtcyA9IC1hcHBlbmQgJ2xvY2snCitncm91cHMg
PSBub2RlZmF1bHQgbXR0Y2cgbG9ja2luZworCitbbG9ja2luZzo6YXRvbWljXQorZmlsZSA9IGxv
Y2tpbmctdGVzdC5mbGF0CitzbXAgPSAkKCgkTUFYX1NNUD40PzQ6JE1BWF9TTVApKQorZXh0cmFf
cGFyYW1zID0gLWFwcGVuZCAnYXRvbWljJworZ3JvdXBzID0gbm9kZWZhdWx0IG10dGNnIGxvY2tp
bmcKKworW2xvY2tpbmc6OndmZWxvY2tdCitmaWxlID0gbG9ja2luZy10ZXN0LmZsYXQKK3NtcCA9
ICQoKCRNQVhfU01QPjQ/NDokTUFYX1NNUCkpCitleHRyYV9wYXJhbXMgPSAtYXBwZW5kICd3ZmVs
b2NrJworZ3JvdXBzID0gbm9kZWZhdWx0IG10dGNnIGxvY2tpbmcKKworW2xvY2tpbmc6OmV4Y2xd
CitmaWxlID0gbG9ja2luZy10ZXN0LmZsYXQKK3NtcCA9ICQoKCRNQVhfU01QPjQ/NDokTUFYX1NN
UCkpCitleHRyYV9wYXJhbXMgPSAtYXBwZW5kICdleGNsJworZ3JvdXBzID0gbm9kZWZhdWx0IG10
dGNnIGxvY2tpbmcKKwotLSAKMi4zMC4yCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fXwprdm1hcm0gbWFpbGluZyBsaXN0Cmt2bWFybUBsaXN0cy5jcy5jb2x1
bWJpYS5lZHUKaHR0cHM6Ly9saXN0cy5jcy5jb2x1bWJpYS5lZHUvbWFpbG1hbi9saXN0aW5mby9r
dm1hcm0K
