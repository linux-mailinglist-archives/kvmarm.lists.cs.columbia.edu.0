Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id 1C11B3028D1
	for <lists+kvmarm@lfdr.de>; Mon, 25 Jan 2021 18:27:44 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 87B8D4B48B;
	Mon, 25 Jan 2021 12:27:43 -0500 (EST)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: -1.501
X-Spam-Level: 
X-Spam-Status: No, score=-1.501 required=6.1 tests=[BAYES_00=-1.9,
	DNS_FROM_AHBL_RHSBL=2.699, RCVD_IN_DNSWL_MED=-2.3]
	autolearn=unavailable
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 64+xVAXXGtZR; Mon, 25 Jan 2021 12:27:43 -0500 (EST)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id EFF0F4B460;
	Mon, 25 Jan 2021 12:27:41 -0500 (EST)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 22D3D4B460
 for <kvmarm@lists.cs.columbia.edu>; Mon, 25 Jan 2021 12:27:40 -0500 (EST)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id cqCJB6Ymh7Tr for <kvmarm@lists.cs.columbia.edu>;
 Mon, 25 Jan 2021 12:27:38 -0500 (EST)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 9B5164B44D
 for <kvmarm@lists.cs.columbia.edu>; Mon, 25 Jan 2021 12:27:38 -0500 (EST)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 3C2371063;
 Mon, 25 Jan 2021 09:27:38 -0800 (PST)
Received: from [192.168.0.110] (unknown [172.31.20.19])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 3D4193F68F;
 Mon, 25 Jan 2021 09:27:37 -0800 (PST)
Subject: Re: [kvm-unit-tests PATCH v2 08/12] arm/arm64: gic: Split
 check_acked() into two functions
To: =?UTF-8?Q?Andr=c3=a9_Przywara?= <andre.przywara@arm.com>,
 drjones@redhat.com, kvm@vger.kernel.org, kvmarm@lists.cs.columbia.edu
References: <20201217141400.106137-1-alexandru.elisei@arm.com>
 <20201217141400.106137-9-alexandru.elisei@arm.com>
 <3539c229-fd05-2e1c-2159-995e51e2dcc4@arm.com>
From: Alexandru Elisei <alexandru.elisei@arm.com>
Message-ID: <857a3c2d-772b-0d29-536c-41a829ab8954@arm.com>
Date: Mon, 25 Jan 2021 17:27:35 +0000
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101
 Thunderbird/78.6.1
MIME-Version: 1.0
In-Reply-To: <3539c229-fd05-2e1c-2159-995e51e2dcc4@arm.com>
Content-Language: en-US
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

SGkgQW5kcmUsCgpPbiAxMi8xOC8yMCAzOjUyIFBNLCBBbmRyw6kgUHJ6eXdhcmEgd3JvdGU6Cj4g
T24gMTcvMTIvMjAyMCAxNDoxMywgQWxleGFuZHJ1IEVsaXNlaSB3cm90ZToKPj4gY2hlY2tfYWNr
ZWQoKSBoYXMgc2V2ZXJhbCBwZWN1bGlhcml0aWVzOiBpcyB0aGUgb25seSBmdW5jdGlvbiBhbW9u
ZyB0aGUKPj4gY2hlY2tfKiBmdW5jdGlvbnMgd2hpY2ggY2FsbHMgcmVwb3J0KCkgZGlyZWN0bHks
IGl0IGRvZXMgdHdvIHRoaW5ncwo+PiAod2FpdHMgZm9yIGludGVycnVwdHMgYW5kIGNoZWNrcyBm
b3IgbWlzZmlyZWQgaW50ZXJydXB0cykgYW5kIGl0IGFsc28KPj4gbWl4ZXMgcHJpbnRmLCByZXBv
cnRfaW5mbyBhbmQgcmVwb3J0IGNhbGxzLgo+Pgo+PiBjaGVja19hY2tlZCgpIGFsc28gcmVwb3J0
cyBhIHBhc3MgYW5kIHJldHVybnMgYXMgc29vbiBhbGwgdGhlIHRhcmdldCBDUFVzCj4+IGhhdmUg
cmVjZWl2ZWQgaW50ZXJydXB0cywgSG93ZXZlciwgYSBDUFUgbm90IGhhdmluZyByZWNlaXZlZCBh
biBpbnRlcnJ1cHQKPj4gKm5vdyogZG9lcyBub3QgZ3VhcmFudGVlIG5vdCByZWNlaXZpbmcgYW4g
ZXJyb25lb3VzIGludGVycnVwdCBpZiB3ZSB3YWl0Cj4+IGxvbmcgZW5vdWdoLgo+Pgo+PiBSZXdv
cmsgdGhlIGZ1bmN0aW9uIGJ5IHNwbGl0dGluZyBpdCBpbnRvIHR3byBzZXBhcmF0ZSBmdW5jdGlv
bnMsIGVhY2ggd2l0aAo+PiBhIHNpbmdsZSByZXNwb25zaWJpbGl0eTogd2FpdF9mb3JfaW50ZXJy
dXB0cygpLCB3aGljaCB3YWl0cyBmb3IgdGhlCj4+IGV4cGVjdGVkIGludGVycnVwdHMgdG8gZmly
ZSwgYW5kIGNoZWNrX2Fja2VkKCkgd2hpY2ggY2hlY2tzIHRoYXQgaW50ZXJydXB0cwo+PiBoYXZl
IGJlZW4gcmVjZWl2ZWQgYXMgZXhwZWN0ZWQuCj4+Cj4+IHdhaXRfZm9yX2ludGVycnVwdHMoKSBh
bHNvIHdhaXRzIGFuIGV4dHJhIDEwMCBtaWxsaXNlY29uZHMgYWZ0ZXIgdGhlCj4+IGV4cGVjdGVk
IGludGVycnVwdHMgaGF2ZSBiZWVuIHJlY2VpdmVkIGluIGFuIGVmZm9ydCB0byBtYWtlIHN1cmUg
d2UgZG9uJ3QKPj4gbWlzcyBtaXNmaXJpbmcgaW50ZXJydXB0cy4KPj4KPj4gU3BsaXR0aW5nIGNo
ZWNrX2Fja2VkKCkgaW50byB0d28gZnVuY3Rpb25zIHdpbGwgYWxzbyBhbGxvdyB1cyB0bwo+PiBj
dXN0b21pemUgdGhlIGJlaGF2aW9yIG9mIGVhY2ggZnVuY3Rpb24gaW4gdGhlIGZ1dHVyZSBtb3Jl
IGVhc2lseQo+PiB3aXRob3V0IHVzaW5nIGFuIHVubmVjZXNzYXJpbHkgbG9uZyBsaXN0IG9mIGFy
Z3VtZW50cyBmb3IgY2hlY2tfYWNrZWQoKS4KPiBZZXMsIHNwbGl0dGluZyB0aGlzIHVwIGxvb2tz
IG11Y2ggYmV0dGVyLCBpbiBnZW5lcmFsIHRoaXMgaXMgYSBuaWNlCj4gY2xlYW51cCwgdGhhbmsg
eW91IQo+Cj4gU29tZSBjb21tZW50cyBiZWxvdzoKPgo+PiBDQzogQW5kcmUgUHJ6eXdhcmEgPGFu
ZHJlLnByenl3YXJhQGFybS5jb20+Cj4+IFNpZ25lZC1vZmYtYnk6IEFsZXhhbmRydSBFbGlzZWkg
PGFsZXhhbmRydS5lbGlzZWlAYXJtLmNvbT4KPj4gLS0tCj4+ICBhcm0vZ2ljLmMgfCA3MyArKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tCj4+ICAx
IGZpbGUgY2hhbmdlZCwgNDcgaW5zZXJ0aW9ucygrKSwgMjYgZGVsZXRpb25zKC0pCj4+Cj4+IGRp
ZmYgLS1naXQgYS9hcm0vZ2ljLmMgYi9hcm0vZ2ljLmMKPj4gaW5kZXggZWM3MzM3MTljNzc2Li5h
OWVmMWE1ZGVmNTYgMTAwNjQ0Cj4+IC0tLSBhL2FybS9naWMuYwo+PiArKysgYi9hcm0vZ2ljLmMK
Pj4gQEAgLTYyLDQxICs2Miw0MiBAQCBzdGF0aWMgdm9pZCBzdGF0c19yZXNldCh2b2lkKQo+PiAg
CX0KPj4gIH0KPj4gIAo+PiAtc3RhdGljIHZvaWQgY2hlY2tfYWNrZWQoY29uc3QgY2hhciAqdGVz
dG5hbWUsIGNwdW1hc2tfdCAqbWFzaykKPj4gK3N0YXRpYyB2b2lkIHdhaXRfZm9yX2ludGVycnVw
dHMoY3B1bWFza190ICptYXNrKQo+PiAgewo+PiAtCWludCBtaXNzaW5nID0gMCwgZXh0cmEgPSAw
LCB1bmV4cGVjdGVkID0gMDsKPj4gIAlpbnQgbnJfcGFzcywgY3B1LCBpOwo+PiAtCWJvb2wgYmFk
ID0gZmFsc2U7Cj4+ICAKPj4gIAkvKiBXYWl0IHVwIHRvIDVzIGZvciBhbGwgaW50ZXJydXB0cyB0
byBiZSBkZWxpdmVyZWQgKi8KPj4gLQlmb3IgKGkgPSAwOyBpIDwgNTA7ICsraSkgewo+PiArCWZv
ciAoaSA9IDA7IGkgPCA1MDsgaSsrKSB7Cj4+ICAJCW1kZWxheSgxMDApOwo+PiAgCQlucl9wYXNz
ID0gMDsKPj4gIAkJZm9yX2VhY2hfcHJlc2VudF9jcHUoY3B1KSB7Cj4+ICsJCQkvKgo+PiArCQkJ
ICogQSBDUFUgaGF2aW5nIHJlY2VpdmVkIG1vcmUgdGhhbiBvbmUgaW50ZXJydXB0cyB3aWxsCj4+
ICsJCQkgKiBzaG93IHVwIGluIGNoZWNrX2Fja2VkKCksIGFuZCBubyBtYXR0ZXIgaG93IGxvbmcg
d2UKPj4gKwkJCSAqIHdhaXQgaXQgY2Fubm90IHVuLXJlY2VpdmUgaXQuIENvbnNpZGVyIGF0IGxl
YXN0IG9uZQo+PiArCQkJICogaW50ZXJydXB0IGFzIGEgcGFzcy4KPj4gKwkJCSAqLwo+PiAgCQkJ
bnJfcGFzcyArPSBjcHVtYXNrX3Rlc3RfY3B1KGNwdSwgbWFzaykgPwo+PiAtCQkJCWFja2VkW2Nw
dV0gPT0gMSA6IGFja2VkW2NwdV0gPT0gMDsKPj4gLQkJCXNtcF9ybWIoKTsgLyogcGFpcnMgd2l0
aCBzbXBfd21iIGluIGlwaV9oYW5kbGVyICovCj4+IC0KPj4gLQkJCWlmIChiYWRfc2VuZGVyW2Nw
dV0gIT0gLTEpIHsKPj4gLQkJCQlwcmludGYoImNwdSVkIHJlY2VpdmVkIElQSSBmcm9tIHdyb25n
IHNlbmRlciAlZFxuIiwKPj4gLQkJCQkJY3B1LCBiYWRfc2VuZGVyW2NwdV0pOwo+PiAtCQkJCWJh
ZCA9IHRydWU7Cj4+IC0JCQl9Cj4+IC0KPj4gLQkJCWlmIChiYWRfaXJxW2NwdV0gIT0gLTEpIHsK
Pj4gLQkJCQlwcmludGYoImNwdSVkIHJlY2VpdmVkIHdyb25nIGlycSAlZFxuIiwKPj4gLQkJCQkJ
Y3B1LCBiYWRfaXJxW2NwdV0pOwo+PiAtCQkJCWJhZCA9IHRydWU7Cj4+IC0JCQl9Cj4+ICsJCQkJ
YWNrZWRbY3B1XSA+PSAxIDogYWNrZWRbY3B1XSA9PSAwOwo+Cj4gSSB3b25kZXIgaWYgdGhpcyBs
b2dpYyB3YXMgYWxyZWFkeSBmbGF3ZWQgdG8gYmVnaW4gd2l0aDogRm9yIGludGVycnVwdHMKPiB3
ZSBleHBlY3QgdG8gZmlyZSwgd2Ugd2FpdCBmb3IgdXAgdG8gNSBzZWNvbmRzIChyZWFsbHkgdGhh
dCBsb25nPyksIGJ1dAo+IGZvciBpbnRlcnJ1cHRzIHdlIGV4cGVjdCAqbm90KiB0byBmaXJlIHdl
IGFyZSBPSyBpZiB0aGV5IGRvbid0IHNob3cgdXAKPiBpbiB0aGUgZmlyc3QgMTAwIG1zLiBUaGF0
IGRvZXMgbm90IHNvdW5kIGNvbnNpc3RlbnQuCgpUaGVyZSBhcmUgdHdvIHdheXMgdGhhdCBJIHNl
ZSB0byBmaXggdGhpczoKCi0gSGF2ZSB0aGUgY2FsbGVyIHdhaXQgZm9yIGhvd2V2ZXIgbG9uZyBp
dCBzZWVzIGZpdCwgYW5kICphZnRlciogdGhhdCB3YWl0aW5nCnBlcmlvZCBjYWxsIHdhaXRfZm9y
X2ludGVycnVwdHMoKS4KCi0gUGFzcyBhIGZsYWcgdG8gd2FpdF9mb3JfaW50ZXJydXB0cygpIHRv
IHNwZWNpZnkgdGhhdCB0aGUgYmVoYXZpb3VyIHNob3VsZCBiZSB0bwp3YWl0IGZvciB0aGUgZW50
aXJlIGR1cmF0aW9uIGluc3RlYWQgb2YgdW50aWwgdGhlIGV4cGVjdGVkIGludGVycnVwdHMgaGF2
ZSBiZWVuCnJlY2VpdmVkLgoKTmVpdGhlciBzb3VuZHMgYXBwZWFsaW5nIHRvIG1lIGZvciBpbmNs
dXNpb24gaW4gdGhpcyBwYXRjaCBzZXQsIHNpbmNlIEkgd2FudCB0bwpjb25jZW50cmF0ZSBvbiBy
ZXdvcmtpbmcgY2hlY2tfYWNrZWQoKSB3aGlsZSBrZWVwaW5nIG11Y2ggb2YgdGhlIGN1cnJlbnQg
YmVoYXZpb3VyCmludGFjdC4KCj4KPiBJIGFtIHdvbmRlcmluZyBpZiB3ZSBzaG91bGQgKm5vdCog
aGF2ZSB0aGUgaW5pdGlhbCAxMDBtcyB3YWl0IGF0IGFsbCwKPiBzaW5jZSBtb3N0IGludGVycnVw
dHMgd2lsbCBmaXJlIGltbWVkaWF0ZWx5IChlc3BlY2lhbGx5IGluIEtWTSkuIEFuZAo+IHRoZW4g
aGF2ZSAqb25lKiBleHRyYSB3YWl0IGZvciwgc2F5IDEwMG1zLCB0byBjb3ZlciBsYXRlY29tZXJz
IGFuZAo+IHNwdXJpb3VzIGludGVycnVwdHMuCgpJIGRvbid0IHRoaW5rIGl0IHJlYWxseSBtYXR0
ZXJzIHdoZXJlIHRoZSAxMDAgbWlsbGlzZWNvbmQgZGVsYXkgaXMgaW4gdGhlIGxvb3AuIElmCndl
IGNhbGwgd2FpdF9mb3JfaW50ZXJydXB0cygpIHRvIGFjdHVhbGx5IGNoZWNrIHRoYXQgaW50ZXJy
dXB0cyBoYXZlIGZpcmVkIChhcwpvcHBvc2VkIHRvIGNoZWNraW5nIHRoYXQgdGhleSBoYXZlbid0
IGJlZW4gYXNzZXJ0ZWQpLCB0aGVuIGF0IG1vc3Qgd2Ugc2F2ZSAxMDBtcwp3aGVuIHRoZXkgYXJl
IGFzc2VydGVkIGJlZm9yZSB0aGUgc3RhcnQgb2YgdGhlIGxvb3AuIEkgZG9uJ3QgdGhpbmsgdGhl
IEdJQyBzcGVjCmd1YXJhbnRlZXMgdGhhdCBpbnRlcnJ1cHRzIHdyaXR0ZW4gdG8gdGhlIExSIHJl
Z2lzdGVycyB3aWxsIGJlIHByZXNlbnRlZCB0byB0aGUKQ1BVIGFmdGVyIHRoZSBndWVzdCByZXN1
bWVzLCBzbyBpdCBpcyBjb25jZWl2YWJsZSB0aGF0IHRoZXJlIG1pZ2h0IGJlIGEgZGVsYXksCnRo
dXMgZW5kaW5nIHVwIGluIHdhaXRpbmcgdGhlIGV4dHJhIDEwMG1zIGV2ZW4gaWYgdGhlIGRlbGF5
IGlzIGF0IHRoZSBlbmQgb2YgdGhlIGxvb3AuCgpUaGVyZSBhcmUgdHdvIHJlYXNvbnMgSSBjaG9z
ZSB0aGUgYXBwcm9hY2ggb2YgaGF2aW5nIHRoZSBkZWxheSBhdCB0aGUgc3RhcnQgb2YgdGhlCmxv
b3A6CgoxLiBUbyBwcmVzZXJ2ZSB0aGUgY3VycmVudCBiZWhhdmlvdXIuCgoyLiBUbyBtYXRjaCB3
aGF0IHRoZSB0aW1lciB0ZXN0IHRob3NlIChzZWUgZ2ljX3RpbWVyX2NoZWNrX3N0YXRlKCkpLiBJ
IGFtIGFsc28KdGhpbmtpbmcgdGhhdCBtYXliZSBhdCBzb21lIHBvaW50IHdlIGNvdWxkIHVuaWZ5
IHRoZXNlIHRlc3QtaW5kZXBlbmRlbnQgZnVuY3Rpb25zCmluIHRoZSBnaWMgZHJpdmVyLgoKQXMg
Zm9yIHRoZSA1IHNlY29uZHMgZGVsYXksIEkgdGhpbmsgd2UgY2FuIGNvbWUgdXAgd2l0aCBhIHBh
dGNoIHRvIHBhc3MgdGhlIGRlbGF5CmFzIGEgcGFyYW1ldGVyIHRvIHRoZSBmdW5jdGlvbiBpZiBu
ZWVkZWQgKGlmIEkgcmVtZW1iZXIgY29ycmVjdGx5LCB5b3UgbmVlZGVkIGEKc2hvcnRlciB3YWl0
aW5nIHBlcmlvZCBmb3IgeW91ciBHSUMgdGVzdHMpLgoKPgo+IEJ1dCB0aGlzIG1pZ2h0IGJlIGEg
dG9waWMgZm9yIHNvbWUgZXh0cmEgd29yay9wYXRjaD8KClllcywgSSB3b3VsZCByYXRoZXIgbWFr
ZSB0aGlzIGNoYW5nZXMgd2hlbiB3ZSBoYXZlIGFuIGFjdHVhbCB0ZXN0IHRoYXQgbmVlZHMgdGhl
bS4KCj4KPj4gIAkJfQo+PiArCj4+ICAJCWlmIChucl9wYXNzID09IG5yX2NwdXMpIHsKPj4gLQkJ
CXJlcG9ydCghYmFkLCAiJXMiLCB0ZXN0bmFtZSk7Cj4+ICAJCQlpZiAoaSkKPj4gLQkJCQlyZXBv
cnRfaW5mbygidG9vayBtb3JlIHRoYW4gJWQgbXMiLCBpICogMTAwKTsKPj4gKwkJCQlyZXBvcnRf
aW5mbygiaW50ZXJydXB0cyB0b29rIG1vcmUgdGhhbiAlZCBtcyIsIGkgKiAxMDApOwo+PiArCQkJ
bWRlbGF5KDEwMCk7Cj4gU28gdGhpcyBpcyB0aGUgZXh0cmEgMTAwbXMgeW91IG1lbnRpb24gaW4g
dGhlIGNvbW1pdCBtZXNzYWdlPyBJIGFtIG5vdAo+IGNvbnZpbmNlZCB0aGlzIGlzIHRoZSByaWdo
dCB3YXkgKHNlZSBhYm92ZSkgb3IgZXZlbiB0aGUgcmlnaHQgcGxhY2UKPiAocmF0aGVyIGF0IHRo
ZSBjYWxsIHNpdGU/KSB0byB3YWl0LiBCdXQgYXQgbGVhc3QgaXQgZGVzZXJ2ZXMgYSBjb21tZW50
LAo+IEkgYmVsaWV2ZS4KCkknbSBub3Qgc3VyZSBtb3ZpbmcgaXQgaW50byB0aGUgY2FsbGVyIGlz
IHRoZSByaWdodCB0aGluZyB0byBkby4gVGhpcyBpcyBzb21ldGhpbmcKdGhhdCBoYXMgdG8gZG8g
d2l0aCBob3cgaW50ZXJydXB0cyBhcmUgYXNzZXJ0ZWQsIG5vdCBzb21ldGhpbmcgdGhhdCBpcyBz
cGVjaWZpYyB0bwpvbmUgdGVzdC4KCllvdSBhcmUgcmlnaHQgYWJvdXQgdGhlIGNvbW1lbnQsIEkn
bGwgYWRkIG9uZS4KClRoYW5rcywKQWxleAo+PiAgCQkJcmV0dXJuOwo+PiAgCQl9Cj4+ICAJfQo+
PiAgCj4+ICsJcmVwb3J0X2luZm8oImludGVycnVwdHMgdGltZWQtb3V0ICg1cykiKTsKPj4gK30K
Pj4gKwo+PiArc3RhdGljIGJvb2wgY2hlY2tfYWNrZWQoY3B1bWFza190ICptYXNrKQo+PiArewo+
PiArCWludCBtaXNzaW5nID0gMCwgZXh0cmEgPSAwLCB1bmV4cGVjdGVkID0gMDsKPj4gKwlib29s
IHBhc3MgPSB0cnVlOwo+PiArCWludCBjcHU7Cj4+ICsKPj4gIAlmb3JfZWFjaF9wcmVzZW50X2Nw
dShjcHUpIHsKPj4gIAkJaWYgKGNwdW1hc2tfdGVzdF9jcHUoY3B1LCBtYXNrKSkgewo+PiAgCQkJ
aWYgKCFhY2tlZFtjcHVdKQo+PiBAQCAtMTA3LDExICsxMDgsMjggQEAgc3RhdGljIHZvaWQgY2hl
Y2tfYWNrZWQoY29uc3QgY2hhciAqdGVzdG5hbWUsIGNwdW1hc2tfdCAqbWFzaykKPj4gIAkJCWlm
IChhY2tlZFtjcHVdKQo+PiAgCQkJCSsrdW5leHBlY3RlZDsKPj4gIAkJfQo+PiArCQlzbXBfcm1i
KCk7IC8qIHBhaXJzIHdpdGggc21wX3dtYiBpbiBpcGlfaGFuZGxlciAqLwo+PiArCj4+ICsJCWlm
IChiYWRfc2VuZGVyW2NwdV0gIT0gLTEpIHsKPj4gKwkJCXJlcG9ydF9pbmZvKCJjcHUlZCByZWNl
aXZlZCBJUEkgZnJvbSB3cm9uZyBzZW5kZXIgJWQiLAo+PiArCQkJCQljcHUsIGJhZF9zZW5kZXJb
Y3B1XSk7Cj4+ICsJCQlwYXNzID0gZmFsc2U7Cj4+ICsJCX0KPj4gKwo+PiArCQlpZiAoYmFkX2ly
cVtjcHVdICE9IC0xKSB7Cj4+ICsJCQlyZXBvcnRfaW5mbygiY3B1JWQgcmVjZWl2ZWQgd3Jvbmcg
aXJxICVkIiwKPj4gKwkJCQkJY3B1LCBiYWRfaXJxW2NwdV0pOwo+PiArCQkJcGFzcyA9IGZhbHNl
Owo+PiArCQl9Cj4+ICsJfQo+PiArCj4+ICsJaWYgKG1pc3NpbmcgfHwgZXh0cmEgfHwgdW5leHBl
Y3RlZCkgewo+PiArCQlyZXBvcnRfaW5mbygiQUNLUzogbWlzc2luZz0lZCBleHRyYT0lZCB1bmV4
cGVjdGVkPSVkIiwKPj4gKwkJCQltaXNzaW5nLCBleHRyYSwgdW5leHBlY3RlZCk7Cj4+ICsJCXBh
c3MgPSBmYWxzZTsKPiBUaGFua3MsIHRoYXQgc28gbXVjaCBlYXNpZXIgdG8gcmVhZCBub3cuCj4K
PiBDaGVlcnMsCj4gQW5kcmUKPgo+PiAgCX0KPj4gIAo+PiAtCXJlcG9ydChmYWxzZSwgIiVzIiwg
dGVzdG5hbWUpOwo+PiAtCXJlcG9ydF9pbmZvKCJUaW1lZC1vdXQgKDVzKS4gQUNLUzogbWlzc2lu
Zz0lZCBleHRyYT0lZCB1bmV4cGVjdGVkPSVkIiwKPj4gLQkJICAgIG1pc3NpbmcsIGV4dHJhLCB1
bmV4cGVjdGVkKTsKPj4gKwlyZXR1cm4gcGFzczsKPj4gIH0KPj4gIAo+PiAgc3RhdGljIHZvaWQg
Y2hlY2tfc3B1cmlvdXModm9pZCkKPj4gQEAgLTMwMyw3ICszMjEsOCBAQCBzdGF0aWMgdm9pZCBp
cGlfdGVzdF9zZWxmKHZvaWQpCj4+ICAJY3B1bWFza19jbGVhcigmbWFzayk7Cj4+ICAJY3B1bWFz
a19zZXRfY3B1KHNtcF9wcm9jZXNzb3JfaWQoKSwgJm1hc2spOwo+PiAgCWdpYy0+aXBpLnNlbmRf
c2VsZigpOwo+PiAtCWNoZWNrX2Fja2VkKCJJUEk6IHNlbGYiLCAmbWFzayk7Cj4+ICsJd2FpdF9m
b3JfaW50ZXJydXB0cygmbWFzayk7Cj4+ICsJcmVwb3J0KGNoZWNrX2Fja2VkKCZtYXNrKSwgIklu
dGVycnVwdHMgcmVjZWl2ZWQiKTsKPj4gIAlyZXBvcnRfcHJlZml4X3BvcCgpOwo+PiAgfQo+PiAg
Cj4+IEBAIC0zMTgsNyArMzM3LDggQEAgc3RhdGljIHZvaWQgaXBpX3Rlc3Rfc21wKHZvaWQpCj4+
ICAJZm9yIChpID0gc21wX3Byb2Nlc3Nvcl9pZCgpICYgMTsgaSA8IG5yX2NwdXM7IGkgKz0gMikK
Pj4gIAkJY3B1bWFza19jbGVhcl9jcHUoaSwgJm1hc2spOwo+PiAgCWdpY19pcGlfc2VuZF9tYXNr
KElQSV9JUlEsICZtYXNrKTsKPj4gLQljaGVja19hY2tlZCgiSVBJOiBkaXJlY3RlZCIsICZtYXNr
KTsKPj4gKwl3YWl0X2Zvcl9pbnRlcnJ1cHRzKCZtYXNrKTsKPj4gKwlyZXBvcnQoY2hlY2tfYWNr
ZWQoJm1hc2spLCAiSW50ZXJydXB0cyByZWNlaXZlZCIpOwo+PiAgCXJlcG9ydF9wcmVmaXhfcG9w
KCk7Cj4+ICAKPj4gIAlyZXBvcnRfcHJlZml4X3B1c2goImJyb2FkY2FzdCIpOwo+PiBAQCAtMzI2
LDcgKzM0Niw4IEBAIHN0YXRpYyB2b2lkIGlwaV90ZXN0X3NtcCh2b2lkKQo+PiAgCWNwdW1hc2tf
Y29weSgmbWFzaywgJmNwdV9wcmVzZW50X21hc2spOwo+PiAgCWNwdW1hc2tfY2xlYXJfY3B1KHNt
cF9wcm9jZXNzb3JfaWQoKSwgJm1hc2spOwo+PiAgCWdpYy0+aXBpLnNlbmRfYnJvYWRjYXN0KCk7
Cj4+IC0JY2hlY2tfYWNrZWQoIklQSTogYnJvYWRjYXN0IiwgJm1hc2spOwo+PiArCXdhaXRfZm9y
X2ludGVycnVwdHMoJm1hc2spOwo+PiArCXJlcG9ydChjaGVja19hY2tlZCgmbWFzayksICJJbnRl
cnJ1cHRzIHJlY2VpdmVkIik7Cj4+ICAJcmVwb3J0X3ByZWZpeF9wb3AoKTsKPj4gIH0KPj4gIAo+
PgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwprdm1hcm0g
bWFpbGluZyBsaXN0Cmt2bWFybUBsaXN0cy5jcy5jb2x1bWJpYS5lZHUKaHR0cHM6Ly9saXN0cy5j
cy5jb2x1bWJpYS5lZHUvbWFpbG1hbi9saXN0aW5mby9rdm1hcm0K
