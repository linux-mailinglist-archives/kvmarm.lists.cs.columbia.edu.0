Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id B4E923465DC
	for <lists+kvmarm@lfdr.de>; Tue, 23 Mar 2021 18:03:16 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 4315E4B2B4;
	Tue, 23 Mar 2021 13:03:16 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: -4.201
X-Spam-Level: 
X-Spam-Status: No, score=-4.201 required=6.1 tests=[BAYES_00=-1.9,
	DNS_FROM_AHBL_RHSBL=2.699, RCVD_IN_DNSWL_HI=-5] autolearn=unavailable
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id FkeMA5yq6cDJ; Tue, 23 Mar 2021 13:03:16 -0400 (EDT)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id E63664B28C;
	Tue, 23 Mar 2021 13:03:14 -0400 (EDT)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 4834F4B376
 for <kvmarm@lists.cs.columbia.edu>; Tue, 23 Mar 2021 13:03:13 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id QdtSFn0nN7Gl for <kvmarm@lists.cs.columbia.edu>;
 Tue, 23 Mar 2021 13:03:12 -0400 (EDT)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mm01.cs.columbia.edu (Postfix) with ESMTPS id 315C34B28C
 for <kvmarm@lists.cs.columbia.edu>; Tue, 23 Mar 2021 13:03:12 -0400 (EDT)
Received: from disco-boy.misterjones.org (disco-boy.misterjones.org
 [51.254.78.96])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 32DFD619BA;
 Tue, 23 Mar 2021 17:03:10 +0000 (UTC)
Received: from 78.163-31-62.static.virginmediabusiness.co.uk ([62.31.163.78]
 helo=why.misterjones.org)
 by disco-boy.misterjones.org with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.94)
 (envelope-from <maz@kernel.org>)
 id 1lOkQu-003LrN-7H; Tue, 23 Mar 2021 17:03:08 +0000
Date: Tue, 23 Mar 2021 17:03:02 +0000
Message-ID: <87tup1kdkp.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Keqian Zhu <zhukeqian1@huawei.com>,  Yoan Picchi <yoan.picchi@arm.com>
Subject: Re: [PATCH 1/7] KVM: arm64: Add two page mapping counters for kvm_stat
In-Reply-To: <fe120fea-b2a3-d80f-38df-2430a0b2029e@huawei.com>
References: <20210319161711.24972-1-yoan.picchi@arm.com>
 <20210319161711.24972-2-yoan.picchi@arm.com>
 <fe120fea-b2a3-d80f-38df-2430a0b2029e@huawei.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
X-SA-Exim-Connect-IP: 62.31.163.78
X-SA-Exim-Rcpt-To: zhukeqian1@huawei.com, yoan.picchi@arm.com,
 james.morse@arm.com, julien.thierry.kdev@gmail.com, suzuki.poulose@arm.com,
 linux-arm-kernel@lists.infradead.org, kvmarm@lists.cs.columbia.edu,
 catalin.marinas@arm.com, will@kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org);
 SAEximRunCond expanded to false
Cc: catalin.marinas@arm.com, will@kernel.org, kvmarm@lists.cs.columbia.edu,
 linux-arm-kernel@lists.infradead.org
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

On Tue, 23 Mar 2021 11:52:38 +0000,
Keqian Zhu <zhukeqian1@huawei.com> wrote:
> 
> Hi Yoan,
> 
> On 2021/3/20 0:17, Yoan Picchi wrote:
> > Add a counter for when a regular page is mapped, and another
> > for when a huge page is mapped.
> > 
> > Signed-off-by: Yoan Picchi <yoan.picchi@arm.com>
> > ---
> >  arch/arm64/include/asm/kvm_host.h | 2 ++
> >  arch/arm64/kvm/guest.c            | 2 ++
> >  arch/arm64/kvm/mmu.c              | 7 +++++++
> >  3 files changed, 11 insertions(+)
> > 
> > diff --git a/arch/arm64/include/asm/kvm_host.h b/arch/arm64/include/asm/kvm_host.h
> > index 3d10e6527..863603285 100644
> > --- a/arch/arm64/include/asm/kvm_host.h
> > +++ b/arch/arm64/include/asm/kvm_host.h
> > @@ -561,6 +561,8 @@ struct kvm_vcpu_stat {
> >  	u64 wfi_exit_stat;
> >  	u64 mmio_exit_user;
> >  	u64 mmio_exit_kernel;
> > +	u64 regular_page_mapped;
> > +	u64 huge_page_mapped;
> >  	u64 exits;
> >  };
> >  
> > diff --git a/arch/arm64/kvm/guest.c b/arch/arm64/kvm/guest.c
> > index 9bbd30e62..14b15fb8f 100644
> > --- a/arch/arm64/kvm/guest.c
> > +++ b/arch/arm64/kvm/guest.c
> > @@ -38,6 +38,8 @@ struct kvm_stats_debugfs_item debugfs_entries[] = {
> >  	VCPU_STAT("wfi_exit_stat", wfi_exit_stat),
> >  	VCPU_STAT("mmio_exit_user", mmio_exit_user),
> >  	VCPU_STAT("mmio_exit_kernel", mmio_exit_kernel),
> > +	VCPU_STAT("regular_page_mapped", regular_page_mapped),
> > +	VCPU_STAT("huge_page_mapped", huge_page_mapped),
> >  	VCPU_STAT("exits", exits),
> >  	VCPU_STAT("halt_poll_success_ns", halt_poll_success_ns),
> >  	VCPU_STAT("halt_poll_fail_ns", halt_poll_fail_ns),
> > diff --git a/arch/arm64/kvm/mmu.c b/arch/arm64/kvm/mmu.c
> > index 77cb2d28f..3996b28da 100644
> > --- a/arch/arm64/kvm/mmu.c
> > +++ b/arch/arm64/kvm/mmu.c
> > @@ -914,6 +914,13 @@ static int user_mem_abort(struct kvm_vcpu *vcpu, phys_addr_t fault_ipa,
> >  		mark_page_dirty(kvm, gfn);
> >  	}
> >  
> > +	if (ret >= 0) {
> > +		if (vma_pagesize == PAGE_SIZE) {
> > +			vcpu->stat.regular_page_mapped++;
> > +		} else {
> > +			vcpu->stat.huge_page_mapped++;
> > +		}
> > +	}
> This looks too simple, as we don't always map a new regular_page or
> huge_page here.  We may just relax permission or change mapping
> size, etc. If we mix these operations, the stat result seems not
> very valuable...

I can only agree. There is no such thing as a *huge page*. We have a
whole gamut of block mappings depending on the base granule size, and
we even have concatenation of pages/blocks (not yet implemented at S2,
but there is hope...).

What is this trying to express?

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.
_______________________________________________
kvmarm mailing list
kvmarm@lists.cs.columbia.edu
https://lists.cs.columbia.edu/mailman/listinfo/kvmarm
