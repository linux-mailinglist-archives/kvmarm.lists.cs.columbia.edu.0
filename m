Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id 385523387F3
	for <lists+kvmarm@lfdr.de>; Fri, 12 Mar 2021 09:53:07 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id DBB404B73C;
	Fri, 12 Mar 2021 03:53:06 -0500 (EST)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: -4.201
X-Spam-Level: 
X-Spam-Status: No, score=-4.201 required=6.1 tests=[BAYES_00=-1.9,
	DNS_FROM_AHBL_RHSBL=2.699, RCVD_IN_DNSWL_HI=-5] autolearn=unavailable
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id NgaDmoa+cUr6; Fri, 12 Mar 2021 03:53:06 -0500 (EST)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 986F84B72C;
	Fri, 12 Mar 2021 03:53:05 -0500 (EST)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 060FC4B44F
 for <kvmarm@lists.cs.columbia.edu>; Fri, 12 Mar 2021 03:53:05 -0500 (EST)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 2eCxqGA8-+8j for <kvmarm@lists.cs.columbia.edu>;
 Fri, 12 Mar 2021 03:53:04 -0500 (EST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mm01.cs.columbia.edu (Postfix) with ESMTPS id E263A4B1E1
 for <kvmarm@lists.cs.columbia.edu>; Fri, 12 Mar 2021 03:53:03 -0500 (EST)
Received: from disco-boy.misterjones.org (disco-boy.misterjones.org
 [51.254.78.96])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 184A264FCE;
 Fri, 12 Mar 2021 08:53:02 +0000 (UTC)
Received: from 78.163-31-62.static.virginmediabusiness.co.uk ([62.31.163.78]
 helo=why.misterjones.org)
 by disco-boy.misterjones.org with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.94)
 (envelope-from <maz@kernel.org>)
 id 1lKdXX-001ATZ-Qc; Fri, 12 Mar 2021 08:52:59 +0000
Date: Fri, 12 Mar 2021 08:52:59 +0000
Message-ID: <87mtv8g3dg.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Shenming Lu <lushenming@huawei.com>
Subject: Re: [PATCH v3 1/4] KVM: arm64: GICv4.1: Add function to get VLPI state
In-Reply-To: <fc7dc4ec-e223-91ae-536f-1aa52c8a5739@huawei.com>
References: <20210127121337.1092-1-lushenming@huawei.com>
 <20210127121337.1092-2-lushenming@huawei.com>
 <87wnuef4oj.wl-maz@kernel.org>
 <fc7dc4ec-e223-91ae-536f-1aa52c8a5739@huawei.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
X-SA-Exim-Connect-IP: 62.31.163.78
X-SA-Exim-Rcpt-To: lushenming@huawei.com, eric.auger@redhat.com,
 will@kernel.org, linux-arm-kernel@lists.infradead.org,
 kvmarm@lists.cs.columbia.edu, kvm@vger.kernel.org,
 linux-kernel@vger.kernel.org, alex.williamson@redhat.com, cohuck@redhat.com,
 lorenzo.pieralisi@arm.com, wanghaibin.wang@huawei.com, yuzenghui@huawei.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org);
 SAEximRunCond expanded to false
Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>, kvm@vger.kernel.org,
 Cornelia Huck <cohuck@redhat.com>, linux-kernel@vger.kernel.org,
 Alex Williamson <alex.williamson@redhat.com>, Will Deacon <will@kernel.org>,
 kvmarm@lists.cs.columbia.edu, linux-arm-kernel@lists.infradead.org
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

On Thu, 11 Mar 2021 12:26:38 +0000,
Shenming Lu <lushenming@huawei.com> wrote:
> 
> On 2021/3/11 16:57, Marc Zyngier wrote:
> > On Wed, 27 Jan 2021 12:13:34 +0000,
> > Shenming Lu <lushenming@huawei.com> wrote:
> >>
> >> With GICv4.1 and the vPE unmapped, which indicates the invalidation
> >> of any VPT caches associated with the vPE, we can get the VLPI state
> >> by peeking at the VPT. So we add a function for this.
> >>
> >> Signed-off-by: Shenming Lu <lushenming@huawei.com>
> >> ---
> >>  arch/arm64/kvm/vgic/vgic-v4.c | 19 +++++++++++++++++++
> >>  arch/arm64/kvm/vgic/vgic.h    |  1 +
> >>  2 files changed, 20 insertions(+)
> >>
> >> diff --git a/arch/arm64/kvm/vgic/vgic-v4.c b/arch/arm64/kvm/vgic/vgic-v4.c
> >> index 66508b03094f..ac029ba3d337 100644
> >> --- a/arch/arm64/kvm/vgic/vgic-v4.c
> >> +++ b/arch/arm64/kvm/vgic/vgic-v4.c
> >> @@ -203,6 +203,25 @@ void vgic_v4_configure_vsgis(struct kvm *kvm)
> >>  	kvm_arm_resume_guest(kvm);
> >>  }
> >>  
> >> +/*
> >> + * Must be called with GICv4.1 and the vPE unmapped, which
> >> + * indicates the invalidation of any VPT caches associated
> >> + * with the vPE, thus we can get the VLPI state by peeking
> >> + * at the VPT.
> >> + */
> >> +void vgic_v4_get_vlpi_state(struct vgic_irq *irq, bool *val)
> >> +{
> >> +	struct its_vpe *vpe = &irq->target_vcpu->arch.vgic_cpu.vgic_v3.its_vpe;
> >> +	int mask = BIT(irq->intid % BITS_PER_BYTE);
> >> +	void *va;
> >> +	u8 *ptr;
> >> +
> >> +	va = page_address(vpe->vpt_page);
> >> +	ptr = va + irq->intid / BITS_PER_BYTE;
> >> +
> >> +	*val = !!(*ptr & mask);
> > 
> > What guarantees that you can actually read anything valid? Yes, the
> > VPT caches are clean. But that doesn't make them coherent with CPU
> > caches.
> > 
> > You need some level of cache maintenance here.
> 
> Yeah, and you have come up with some codes for this in v2:
> 
> diff --git a/drivers/irqchip/irq-gic-v3-its.c
> b/drivers/irqchip/irq-gic-v3-its.c
> index 7db602434ac5..2dbef127ca15 100644
> --- a/drivers/irqchip/irq-gic-v3-its.c
> +++ b/drivers/irqchip/irq-gic-v3-its.c
> @@ -4552,6 +4552,10 @@ static void its_vpe_irq_domain_deactivate(struct
> irq_domain *domain,
> 
>   		its_send_vmapp(its, vpe, false);
>   	}
> +
> +	if (find_4_1_its() && !atomic_read(vpe->vmapp_count))
> +		gic_flush_dcache_to_poc(page_address(vpe->vpt_page),
> +					LPI_PENDBASE_SZ);
>   }
> 
>   static const struct irq_domain_ops its_vpe_domain_ops = {
> 
> Could I add it to this series? :-)

Yes, please.

	M.

-- 
Without deviation from the norm, progress is not possible.
_______________________________________________
kvmarm mailing list
kvmarm@lists.cs.columbia.edu
https://lists.cs.columbia.edu/mailman/listinfo/kvmarm
