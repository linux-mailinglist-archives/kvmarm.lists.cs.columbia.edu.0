Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id 25F4FF940F
	for <lists+kvmarm@lfdr.de>; Tue, 12 Nov 2019 16:23:12 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 977A54B1BE;
	Tue, 12 Nov 2019 10:23:11 -0500 (EST)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: 0.799
X-Spam-Level: 
X-Spam-Status: No, score=0.799 required=6.1 tests=[BAYES_00=-1.9,
	DNS_FROM_AHBL_RHSBL=2.699] autolearn=unavailable
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id sCocbB0Hii+w; Tue, 12 Nov 2019 10:23:11 -0500 (EST)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 1DFC84B1BF;
	Tue, 12 Nov 2019 10:23:10 -0500 (EST)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 769974B1B9
 for <kvmarm@lists.cs.columbia.edu>; Tue, 12 Nov 2019 10:23:09 -0500 (EST)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id aqM8-ghCQYVY for <kvmarm@lists.cs.columbia.edu>;
 Tue, 12 Nov 2019 10:23:07 -0500 (EST)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id BFBEF4B1B8
 for <kvmarm@lists.cs.columbia.edu>; Tue, 12 Nov 2019 10:23:07 -0500 (EST)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 277391FB;
 Tue, 12 Nov 2019 07:23:07 -0800 (PST)
Received: from [10.1.196.63] (e123195-lin.cambridge.arm.com [10.1.196.63])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 31A563F534;
 Tue, 12 Nov 2019 07:23:06 -0800 (PST)
Subject: Re: [kvm-unit-tests PATCH 07/17] arm: gic: Extend check_acked() to
 allow silent call
To: Andre Przywara <andre.przywara@arm.com>, Andrew Jones
 <drjones@redhat.com>, Paolo Bonzini <pbonzini@redhat.com>
References: <20191108144240.204202-1-andre.przywara@arm.com>
 <20191108144240.204202-8-andre.przywara@arm.com>
From: Alexandru Elisei <alexandru.elisei@arm.com>
Message-ID: <25598849-b195-3411-8092-b0656bcfb762@arm.com>
Date: Tue, 12 Nov 2019 15:23:04 +0000
User-Agent: Mozilla/5.0 (X11; Linux aarch64; rv:60.0) Gecko/20100101
 Thunderbird/60.8.0
MIME-Version: 1.0
In-Reply-To: <20191108144240.204202-8-andre.przywara@arm.com>
Content-Language: en-US
Cc: Marc Zyngier <maz@kernel.org>, kvmarm@lists.cs.columbia.edu,
 linux-arm-kernel@lists.infradead.org, kvm@vger.kernel.org
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

SGksCgpPbiAxMS84LzE5IDI6NDIgUE0sIEFuZHJlIFByenl3YXJhIHdyb3RlOgo+IEZvciBmdXR1
cmUgdGVzdHMgd2Ugd2lsbCBuZWVkIHRvIGNhbGwgY2hlY2tfYWNrZWQoKSB0d2ljZSBmb3IgdGhl
IHNhbWUKPiBpbnRlcnJ1cHQgKHRvIHRlc3QgZGVsaXZlcnkgb2YgR3JvdXAgMCBhbmQgR3JvdXAg
MSBpbnRlcnJ1cHRzKS4KPiBUaGlzIHNob3VsZCBiZSByZXBvcnRlZCBhcyBhIHNpbmdsZSB0ZXN0
LCBzbyBhbGxvdyBjaGVja19hY2tlZCgpIHRvIGJlCj4gY2FsbGVkIHdpdGggYSAiTlVMTCIgdGVz
dCBuYW1lLCB0byBzdXBwcmVzcyBvdXRwdXQuIFdlIHJlcG9ydCB0aGUgdGVzdAo+IHJlc3VsdCB2
aWEgdGhlIHJldHVybiB2YWx1ZSwgc28gdGhlIG91dGNvbWUgaXMgbm90IGxvc3QuCj4KPiBBbHNv
IHRoaXMgYW1lbmRzIHRoZSBuZXcgdHJpZ2dlcl9hbmRfY2hlY2tfc3BpKCkgd3JhcHBlciwgdG8g
cHJvcGFnYXRlCj4gdGhlIHRlc3QgcmVzdWx0IHRvIGNhbGxlcnMgb2YgdGhhdCBmdW5jdGlvbi4K
Pgo+IFNpZ25lZC1vZmYtYnk6IEFuZHJlIFByenl3YXJhIDxhbmRyZS5wcnp5d2FyYUBhcm0uY29t
Pgo+IC0tLQo+ICBhcm0vZ2ljLmMgfCAyOSArKysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLQo+
ICAxIGZpbGUgY2hhbmdlZCwgMTkgaW5zZXJ0aW9ucygrKSwgMTAgZGVsZXRpb25zKC0pCj4KPiBk
aWZmIC0tZ2l0IGEvYXJtL2dpYy5jIGIvYXJtL2dpYy5jCj4gaW5kZXggM2JlNzZjYi4uNjNhYTlm
NCAxMDA2NDQKPiAtLS0gYS9hcm0vZ2ljLmMKPiArKysgYi9hcm0vZ2ljLmMKPiBAQCAtNjIsNyAr
NjIsNyBAQCBzdGF0aWMgdm9pZCBzdGF0c19yZXNldCh2b2lkKQo+ICAJc21wX3dtYigpOwo+ICB9
Cj4gIAo+IC1zdGF0aWMgdm9pZCBjaGVja19hY2tlZChjb25zdCBjaGFyICp0ZXN0bmFtZSwgY3B1
bWFza190ICptYXNrKQo+ICtzdGF0aWMgaW50IGNoZWNrX2Fja2VkKGNvbnN0IGNoYXIgKnRlc3Ru
YW1lLCBjcHVtYXNrX3QgKm1hc2spCj4gIHsKPiAgCWludCBtaXNzaW5nID0gMCwgZXh0cmEgPSAw
LCB1bmV4cGVjdGVkID0gMDsKPiAgCWludCBucl9wYXNzLCBjcHUsIGk7Cj4gQEAgLTkxLDE2ICs5
MSwyMCBAQCBzdGF0aWMgdm9pZCBjaGVja19hY2tlZChjb25zdCBjaGFyICp0ZXN0bmFtZSwgY3B1
bWFza190ICptYXNrKQo+ICAJCQl9Cj4gIAkJfQo+ICAJCWlmICghbm9pcnFzICYmIG5yX3Bhc3Mg
PT0gbnJfY3B1cykgewo+IC0JCQlyZXBvcnQoIiVzIiwgIWJhZCwgdGVzdG5hbWUpOwo+IC0JCQlp
ZiAoaSkKPiAtCQkJCXJlcG9ydF9pbmZvKCJ0b29rIG1vcmUgdGhhbiAlZCBtcyIsIGkgKiAxMDAp
Owo+IC0JCQlyZXR1cm47Cj4gKwkJCWlmICh0ZXN0bmFtZSkgewo+ICsJCQkJcmVwb3J0KCIlcyIs
ICFiYWQsIHRlc3RuYW1lKTsKPiArCQkJCWlmIChpKQo+ICsJCQkJCXJlcG9ydF9pbmZvKCJ0b29r
IG1vcmUgdGhhbiAlZCBtcyIsCj4gKwkJCQkJCSAgICBpICogMTAwKTsKPiArCQkJfQo+ICsJCQly
ZXR1cm4gaSAqIDEwMDsKPiAgCQl9Cj4gIAl9Cj4gIAo+ICAJaWYgKG5vaXJxcyAmJiBucl9wYXNz
ID09IG5yX2NwdXMpIHsKPiAtCQlyZXBvcnQoIiVzIiwgIWJhZCwgdGVzdG5hbWUpOwo+IC0JCXJl
dHVybjsKPiArCQlpZiAodGVzdG5hbWUpCj4gKwkJCXJlcG9ydCgiJXMiLCAhYmFkLCB0ZXN0bmFt
ZSk7Cj4gKwkJcmV0dXJuIGkgKiAxMDA7Cj4gIAl9Cj4gIAo+ICAJZm9yX2VhY2hfcHJlc2VudF9j
cHUoY3B1KSB7Cj4gQEAgLTExNSw5ICsxMTksMTEgQEAgc3RhdGljIHZvaWQgY2hlY2tfYWNrZWQo
Y29uc3QgY2hhciAqdGVzdG5hbWUsIGNwdW1hc2tfdCAqbWFzaykKPiAgCQl9Cj4gIAl9Cj4gIAo+
IC0JcmVwb3J0KCIlcyIsIGZhbHNlLCB0ZXN0bmFtZSk7Cj4gKwlpZiAodGVzdG5hbWUpCj4gKwkJ
cmVwb3J0KCIlcyIsIGZhbHNlLCB0ZXN0bmFtZSk7Cj4gIAlyZXBvcnRfaW5mbygiVGltZWQtb3V0
ICg1cykuIEFDS1M6IG1pc3Npbmc9JWQgZXh0cmE9JWQgdW5leHBlY3RlZD0lZCIsCj4gIAkJICAg
IG1pc3NpbmcsIGV4dHJhLCB1bmV4cGVjdGVkKTsKPiArCXJldHVybiAtMTsKPiAgfQoKY2hlY2tf
YWNrZWQgaXMgc3RhcnRpbmcgdG8gYmVjb21lIGhhcmQgdG8gcmVhZC4gVGhlIGZ1bmN0aW9uIGl0
c2VsZiBpcyByYXRoZXIKaW5jb25zaXN0ZW50LCBhcyBpdCBtaXhlcyByZWd1bGFyIHByaW50Zidz
IHdpdGggcmVwb3J0X2luZm8ncy4gVGhlIHJldHVybiB2YWx1ZSBpcwphbHNvIG5ldmVyIHVzZWQ6
CgokIGF3ayAnL2NoZWNrX2Fja2VkXCgvICYmICEvY29uc3QvJyBhcm0vZ2ljLmMKwqDCoMKgIGNo
ZWNrX2Fja2VkKCJJUEk6IHNlbGYiLCAmbWFzayk7CsKgwqDCoCBjaGVja19hY2tlZCgiSVBJOiBk
aXJlY3RlZCIsICZtYXNrKTsKwqDCoMKgIGNoZWNrX2Fja2VkKCJJUEk6IGJyb2FkY2FzdCIsICZt
YXNrKTsKCldoYXQgSSdtIHRoaW5raW5nIGlzIHRoYXQgd2UgY2FuIHJld3JpdGUgY2hlY2tfYWNr
ZWQgdG8gcmV0dXJuIHRydWUvZmFsc2UgKG9yCjAvMSksIG1lYW5pbmcgc3VjY2VzcyBvciBmYWls
dXJlLCByZW1vdmUgdGhlIHRlc3RuYW1lIHBhcmFtZXRlciwgcmVwbGFjZSB0aGUKcHJpbnRmcyB0
byByZXBvcnRfaW5mbywgYW5kIGhhdmUgdGhlIGNhbGxlciBkbyBhIHJlcG9ydCBiYXNlZCBvbiB0
aGUgdmFsdWUKcmV0dXJuZWQgYnkgY2hlY2tfYWNrZWQuCgpSb3VnaCB2ZXJzaW9uLCBjb21waWxl
IHRlc3RlZCBvbmx5LCBJJ20gc3VyZSBpdCBjYW4gYmUgaW1wcm92ZWQ6CgpkaWZmIC0tZ2l0IGEv
YXJtL2dpYy5jIGIvYXJtL2dpYy5jCmluZGV4IGFkYjZhYTQ2NDUxMy4uNTQ1M2YyZmQzZDVmIDEw
MDY0NAotLS0gYS9hcm0vZ2ljLmMKKysrIGIvYXJtL2dpYy5jCkBAIC02MCwxMSArNjAsMTEgQEAg
c3RhdGljIHZvaWQgc3RhdHNfcmVzZXQodm9pZCkKwqDCoMKgwqDCoMKgwqAgc21wX3dtYigpOwrC
oH0KwqAKLXN0YXRpYyB2b2lkIGNoZWNrX2Fja2VkKGNvbnN0IGNoYXIgKnRlc3RuYW1lLCBjcHVt
YXNrX3QgKm1hc2spCitzdGF0aWMgYm9vbCBjaGVja19hY2tlZChjcHVtYXNrX3QgKm1hc2spCsKg
ewrCoMKgwqDCoMKgwqDCoCBpbnQgbWlzc2luZyA9IDAsIGV4dHJhID0gMCwgdW5leHBlY3RlZCA9
IDA7CsKgwqDCoMKgwqDCoMKgIGludCBucl9wYXNzLCBjcHUsIGk7Ci3CoMKgwqDCoMKgwqAgYm9v
bCBiYWQgPSBmYWxzZTsKK8KgwqDCoMKgwqDCoCBib29sIHN1Y2Nlc3MgPSB0cnVlOwrCoArCoMKg
wqDCoMKgwqDCoCAvKiBXYWl0IHVwIHRvIDVzIGZvciBhbGwgaW50ZXJydXB0cyB0byBiZSBkZWxp
dmVyZWQgKi8KwqDCoMKgwqDCoMKgwqAgZm9yIChpID0gMDsgaSA8IDUwOyArK2kpIHsKQEAgLTc2
LDIyICs3NiwyMSBAQCBzdGF0aWMgdm9pZCBjaGVja19hY2tlZChjb25zdCBjaGFyICp0ZXN0bmFt
ZSwgY3B1bWFza190ICptYXNrKQrCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBhY2tlZFtjcHVdID09IDEgOiBhY2tlZFtjcHVdID09
IDA7CsKgCsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgaWYg
KGJhZF9zZW5kZXJbY3B1XSAhPSAtMSkgewotwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHByaW50ZigiY3B1JWQgcmVjZWl2ZWQgSVBJ
IGZyb20gd3Jvbmcgc2VuZGVyICVkXG4iLAorwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHJlcG9ydF9pbmZvKCJjcHUlZCByZWNlaXZl
ZCBJUEkgZnJvbSB3cm9uZyBzZW5kZXIKJWRcbiIsCsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBjcHUs
IGJhZF9zZW5kZXJbY3B1XSk7Ci3CoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgYmFkID0gdHJ1ZTsKK8KgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBzdWNjZXNzID0gZmFsc2U7
CsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgfQrCoArCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIGlmIChiYWRfaXJxW2Nw
dV0gIT0gLTEpIHsKLcKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoCBwcmludGYoImNwdSVkIHJlY2VpdmVkIHdyb25nIGlycSAlZFxuIiwK
K8KgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoCByZXBvcnRfaW5mbygiY3B1JWQgcmVjZWl2ZWQgd3JvbmcgaXJxICVkXG4iLArCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgY3B1LCBiYWRfaXJxW2NwdV0pOwotwqDCoMKgwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIGJhZCA9IHRydWU7CivCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAg
c3VjY2VzcyA9IGZhbHNlOwrCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIH0KwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIH0KwqDCoMKgwqDCoMKgwqDC
oMKgwqDCoMKgwqDCoMKgIGlmIChucl9wYXNzID09IG5yX2NwdXMpIHsKLcKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgIHJlcG9ydCgiJXMiLCAhYmFkLCB0ZXN0bmFt
ZSk7CsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgaWYgKGkp
CsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgIHJlcG9ydF9pbmZvKCJ0b29rIG1vcmUgdGhhbiAlZCBtcyIsIGkgKiAxMDApOwotwqDC
oMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgcmV0dXJuOworwqDCoMKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgcmV0dXJuIHN1Y2Nlc3M7CsKg
wqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCB9CsKgwqDCoMKgwqDCoMKgIH0KwqAKQEAgLTEw
Nyw5ICsxMDYsOSBAQCBzdGF0aWMgdm9pZCBjaGVja19hY2tlZChjb25zdCBjaGFyICp0ZXN0bmFt
ZSwgY3B1bWFza190ICptYXNrKQrCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqAgfQrCoMKg
wqDCoMKgwqDCoCB9CsKgCi3CoMKgwqDCoMKgwqAgcmVwb3J0KCIlcyIsIGZhbHNlLCB0ZXN0bmFt
ZSk7CsKgwqDCoMKgwqDCoMKgIHJlcG9ydF9pbmZvKCJUaW1lZC1vdXQgKDVzKS4gQUNLUzogbWlz
c2luZz0lZCBleHRyYT0lZCB1bmV4cGVjdGVkPSVkIiwKwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKg
wqDCoMKgwqDCoMKgwqAgbWlzc2luZywgZXh0cmEsIHVuZXhwZWN0ZWQpOworwqDCoMKgwqDCoMKg
IHJldHVybiBmYWxzZTsKwqB9CsKgCsKgc3RhdGljIHZvaWQgY2hlY2tfc3B1cmlvdXModm9pZCkK
QEAgLTE4MywxMyArMTgyLDExIEBAIHN0YXRpYyB2b2lkIGlwaV90ZXN0X3NlbGYodm9pZCkKwqB7
CsKgwqDCoMKgwqDCoMKgIGNwdW1hc2tfdCBtYXNrOwrCoAotwqDCoMKgwqDCoMKgIHJlcG9ydF9w
cmVmaXhfcHVzaCgic2VsZiIpOwrCoMKgwqDCoMKgwqDCoCBzdGF0c19yZXNldCgpOwrCoMKgwqDC
oMKgwqDCoCBjcHVtYXNrX2NsZWFyKCZtYXNrKTsKwqDCoMKgwqDCoMKgwqAgY3B1bWFza19zZXRf
Y3B1KHNtcF9wcm9jZXNzb3JfaWQoKSwgJm1hc2spOwrCoMKgwqDCoMKgwqDCoCBnaWMtPmlwaS5z
ZW5kX3NlbGYoKTsKLcKgwqDCoMKgwqDCoCBjaGVja19hY2tlZCgiSVBJOiBzZWxmIiwgJm1hc2sp
OwotwqDCoMKgwqDCoMKgIHJlcG9ydF9wcmVmaXhfcG9wKCk7CivCoMKgwqDCoMKgwqAgcmVwb3J0
KCJzZWxmIiwgY2hlY2tfYWNrZWQoJm1hc2spKTsKwqB9CsKgCsKgc3RhdGljIHZvaWQgaXBpX3Rl
c3Rfc21wKHZvaWQpCkBAIC0yMDMsNyArMjAwLDcgQEAgc3RhdGljIHZvaWQgaXBpX3Rlc3Rfc21w
KHZvaWQpCsKgwqDCoMKgwqDCoMKgIGZvciAoaSA9IHNtcF9wcm9jZXNzb3JfaWQoKSAmIDE7IGkg
PCBucl9jcHVzOyBpICs9IDIpCsKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoMKgwqDCoCBjcHVtYXNr
X2NsZWFyX2NwdShpLCAmbWFzayk7CsKgwqDCoMKgwqDCoMKgIGdpY19pcGlfc2VuZF9tYXNrKElQ
SV9JUlEsICZtYXNrKTsKLcKgwqDCoMKgwqDCoCBjaGVja19hY2tlZCgiSVBJOiBkaXJlY3RlZCIs
ICZtYXNrKTsKK8KgwqDCoMKgwqDCoCByZXBvcnQoImRpcmVjdGVkIiwgY2hlY2tfYWNrZWQoJm1h
c2spKTsKwqDCoMKgwqDCoMKgwqAgcmVwb3J0X3ByZWZpeF9wb3AoKTsKwqAKwqDCoMKgwqDCoMKg
wqAgcmVwb3J0X3ByZWZpeF9wdXNoKCJicm9hZGNhc3QiKTsKQEAgLTIxMSw3ICsyMDgsNyBAQCBz
dGF0aWMgdm9pZCBpcGlfdGVzdF9zbXAodm9pZCkKwqDCoMKgwqDCoMKgwqAgY3B1bWFza19jb3B5
KCZtYXNrLCAmY3B1X3ByZXNlbnRfbWFzayk7CsKgwqDCoMKgwqDCoMKgIGNwdW1hc2tfY2xlYXJf
Y3B1KHNtcF9wcm9jZXNzb3JfaWQoKSwgJm1hc2spOwrCoMKgwqDCoMKgwqDCoCBnaWMtPmlwaS5z
ZW5kX2Jyb2FkY2FzdCgpOwotwqDCoMKgwqDCoMKgIGNoZWNrX2Fja2VkKCJJUEk6IGJyb2FkY2Fz
dCIsICZtYXNrKTsKK8KgwqDCoMKgwqDCoCByZXBvcnQoImJyb2FkY2FzdCIsIGNoZWNrX2Fja2Vk
KCZtYXNrKSk7CsKgwqDCoMKgwqDCoMKgIHJlcG9ydF9wcmVmaXhfcG9wKCk7CsKgfQrCoApJJ3Zl
IHJlbW92ZWQgIklQSSIgZnJvbSB0aGUgcmVwb3J0IHN0cmluZyBiZWNhdXNlIHRoZSBwcmVmaXhl
ZCB3YXMgYWxyZWFkeSBwdXNoZWQKaW4gbWFpbi4KCkFuZHJldywgd2hhdCBkbyB5b3UgdGhpbms/
IEFyZSB3ZSBtaXNzaW5nIHNvbWV0aGluZyBvYnZpb3VzPyBEbyB5b3UgaGF2ZSBhIGJldHRlcgpp
ZGVhPwoKPiAgc3RhdGljIHZvaWQgY2hlY2tfc3B1cmlvdXModm9pZCkKPiBAQCAtNTY3LDExICs1
NzMsMTIgQEAgc3RhdGljIHZvaWQgc3BpX2NvbmZpZ3VyZV9pcnEoaW50IGlycSwgaW50IGNwdSkK
PiAgICogV2FpdCBmb3IgYW4gU1BJIHRvIGZpcmUgKG9yIG5vdCkgb24gYSBjZXJ0YWluIENQVS4K
PiAgICogQ2xlYXJzIHRoZSBwZW5kaW5nIGJpdCBpZiByZXF1ZXN0ZWQgYWZ0ZXJ3YXJkcy4KPiAg
ICovCj4gLXN0YXRpYyB2b2lkIHRyaWdnZXJfYW5kX2NoZWNrX3NwaShjb25zdCBjaGFyICp0ZXN0
X25hbWUsCj4gK3N0YXRpYyBib29sIHRyaWdnZXJfYW5kX2NoZWNrX3NwaShjb25zdCBjaGFyICp0
ZXN0X25hbWUsCj4gIAkJCQkgIHVuc2lnbmVkIGludCBpcnFfc3RhdCwKPiAgCQkJCSAgaW50IGNw
dSkKCldoeSBkaWQgeW91IGNoYW5nZSB0aGUgcmV0dXJuIHZhbHVlIGZyb20gdm9pZCB0byBib29s
IGlmIHlvdSdyZSBub3QgdXNpbmcgaXQKYW55d2hlcmU/IElmIGl0J3MgYmVjYXVzZSB5b3UgbmVl
ZCBpdCBpbiB0aGUgbmV4dCBwYXRjaCAoIzgpLCBwbGVhc2UgbWFrZSB0aGUKY2hhbmdlIHRoZXJl
LgoKVGhhbmtzLApBbGV4Cj4gIHsKPiAgCWNwdW1hc2tfdCBjcHVtYXNrOwo+ICsJYm9vbCByZXQg
PSB0cnVlOwo+ICAKPiAgCXN0YXRzX3Jlc2V0KCk7Cj4gIAlnaWNfc3BpX3RyaWdnZXIoU1BJX0lS
USk7Cj4gQEAgLTU4NCwxMSArNTkxLDEzIEBAIHN0YXRpYyB2b2lkIHRyaWdnZXJfYW5kX2NoZWNr
X3NwaShjb25zdCBjaGFyICp0ZXN0X25hbWUsCj4gIAkJYnJlYWs7Cj4gIAl9Cj4gIAo+IC0JY2hl
Y2tfYWNrZWQodGVzdF9uYW1lLCAmY3B1bWFzayk7Cj4gKwlyZXQgPSAoY2hlY2tfYWNrZWQodGVz
dF9uYW1lLCAmY3B1bWFzaykgPj0gMCk7Cj4gIAo+ICAJLyogQ2xlYW4gdXAgcGVuZGluZyBiaXQg
aW4gY2FzZSB0aGlzIElSUSB3YXNuJ3QgdGFrZW4uICovCj4gIAlpZiAoIShpcnFfc3RhdCAmIElS
UV9TVEFUX05PX0NMRUFSKSkKPiAgCQlnaWNfc2V0X2lycV9iaXQoU1BJX0lSUSwgR0lDRF9JQ1BF
TkRSKTsKPiArCj4gKwlyZXR1cm4gcmV0Owo+ICB9Cj4gIAo+ICBzdGF0aWMgdm9pZCBzcGlfdGVz
dF9zaW5nbGUodm9pZCkKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18Ka3ZtYXJtIG1haWxpbmcgbGlzdAprdm1hcm1AbGlzdHMuY3MuY29sdW1iaWEuZWR1Cmh0
dHBzOi8vbGlzdHMuY3MuY29sdW1iaWEuZWR1L21haWxtYW4vbGlzdGluZm8va3ZtYXJtCg==
