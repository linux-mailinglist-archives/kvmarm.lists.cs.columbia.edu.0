Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id EE31C580DE8
	for <lists+kvmarm@lfdr.de>; Tue, 26 Jul 2022 09:38:13 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 62DB64C55E;
	Tue, 26 Jul 2022 03:38:13 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: -1.788
X-Spam-Level: 
X-Spam-Status: No, score=-1.788 required=6.1 tests=[BAYES_00=-1.9,
	DKIM_ADSP_CUSTOM_MED=0.001, DKIM_SIGNED=0.1, T_DKIM_INVALID=0.01,
	URIBL_BLOCKED=0.001] autolearn=no
Authentication-Results: mm01.cs.columbia.edu (amavisd-new); dkim=softfail
	(fail, message has been altered) header.i=@google.com
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id YQbkzWCTgmqS; Tue, 26 Jul 2022 03:38:11 -0400 (EDT)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 80D684C552;
	Tue, 26 Jul 2022 03:38:11 -0400 (EDT)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 7C2A04C53A
 for <kvmarm@lists.cs.columbia.edu>; Tue, 26 Jul 2022 03:38:10 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id oj4EToFFdp2o for <kvmarm@lists.cs.columbia.edu>;
 Tue, 26 Jul 2022 03:38:08 -0400 (EDT)
Received: from mail-yw1-f201.google.com (mail-yw1-f201.google.com
 [209.85.128.201])
 by mm01.cs.columbia.edu (Postfix) with ESMTPS id 223D94C54A
 for <kvmarm@lists.cs.columbia.edu>; Tue, 26 Jul 2022 03:38:08 -0400 (EDT)
Received: by mail-yw1-f201.google.com with SMTP id
 00721157ae682-31e89d6bea7so101346327b3.10
 for <kvmarm@lists.cs.columbia.edu>; Tue, 26 Jul 2022 00:38:08 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=20210112;
 h=date:in-reply-to:message-id:mime-version:references:subject:from:to
 :cc:content-transfer-encoding;
 bh=oKsO05P5VhcOhgxPaMS6HDnukgyf9AnFQ5c8xI8uER0=;
 b=RWdGAWr1wiMKMYmt1Q0zaOtg01Gpkj8XyrBSlfbuJSLqsyPs2tLYDKHtBSOwf48Shy
 DkYgX60VLBIuDQouUNeq5KQTYkgOdpKW44mgBBJ+LicBqyV0Z1NWi5StUYyqdAVS1ll5
 F568b6yHoHL1tWf/TUQCFWcSuioO8OfEun/UrNi2xeOZf9PZVBW192GSWJrSrCJ3W9PY
 /Po1ewQ0PS3T1o4JmjsyyYeOfzZfsWEVS/4QdzhlNKOPA29XaZqAVU0WP0ixV2f7Isti
 P0KEbN70EUnCLoPljXREc1wrcu5VQV3ElufIlRi4JXKUyOzY/0wnxsVuLcaVlVjQ/ff3
 iPsA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:date:in-reply-to:message-id:mime-version
 :references:subject:from:to:cc:content-transfer-encoding;
 bh=oKsO05P5VhcOhgxPaMS6HDnukgyf9AnFQ5c8xI8uER0=;
 b=hmV3pggSYPIPtDOKeo4ttiYcWQlvjOs4LyKMloH+5dIgcf7JAktSs57Scibc4boe+d
 XNx/mK7HLEysmll85eU2bSq7oIEqTLGg0dABkEnROkOyylww/R46FiPGEu2WxQLFShhH
 GpPKLOn+w1gy6TYn+F6oy6JhZHoc1KPirw+sAspcDoiw5aLUOrDRD0gvtwG/sJ/Myn+G
 i8z7rAR1QKlPr6q88b2SpDeXNqkFOouKn8XwdsI4kNU4FBuEtaP2I1UUvRas8ECnlwtu
 CbmlrRXcam6lR4dSH7KUvsHEPu/VnWVPtJxB0ujSFTFOPn2bRK2aYjbF2JQvhDi049pq
 e5DA==
X-Gm-Message-State: AJIora+/N8QrR18WoWqVpiLjuFGvffsuXw8gKbHdVZld1hhszSNyOMMr
 vzd4kfrj9u6f0KCwolI86QVXEk5CVeiPBC9pzQ==
X-Google-Smtp-Source: AGRyM1tkUVtSxVSYagZ3IM0myL/MmHggfXa+9W+OWUGgjocjbTQ1+SnKGqSf50Z5nLH4MLcVuHH3XYxWyaCFV7DDXg==
X-Received: from kaleshsingh.mtv.corp.google.com
 ([2620:15c:211:200:4f77:3b64:736a:394e])
 (user=kaleshsingh job=sendgmr) by 2002:a05:6902:10c1:b0:66f:1f9f:9c00 with
 SMTP id w1-20020a05690210c100b0066f1f9f9c00mr11818088ybu.583.1658821087741;
 Tue, 26 Jul 2022 00:38:07 -0700 (PDT)
Date: Tue, 26 Jul 2022 00:37:38 -0700
In-Reply-To: <20220726073750.3219117-1-kaleshsingh@google.com>
Message-Id: <20220726073750.3219117-6-kaleshsingh@google.com>
Mime-Version: 1.0
References: <20220726073750.3219117-1-kaleshsingh@google.com>
X-Mailer: git-send-email 2.37.1.359.gd136c6c3e2-goog
Subject: [PATCH v6 05/17] arm64: stacktrace: Factor out common unwind()
From: Kalesh Singh <kaleshsingh@google.com>
To: maz@kernel.org, mark.rutland@arm.com, broonie@kernel.org, 
 madvenka@linux.microsoft.com, tabba@google.com, oliver.upton@linux.dev
Cc: wangkefeng.wang@huawei.com, catalin.marinas@arm.com, ast@kernel.org,
 vincenzo.frascino@arm.com, will@kernel.org, kvmarm@lists.cs.columbia.edu,
 android-mm@google.com, kernel-team@android.com, elver@google.com,
 linux-arm-kernel@lists.infradead.org, andreyknvl@gmail.com,
 linux-kernel@vger.kernel.org, mhiramat@kernel.org
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

TW92ZSB1bndpbmQoKSB0byBzdGFja3RyYWNlL2NvbW1vbi5oLCBhbmQgYXMgYSByZXN1bHQKdGhl
IGtlcm5lbCB1bndpbmRfbmV4dCgpIHRvIGFzbS9zdGFja3RyYWNlLmguIFRoaXMgYWxsb3cKcmV1
c2luZyB1bndpbmQoKSBpbiB0aGUgaW1wbGVtZW50YXRpb24gb2YgdGhlIG5WSEUgSFlQCnN0YWNr
IHVud2luZGVyLCBsYXRlciBpbiB0aGUgc2VyaWVzLgoKU2lnbmVkLW9mZi1ieTogS2FsZXNoIFNp
bmdoIDxrYWxlc2hzaW5naEBnb29nbGUuY29tPgpSZXZpZXdlZC1ieTogRnVhZCBUYWJiYSA8dGFi
YmFAZ29vZ2xlLmNvbT4KUmV2aWV3ZWQtYnk6IE1hcmsgQnJvd24gPGJyb29uaWVAa2VybmVsLm9y
Zz4KVGVzdGVkLWJ5OiBGdWFkIFRhYmJhIDx0YWJiYUBnb29nbGUuY29tPgotLS0KCkNoYW5nZXMg
aW4gdjY6CiAgLSBBZGQgTWFyayBCcm93buKAmXMgUmV2aWV3ZWQtYnkgdGFnCiAgLSBBZGQgRnVh
ZCdzIFRlc3RlZC1ieSB0YWcKCkNoYW5nZXMgaW4gdjU6CiAgLSBBZGQgUmV2aWV3ZWQtYnkgdGFn
IGZyb20gRnVhZAoKIGFyY2gvYXJtNjQvaW5jbHVkZS9hc20vc3RhY2t0cmFjZS5oICAgICAgICB8
IDUxICsrKysrKysrKysrKysrKysKIGFyY2gvYXJtNjQvaW5jbHVkZS9hc20vc3RhY2t0cmFjZS9j
b21tb24uaCB8IDE5ICsrKysrKwogYXJjaC9hcm02NC9rZXJuZWwvc3RhY2t0cmFjZS5jICAgICAg
ICAgICAgIHwgNjcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogMyBmaWxlcyBjaGFuZ2VkLCA3MCBp
bnNlcnRpb25zKCspLCA2NyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL2FybTY0L2lu
Y2x1ZGUvYXNtL3N0YWNrdHJhY2UuaCBiL2FyY2gvYXJtNjQvaW5jbHVkZS9hc20vc3RhY2t0cmFj
ZS5oCmluZGV4IDQzZjRiNGE2ZDM4My4uZWE4Mjg1NzlhOThiIDEwMDY0NAotLS0gYS9hcmNoL2Fy
bTY0L2luY2x1ZGUvYXNtL3N0YWNrdHJhY2UuaAorKysgYi9hcmNoL2FybTY0L2luY2x1ZGUvYXNt
L3N0YWNrdHJhY2UuaApAQCAtMTEsNiArMTEsNyBAQAogI2luY2x1ZGUgPGxpbnV4L2xsaXN0Lmg+
CiAKICNpbmNsdWRlIDxhc20vbWVtb3J5Lmg+CisjaW5jbHVkZSA8YXNtL3BvaW50ZXJfYXV0aC5o
PgogI2luY2x1ZGUgPGFzbS9wdHJhY2UuaD4KICNpbmNsdWRlIDxhc20vc2RlaS5oPgogCkBAIC04
MCw0ICs4MSw1NCBAQCBzdGF0aWMgaW5saW5lIGJvb2wgb25fYWNjZXNzaWJsZV9zdGFjayhjb25z
dCBzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaywKIAlyZXR1cm4gZmFsc2U7CiB9CiAKKy8qCisgKiBV
bndpbmQgZnJvbSBvbmUgZnJhbWUgcmVjb3JkIChBKSB0byB0aGUgbmV4dCBmcmFtZSByZWNvcmQg
KEIpLgorICoKKyAqIFdlIHRlcm1pbmF0ZSBlYXJseSBpZiB0aGUgbG9jYXRpb24gb2YgQiBpbmRp
Y2F0ZXMgYSBtYWxmb3JtZWQgY2hhaW4gb2YgZnJhbWUKKyAqIHJlY29yZHMgKGUuZy4gYSBjeWNs
ZSksIGRldGVybWluZWQgYmFzZWQgb24gdGhlIGxvY2F0aW9uIGFuZCBmcCB2YWx1ZSBvZiBBCisg
KiBhbmQgdGhlIGxvY2F0aW9uIChidXQgbm90IHRoZSBmcCB2YWx1ZSkgb2YgQi4KKyAqLworc3Rh
dGljIGlubGluZSBpbnQgbm90cmFjZSB1bndpbmRfbmV4dChzdHJ1Y3QgdW53aW5kX3N0YXRlICpz
dGF0ZSkKK3sKKwlzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzayA9IHN0YXRlLT50YXNrOworCXVuc2ln
bmVkIGxvbmcgZnAgPSBzdGF0ZS0+ZnA7CisJc3RydWN0IHN0YWNrX2luZm8gaW5mbzsKKwlpbnQg
ZXJyOworCisJLyogRmluYWwgZnJhbWU7IG5vdGhpbmcgdG8gdW53aW5kICovCisJaWYgKGZwID09
ICh1bnNpZ25lZCBsb25nKXRhc2tfcHRfcmVncyh0c2spLT5zdGFja2ZyYW1lKQorCQlyZXR1cm4g
LUVOT0VOVDsKKworCWVyciA9IHVud2luZF9uZXh0X2NvbW1vbihzdGF0ZSwgJmluZm8sIE5VTEwp
OworCWlmIChlcnIpCisJCXJldHVybiBlcnI7CisKKwlzdGF0ZS0+cGMgPSBwdHJhdXRoX3N0cmlw
X2luc25fcGFjKHN0YXRlLT5wYyk7CisKKyNpZmRlZiBDT05GSUdfRlVOQ1RJT05fR1JBUEhfVFJB
Q0VSCisJaWYgKHRzay0+cmV0X3N0YWNrICYmCisJCShzdGF0ZS0+cGMgPT0gKHVuc2lnbmVkIGxv
bmcpcmV0dXJuX3RvX2hhbmRsZXIpKSB7CisJCXVuc2lnbmVkIGxvbmcgb3JpZ19wYzsKKwkJLyoK
KwkJICogVGhpcyBpcyBhIGNhc2Ugd2hlcmUgZnVuY3Rpb24gZ3JhcGggdHJhY2VyIGhhcworCQkg
KiBtb2RpZmllZCBhIHJldHVybiBhZGRyZXNzIChMUikgaW4gYSBzdGFjayBmcmFtZQorCQkgKiB0
byBob29rIGEgZnVuY3Rpb24gcmV0dXJuLgorCQkgKiBTbyByZXBsYWNlIGl0IHRvIGFuIG9yaWdp
bmFsIHZhbHVlLgorCQkgKi8KKwkJb3JpZ19wYyA9IGZ0cmFjZV9ncmFwaF9yZXRfYWRkcih0c2ss
IE5VTEwsIHN0YXRlLT5wYywKKwkJCQkJCSh2b2lkICopc3RhdGUtPmZwKTsKKwkJaWYgKFdBUk5f
T05fT05DRShzdGF0ZS0+cGMgPT0gb3JpZ19wYykpCisJCQlyZXR1cm4gLUVJTlZBTDsKKwkJc3Rh
dGUtPnBjID0gb3JpZ19wYzsKKwl9CisjZW5kaWYgLyogQ09ORklHX0ZVTkNUSU9OX0dSQVBIX1RS
QUNFUiAqLworI2lmZGVmIENPTkZJR19LUkVUUFJPQkVTCisJaWYgKGlzX2tyZXRwcm9iZV90cmFt
cG9saW5lKHN0YXRlLT5wYykpCisJCXN0YXRlLT5wYyA9IGtyZXRwcm9iZV9maW5kX3JldF9hZGRy
KHRzaywgKHZvaWQgKilzdGF0ZS0+ZnAsICZzdGF0ZS0+a3JfY3VyKTsKKyNlbmRpZgorCisJcmV0
dXJuIDA7Cit9CitOT0tQUk9CRV9TWU1CT0wodW53aW5kX25leHQpOworCiAjZW5kaWYJLyogX19B
U01fU1RBQ0tUUkFDRV9IICovCmRpZmYgLS1naXQgYS9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL3N0
YWNrdHJhY2UvY29tbW9uLmggYi9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL3N0YWNrdHJhY2UvY29t
bW9uLmgKaW5kZXggYjI0MWVkYmE1Yzc2Li40YjYzMjE0MWQ5MWMgMTAwNjQ0Ci0tLSBhL2FyY2gv
YXJtNjQvaW5jbHVkZS9hc20vc3RhY2t0cmFjZS9jb21tb24uaAorKysgYi9hcmNoL2FybTY0L2lu
Y2x1ZGUvYXNtL3N0YWNrdHJhY2UvY29tbW9uLmgKQEAgLTksNiArOSw3IEBACiAKICNpbmNsdWRl
IDxsaW51eC9iaXRtYXAuaD4KICNpbmNsdWRlIDxsaW51eC9iaXRvcHMuaD4KKyNpbmNsdWRlIDxs
aW51eC9rcHJvYmVzLmg+CiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KIAogZW51bSBzdGFja190
eXBlIHsKQEAgLTY5LDYgKzcwLDggQEAgc3RhdGljIGlubGluZSBib29sIG9uX2FjY2Vzc2libGVf
c3RhY2soY29uc3Qgc3RydWN0IHRhc2tfc3RydWN0ICp0c2ssCiAJCQkJICAgICAgIHVuc2lnbmVk
IGxvbmcgc3AsIHVuc2lnbmVkIGxvbmcgc2l6ZSwKIAkJCQkgICAgICAgc3RydWN0IHN0YWNrX2lu
Zm8gKmluZm8pOwogCitzdGF0aWMgaW5saW5lIGludCB1bndpbmRfbmV4dChzdHJ1Y3QgdW53aW5k
X3N0YXRlICpzdGF0ZSk7CisKIHN0YXRpYyBpbmxpbmUgYm9vbCBvbl9zdGFjayh1bnNpZ25lZCBs
b25nIHNwLCB1bnNpZ25lZCBsb25nIHNpemUsCiAJCQkgICAgdW5zaWduZWQgbG9uZyBsb3csIHVu
c2lnbmVkIGxvbmcgaGlnaCwKIAkJCSAgICBlbnVtIHN0YWNrX3R5cGUgdHlwZSwgc3RydWN0IHN0
YWNrX2luZm8gKmluZm8pCkBAIC0xOTEsNCArMTk0LDIwIEBAIHN0YXRpYyBpbmxpbmUgaW50IHVu
d2luZF9uZXh0X2NvbW1vbihzdHJ1Y3QgdW53aW5kX3N0YXRlICpzdGF0ZSwKIAogCXJldHVybiAw
OwogfQorCitzdGF0aWMgaW5saW5lIHZvaWQgbm90cmFjZSB1bndpbmQoc3RydWN0IHVud2luZF9z
dGF0ZSAqc3RhdGUsCisJCQkJICBzdGFja190cmFjZV9jb25zdW1lX2ZuIGNvbnN1bWVfZW50cnks
CisJCQkJICB2b2lkICpjb29raWUpCit7CisJd2hpbGUgKDEpIHsKKwkJaW50IHJldDsKKworCQlp
ZiAoIWNvbnN1bWVfZW50cnkoY29va2llLCBzdGF0ZS0+cGMpKQorCQkJYnJlYWs7CisJCXJldCA9
IHVud2luZF9uZXh0KHN0YXRlKTsKKwkJaWYgKHJldCA8IDApCisJCQlicmVhazsKKwl9Cit9CitO
T0tQUk9CRV9TWU1CT0wodW53aW5kKTsKICNlbmRpZgkvKiBfX0FTTV9TVEFDS1RSQUNFX0NPTU1P
Tl9IICovCmRpZmYgLS1naXQgYS9hcmNoL2FybTY0L2tlcm5lbC9zdGFja3RyYWNlLmMgYi9hcmNo
L2FybTY0L2tlcm5lbC9zdGFja3RyYWNlLmMKaW5kZXggZWVmM2NmNmJmMmQ3Li45ZmE2MGVlNDg0
OTkgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtNjQva2VybmVsL3N0YWNrdHJhY2UuYworKysgYi9hcmNo
L2FybTY0L2tlcm5lbC9zdGFja3RyYWNlLmMKQEAgLTcsMTQgKzcsMTIgQEAKICNpbmNsdWRlIDxs
aW51eC9rZXJuZWwuaD4KICNpbmNsdWRlIDxsaW51eC9leHBvcnQuaD4KICNpbmNsdWRlIDxsaW51
eC9mdHJhY2UuaD4KLSNpbmNsdWRlIDxsaW51eC9rcHJvYmVzLmg+CiAjaW5jbHVkZSA8bGludXgv
c2NoZWQuaD4KICNpbmNsdWRlIDxsaW51eC9zY2hlZC9kZWJ1Zy5oPgogI2luY2x1ZGUgPGxpbnV4
L3NjaGVkL3Rhc2tfc3RhY2suaD4KICNpbmNsdWRlIDxsaW51eC9zdGFja3RyYWNlLmg+CiAKICNp
bmNsdWRlIDxhc20vaXJxLmg+Ci0jaW5jbHVkZSA8YXNtL3BvaW50ZXJfYXV0aC5oPgogI2luY2x1
ZGUgPGFzbS9zdGFja19wb2ludGVyLmg+CiAjaW5jbHVkZSA8YXNtL3N0YWNrdHJhY2UuaD4KIApA
QCAtNjksNzEgKzY3LDYgQEAgc3RhdGljIGlubGluZSB2b2lkIHVud2luZF9pbml0X2Zyb21fdGFz
ayhzdHJ1Y3QgdW53aW5kX3N0YXRlICpzdGF0ZSwKIAlzdGF0ZS0+cGMgPSB0aHJlYWRfc2F2ZWRf
cGModGFzayk7CiB9CiAKLS8qCi0gKiBVbndpbmQgZnJvbSBvbmUgZnJhbWUgcmVjb3JkIChBKSB0
byB0aGUgbmV4dCBmcmFtZSByZWNvcmQgKEIpLgotICoKLSAqIFdlIHRlcm1pbmF0ZSBlYXJseSBp
ZiB0aGUgbG9jYXRpb24gb2YgQiBpbmRpY2F0ZXMgYSBtYWxmb3JtZWQgY2hhaW4gb2YgZnJhbWUK
LSAqIHJlY29yZHMgKGUuZy4gYSBjeWNsZSksIGRldGVybWluZWQgYmFzZWQgb24gdGhlIGxvY2F0
aW9uIGFuZCBmcCB2YWx1ZSBvZiBBCi0gKiBhbmQgdGhlIGxvY2F0aW9uIChidXQgbm90IHRoZSBm
cCB2YWx1ZSkgb2YgQi4KLSAqLwotc3RhdGljIGludCBub3RyYWNlIHVud2luZF9uZXh0KHN0cnVj
dCB1bndpbmRfc3RhdGUgKnN0YXRlKQotewotCXN0cnVjdCB0YXNrX3N0cnVjdCAqdHNrID0gc3Rh
dGUtPnRhc2s7Ci0JdW5zaWduZWQgbG9uZyBmcCA9IHN0YXRlLT5mcDsKLQlzdHJ1Y3Qgc3RhY2tf
aW5mbyBpbmZvOwotCWludCBlcnI7Ci0KLQkvKiBGaW5hbCBmcmFtZTsgbm90aGluZyB0byB1bndp
bmQgKi8KLQlpZiAoZnAgPT0gKHVuc2lnbmVkIGxvbmcpdGFza19wdF9yZWdzKHRzayktPnN0YWNr
ZnJhbWUpCi0JCXJldHVybiAtRU5PRU5UOwotCi0JZXJyID0gdW53aW5kX25leHRfY29tbW9uKHN0
YXRlLCAmaW5mbywgTlVMTCk7Ci0JaWYgKGVycikKLQkJcmV0dXJuIGVycjsKLQotCXN0YXRlLT5w
YyA9IHB0cmF1dGhfc3RyaXBfaW5zbl9wYWMoc3RhdGUtPnBjKTsKLQotI2lmZGVmIENPTkZJR19G
VU5DVElPTl9HUkFQSF9UUkFDRVIKLQlpZiAodHNrLT5yZXRfc3RhY2sgJiYKLQkJKHN0YXRlLT5w
YyA9PSAodW5zaWduZWQgbG9uZylyZXR1cm5fdG9faGFuZGxlcikpIHsKLQkJdW5zaWduZWQgbG9u
ZyBvcmlnX3BjOwotCQkvKgotCQkgKiBUaGlzIGlzIGEgY2FzZSB3aGVyZSBmdW5jdGlvbiBncmFw
aCB0cmFjZXIgaGFzCi0JCSAqIG1vZGlmaWVkIGEgcmV0dXJuIGFkZHJlc3MgKExSKSBpbiBhIHN0
YWNrIGZyYW1lCi0JCSAqIHRvIGhvb2sgYSBmdW5jdGlvbiByZXR1cm4uCi0JCSAqIFNvIHJlcGxh
Y2UgaXQgdG8gYW4gb3JpZ2luYWwgdmFsdWUuCi0JCSAqLwotCQlvcmlnX3BjID0gZnRyYWNlX2dy
YXBoX3JldF9hZGRyKHRzaywgTlVMTCwgc3RhdGUtPnBjLAotCQkJCQkJKHZvaWQgKilzdGF0ZS0+
ZnApOwotCQlpZiAoV0FSTl9PTl9PTkNFKHN0YXRlLT5wYyA9PSBvcmlnX3BjKSkKLQkJCXJldHVy
biAtRUlOVkFMOwotCQlzdGF0ZS0+cGMgPSBvcmlnX3BjOwotCX0KLSNlbmRpZiAvKiBDT05GSUdf
RlVOQ1RJT05fR1JBUEhfVFJBQ0VSICovCi0jaWZkZWYgQ09ORklHX0tSRVRQUk9CRVMKLQlpZiAo
aXNfa3JldHByb2JlX3RyYW1wb2xpbmUoc3RhdGUtPnBjKSkKLQkJc3RhdGUtPnBjID0ga3JldHBy
b2JlX2ZpbmRfcmV0X2FkZHIodHNrLCAodm9pZCAqKXN0YXRlLT5mcCwgJnN0YXRlLT5rcl9jdXIp
OwotI2VuZGlmCi0KLQlyZXR1cm4gMDsKLX0KLU5PS1BST0JFX1NZTUJPTCh1bndpbmRfbmV4dCk7
Ci0KLXN0YXRpYyB2b2lkIG5vdHJhY2UgdW53aW5kKHN0cnVjdCB1bndpbmRfc3RhdGUgKnN0YXRl
LAotCQkJICAgc3RhY2tfdHJhY2VfY29uc3VtZV9mbiBjb25zdW1lX2VudHJ5LCB2b2lkICpjb29r
aWUpCi17Ci0Jd2hpbGUgKDEpIHsKLQkJaW50IHJldDsKLQotCQlpZiAoIWNvbnN1bWVfZW50cnko
Y29va2llLCBzdGF0ZS0+cGMpKQotCQkJYnJlYWs7Ci0JCXJldCA9IHVud2luZF9uZXh0KHN0YXRl
KTsKLQkJaWYgKHJldCA8IDApCi0JCQlicmVhazsKLQl9Ci19Ci1OT0tQUk9CRV9TWU1CT0wodW53
aW5kKTsKLQogc3RhdGljIGJvb2wgZHVtcF9iYWNrdHJhY2VfZW50cnkodm9pZCAqYXJnLCB1bnNp
Z25lZCBsb25nIHdoZXJlKQogewogCWNoYXIgKmxvZ2x2bCA9IGFyZzsKLS0gCjIuMzcuMS4zNTku
Z2QxMzZjNmMzZTItZ29vZwoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX18Ka3ZtYXJtIG1haWxpbmcgbGlzdAprdm1hcm1AbGlzdHMuY3MuY29sdW1iaWEuZWR1
Cmh0dHBzOi8vbGlzdHMuY3MuY29sdW1iaWEuZWR1L21haWxtYW4vbGlzdGluZm8va3ZtYXJtCg==
