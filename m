Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id 8E2EC54279A
	for <lists+kvmarm@lfdr.de>; Wed,  8 Jun 2022 09:34:15 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 0F8404B2F5;
	Wed,  8 Jun 2022 03:34:15 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: -1.789
X-Spam-Level: 
X-Spam-Status: No, score=-1.789 required=6.1 tests=[BAYES_00=-1.9,
	DKIM_SIGNED=0.1, T_DKIM_INVALID=0.01, URIBL_BLOCKED=0.001]
	autolearn=unavailable
Authentication-Results: mm01.cs.columbia.edu (amavisd-new); dkim=softfail
	(fail, message has been altered) header.i=@kernel.org
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id loN2612Zf1cS; Wed,  8 Jun 2022 03:34:14 -0400 (EDT)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id A6A574B30C;
	Wed,  8 Jun 2022 03:34:13 -0400 (EDT)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id A9AA64B2F5
 for <kvmarm@lists.cs.columbia.edu>; Wed,  8 Jun 2022 03:34:11 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 6wmfZSzn2VQB for <kvmarm@lists.cs.columbia.edu>;
 Wed,  8 Jun 2022 03:34:06 -0400 (EDT)
Received: from dfw.source.kernel.org (dfw.source.kernel.org [139.178.84.217])
 by mm01.cs.columbia.edu (Postfix) with ESMTPS id 6217A4B2D7
 for <kvmarm@lists.cs.columbia.edu>; Wed,  8 Jun 2022 03:34:06 -0400 (EDT)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by dfw.source.kernel.org (Postfix) with ESMTPS id B5C1761444;
 Wed,  8 Jun 2022 07:34:05 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 22DD2C34116;
 Wed,  8 Jun 2022 07:34:05 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1654673645;
 bh=zUAriSoqt7X75BSYiptDA8HT+jFpatA1VwWFOOuCHJU=;
 h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
 b=qEaE9E6N5v30L8JQ3VERoWqoGcxl8hjBVPm9K5ojoQJfgnnWatnqWxG4DP8/xS08Y
 owgC1hj6TgQHhVZmWYY07U4Hr4n7znTtDHnqs84R3TKN5D6JAaOti4R2JeDo4yPd86
 LGx2N9NpwuDbOuk+nao/8IwB8iIyRqwtRG1NSmDkbd7OU9NHPkZV+kM/RMaGs7GksU
 o5Nvb/O3ljrUr4Y+aY6Z2Ub4n7QZPPuwSFhI+7WsT+gkooyreYBFNJwr9iysfWhfIw
 lIcr5/Utb29CLYN2QUa/09Zn+YLbk6pfaNGBlRvSY2C1yAReeyCxIEnhV1qnGHK51b
 pSCFuLuNYzfuQ==
Received: from ip-185-104-136-29.ptr.icomera.net ([185.104.136.29]
 helo=wait-a-minute.misterjones.org)
 by disco-boy.misterjones.org with esmtpsa (TLS1.3) tls
 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (Exim 4.94.2)
 (envelope-from <maz@kernel.org>)
 id 1nyqCY-00GWcs-UT; Wed, 08 Jun 2022 08:34:03 +0100
Date: Wed, 08 Jun 2022 08:33:59 +0100
Message-ID: <87k09rzk0o.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Kalesh Singh <kaleshsingh@google.com>
Subject: Re: [PATCH v3 3/5] KVM: arm64: Add hypervisor overflow stack
In-Reply-To: <20220607165105.639716-4-kaleshsingh@google.com>
References: <20220607165105.639716-1-kaleshsingh@google.com>
 <20220607165105.639716-4-kaleshsingh@google.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
X-SA-Exim-Connect-IP: 185.104.136.29
X-SA-Exim-Rcpt-To: kaleshsingh@google.com, mark.rutland@arm.com,
 broonie@kernel.org, will@kernel.org, qperret@google.com, tabba@google.com,
 surenb@google.com, tjmercier@google.com, kernel-team@android.com,
 james.morse@arm.com, alexandru.elisei@arm.com, suzuki.poulose@arm.com,
 catalin.marinas@arm.com, mhiramat@kernel.org, ast@kernel.org,
 madvenka@linux.microsoft.com, peterz@infradead.org, drjones@redhat.com,
 yuzenghui@huawei.com, wangkefeng.wang@huawei.com, keirf@google.com,
 ardb@kernel.org, oupton@google.com, linux-arm-kernel@lists.infradead.org,
 kvmarm@lists.cs.columbia.edu, linux-kernel@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org);
 SAEximRunCond expanded to false
Cc: Kefeng Wang <wangkefeng.wang@huawei.com>,
 Peter Zijlstra <peterz@infradead.org>,
 Catalin Marinas <catalin.marinas@arm.com>, Alexei Starovoitov <ast@kernel.org>,
 will@kernel.org, surenb@google.com, kvmarm@lists.cs.columbia.edu,
 "Madhavan T. Venkataraman" <madvenka@linux.microsoft.com>,
 linux-arm-kernel@lists.infradead.org, kernel-team@android.com,
 broonie@kernel.org, tjmercier@google.com, linux-kernel@vger.kernel.org,
 Masami Hiramatsu <mhiramat@kernel.org>
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

On Tue, 07 Jun 2022 17:50:45 +0100,
Kalesh Singh <kaleshsingh@google.com> wrote:
> 
> Allocate and switch to 16-byte aligned secondary stack on overflow. This
> provides us stack space to better handle overflows; and is used in
> a subsequent patch to dump the hypervisor stacktrace.
> 
> Signed-off-by: Kalesh Singh <kaleshsingh@google.com>
> ---
>  arch/arm64/kernel/stacktrace.c | 3 +++
>  arch/arm64/kvm/hyp/nvhe/host.S | 9 ++-------
>  2 files changed, 5 insertions(+), 7 deletions(-)
> 
> diff --git a/arch/arm64/kernel/stacktrace.c b/arch/arm64/kernel/stacktrace.c
> index a84e38d41d38..f346b4c66f1c 100644
> --- a/arch/arm64/kernel/stacktrace.c
> +++ b/arch/arm64/kernel/stacktrace.c
> @@ -242,4 +242,7 @@ noinline notrace void arch_stack_walk(stack_trace_consume_fn consume_entry,
>  
>  	unwind(task, &state, consume_entry, cookie);
>  }
> +#else /* __KVM_NVHE_HYPERVISOR__ */
> +DEFINE_PER_CPU(unsigned long [PAGE_SIZE/sizeof(long)], overflow_stack)
> +	__aligned(16);

Does this need to be a whole page? With 64kB pages, this is
potentially a lot of memory for something that will hardly ever be
used. The rest of the kernel limits this to 4kB, which seems more
reasonable. There is no guard page anyway, so PAGE_SIZE doesn't
provide any extra protection.

>  #endif /* !__KVM_NVHE_HYPERVISOR__ */
> diff --git a/arch/arm64/kvm/hyp/nvhe/host.S b/arch/arm64/kvm/hyp/nvhe/host.S
> index ea6a397b64a6..4e3032a244e1 100644
> --- a/arch/arm64/kvm/hyp/nvhe/host.S
> +++ b/arch/arm64/kvm/hyp/nvhe/host.S
> @@ -177,13 +177,8 @@ SYM_FUNC_END(__host_hvc)
>  	b	hyp_panic
>  
>  .L__hyp_sp_overflow\@:
> -	/*
> -	 * Reset SP to the top of the stack, to allow handling the hyp_panic.
> -	 * This corrupts the stack but is ok, since we won't be attempting
> -	 * any unwinding here.
> -	 */
> -	ldr_this_cpu	x0, kvm_init_params + NVHE_INIT_STACK_HYP_VA, x1
> -	mov	sp, x0
> +	/* Switch to the overflow stack */
> +	adr_this_cpu sp, overflow_stack + PAGE_SIZE, x0
>  
>  	b	hyp_panic_bad_stack
>  	ASM_BUG()
> -- 
> 2.36.1.255.ge46751e96f-goog
> 
> 

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.
_______________________________________________
kvmarm mailing list
kvmarm@lists.cs.columbia.edu
https://lists.cs.columbia.edu/mailman/listinfo/kvmarm
