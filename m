Return-Path: <kvmarm-bounces@lists.cs.columbia.edu>
X-Original-To: lists+kvmarm@lfdr.de
Delivered-To: lists+kvmarm@lfdr.de
Received: from mm01.cs.columbia.edu (mm01.cs.columbia.edu [128.59.11.253])
	by mail.lfdr.de (Postfix) with ESMTP id 730CA4161C8
	for <lists+kvmarm@lfdr.de>; Thu, 23 Sep 2021 17:11:03 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id DAE2C4B0EF;
	Thu, 23 Sep 2021 11:11:02 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
X-Spam-Flag: NO
X-Spam-Score: -4.201
X-Spam-Level: 
X-Spam-Status: No, score=-4.201 required=6.1 tests=[BAYES_00=-1.9,
	DNS_FROM_AHBL_RHSBL=2.699, RCVD_IN_DNSWL_HI=-5] autolearn=unavailable
Received: from mm01.cs.columbia.edu ([127.0.0.1])
	by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 6zsShbfmM3B5; Thu, 23 Sep 2021 11:11:02 -0400 (EDT)
Received: from mm01.cs.columbia.edu (localhost [127.0.0.1])
	by mm01.cs.columbia.edu (Postfix) with ESMTP id 3B3114B0EC;
	Thu, 23 Sep 2021 11:11:01 -0400 (EDT)
Received: from localhost (localhost [127.0.0.1])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 9B8844B0D0
 for <kvmarm@lists.cs.columbia.edu>; Thu, 23 Sep 2021 11:11:00 -0400 (EDT)
X-Virus-Scanned: at lists.cs.columbia.edu
Received: from mm01.cs.columbia.edu ([127.0.0.1])
 by localhost (mm01.cs.columbia.edu [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 5S9UdIv+ra01 for <kvmarm@lists.cs.columbia.edu>;
 Thu, 23 Sep 2021 11:10:59 -0400 (EDT)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by mm01.cs.columbia.edu (Postfix) with ESMTP id 0B2894B0BE
 for <kvmarm@lists.cs.columbia.edu>; Thu, 23 Sep 2021 11:10:59 -0400 (EDT)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 51AABD6E;
 Thu, 23 Sep 2021 08:10:58 -0700 (PDT)
Received: from [192.168.0.110] (unknown [172.31.20.19])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 27EAE3F718;
 Thu, 23 Sep 2021 08:10:57 -0700 (PDT)
Message-ID: <62a2f16c-3aa0-3d7e-4b35-3a5bad701586@arm.com>
Date: Thu, 23 Sep 2021 16:12:27 +0100
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.1.1
Subject: Re: [RFC PATCH v4 00/39] KVM: arm64: Add Statistical Profiling
 Extension (SPE) support
Content-Language: en-US
To: Suzuki K Poulose <suzuki.poulose@arm.com>, maz@kernel.org,
 james.morse@arm.com, linux-arm-kernel@lists.infradead.org,
 kvmarm@lists.cs.columbia.edu, will@kernel.org, linux-kernel@vger.kernel.org
References: <20210825161815.266051-1-alexandru.elisei@arm.com>
 <963f68c8-b109-7ebb-751d-14ce46e3cdde@arm.com>
From: Alexandru Elisei <alexandru.elisei@arm.com>
In-Reply-To: <963f68c8-b109-7ebb-751d-14ce46e3cdde@arm.com>
X-BeenThere: kvmarm@lists.cs.columbia.edu
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Where KVM/ARM decisions are made <kvmarm.lists.cs.columbia.edu>
List-Unsubscribe: <https://lists.cs.columbia.edu/mailman/options/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=unsubscribe>
List-Archive: <https://lists.cs.columbia.edu/pipermail/kvmarm>
List-Post: <mailto:kvmarm@lists.cs.columbia.edu>
List-Help: <mailto:kvmarm-request@lists.cs.columbia.edu?subject=help>
List-Subscribe: <https://lists.cs.columbia.edu/mailman/listinfo/kvmarm>,
 <mailto:kvmarm-request@lists.cs.columbia.edu?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: kvmarm-bounces@lists.cs.columbia.edu
Sender: kvmarm-bounces@lists.cs.columbia.edu

SGkgU3V6dWtpLAoKVGhhbmsgeW91IGZvciBoYXZpbmcgYSBsb29rIQoKT24gOS8yMi8yMSAxMTox
MSwgU3V6dWtpIEsgUG91bG9zZSB3cm90ZToKPiBPbiAyNS8wOC8yMDIxIDE3OjE3LCBBbGV4YW5k
cnUgRWxpc2VpIHdyb3RlOgo+PiBUaGlzIGlzIHY0IG9mIHRoZSBTUEUgc2VyaWVzIHBvc3RlZCBh
dCBbMV0uIHYyIGNhbiBiZSBmb3VuZCBhdCBbMl0sIGFuZCB0aGUKPj4gb3JpZ2luYWwgc2VyaWVz
IGF0IFszXS4KPj4KPj4gU3RhdGlzdGljYWwgUHJvZmlsaW5nIEV4dGVuc2lvbiAoU1BFKSBpcyBh
biBvcHRpb25hbCBmZWF0dXJlIGFkZGVkIGluCj4+IEFSTXY4LjIuIEl0IGFsbG93cyBzYW1wbGlu
ZyBhdCByZWd1bGFyIGludGVydmFscyBvZiB0aGUgb3BlcmF0aW9ucyBleGVjdXRlZAo+PiBieSB0
aGUgUEUgYW5kIHN0b3JpbmcgYSByZWNvcmQgb2YgZWFjaCBvcGVyYXRpb24gaW4gYSBtZW1vcnkg
YnVmZmVyLiBBIGhpZ2gKPj4gbGV2ZWwgb3ZlcnZpZXcgb2YgdGhlIGV4dGVuc2lvbiBpcyBwcmVz
ZW50ZWQgaW4gYW4gYXJ0aWNsZSBvbiBhcm0uY29tIFs0XS4KPj4KPj4gVGhpcyBpcyBhbm90aGVy
IGNvbXBsZXRlIHJld3JpdGUgb2YgdGhlIHNlcmllcywgYW5kIG5vdGhpbmcgaXMgc2V0IGluCj4+
IHN0b25lLiBJZiB5b3UgdGhpbmsgb2YgYSBiZXR0ZXIgd2F5IHRvIGRvIHRoaW5ncywgcGxlYXNl
IHN1Z2dlc3QgaXQuCj4+Cj4+Cj4+IEZlYXR1cmVzIGFkZGVkCj4+ID09PT09PT09PT09PT09Cj4+
Cj4+IFRoZSByZXdyaXRlIGVuYWJsZWQgbWUgdG8gYWRkIHN1cHBvcnQgZm9yIHNldmVyYWwgZmVh
dHVyZXMgbm90Cj4+IHByZXNlbnQgaW4gdGhlIHByZXZpb3VzIGl0ZXJhdGlvbjoKPj4KPj4gLSBT
dXBwb3J0IGZvciBoZXRlcm9nZW5lb3VzIHN5c3RlbXMsIHdoZXJlIG9ubHkgc29tZSBvZiB0aGUg
Q1BVcyBzdXBwb3J0IFNQRS4KPj4gwqDCoCBUaGlzIGlzIGFjY29tcGxpc2hlZCB2aWEgdGhlIEtW
TV9BUk1fVkNQVV9TVVBQT1JURURfQ1BVUyBWQ1BVIGlvY3RsLgo+Pgo+PiAtIFN1cHBvcnQgZm9y
IFZNIG1pZ3JhdGlvbiB3aXRoIHRoZSBLVk1fQVJNX1ZDUFVfU1BFX0NUUkwoS1ZNX0FSTV9WQ1BV
X1NQRV9TVE9QKQo+PiDCoMKgIFZDUFUgaW9jdGwuCj4+Cj4+IC0gVGhlIHJlcXVpcmVtZW50IGZv
ciB1c2Vyc3BhY2UgdG8gbWxvY2soKSB0aGUgZ3Vlc3QgbWVtb3J5IGhhcyBiZWVuIHJlbW92ZWQs
Cj4+IMKgwqAgYW5kIG5vdyB1c2Vyc3BhY2UgY2FuIG1ha2UgY2hhbmdlcyB0byBtZW1vcnkgY29u
dGVudHMgYWZ0ZXIgdGhlIG1lbW9yeSBpcwo+PiDCoMKgIG1hcHBlZCBhdCBzdGFnZSAyLgo+Pgo+
PiAtIEJldHRlciBkZWJ1Z2dpbmcgb2YgZ3Vlc3QgbWVtb3J5IHBpbm5pbmcgYnkgcHJpbnRpbmcg
YSB3YXJuaW5nIHdoZW4gd2UKPj4gwqDCoCBnZXQgYW4gdW5leHBlY3RlZCByZWFkIG9yIHdyaXRl
IGZhdWx0LiBUaGlzIGhlbHBlZCBtZSBjYXRjaCBzZXZlcmFsIGJ1Z3MKPj4gwqDCoCBkdXJpbmcg
ZGV2ZWxvcG1lbnQsIGl0IGhhcyBhbHJlYWR5IHByb3ZlbiB2ZXJ5IHVzZWZ1bC4gTWFueSB0aGFu
a3MgdG8KPj4gwqDCoCBKYW1lcyB3aG8gc3VnZ2VzdGVkIHdoZW4gcmV2aWV3aW5nIHYzLgo+Pgo+
Pgo+PiBNaXNzaW5nIGZlYXR1cmVzCj4+ID09PT09PT09PT09PT09PT0KPj4KPj4gSSd2ZSB0cmll
ZCB0byBrZWVwIHRoZSBzZXJpZXMgYXMgc21hbGwgYXMgcG9zc2libGUgdG8gbWFrZSBpdCBlYXNp
ZXIgdG8gcmV2aWV3LAo+PiB3aGlsZSBpbXBsZW1lbnRpbmcgdGhlIGNvcmUgZnVuY3Rpb25hbGl0
eSBuZWVkZWQgZm9yIHRoZSBTUEUgZW11bGF0aW9uLiBBcyBzdWNoLAo+PiBJJ3ZlIGNob3NlbiB0
byBub3QgaW1wbGVtZW50IHNldmVyYWwgZmVhdHVyZXM6Cj4+Cj4+IC0gSG9zdCBwcm9maWxpbmcg
YSBndWVzdCB3aGljaCBoYXMgdGhlIFNQRSBmZWF0dXJlIGJpdCBzZXQgKHNlZSBvcGVuCj4+IMKg
wqAgcXVlc3Rpb25zKS4KPj4KPj4gLSBObyBlcnJhdGEgd29ya2Fyb3VuZHMgaGF2ZSBiZWVuIGlt
cGxlbWVudGVkIHlldCwgYW5kIHRoZXJlIGFyZSBxdWl0ZSBhIGZldyBvZgo+PiDCoMKgIHRoZW0g
Zm9yIE5lb3ZlcnNlIE4xIGFuZCBOZW92ZXJzZSBWMS4KPj4KPj4gLSBEaXNhYmxpbmcgQ09ORklH
X05VTUFfQkFMQU5DSU5HIGlzIGEgaGFjayB0byBnZXQgS1ZNIFNQRSB0byB3b3JrIGFuZCBJIGFt
Cj4+IMKgwqAgaW52ZXN0aWdhdGluZyBvdGhlciB3YXlzIHRvIGdldCBhcm91bmQgYXV0b21hdGlj
IG51bWEgYmFsYW5jaW5nLCBsaWtlCj4+IMKgwqAgcmVxdWlyaW5nIHVzZXJzcGFjZSB0byBkaXNh
YmxlIGl0IHZpYSBzZXRfbWVtcG9saWN5KCkuIEkgYW0gYWxzbyBnb2luZyB0bwo+PiDCoMKgIGxv
b2sgYXQgaG93IFZGSU8gZ2V0cyBhcm91bmQgaXQuIFN1Z2dlc3Rpb25zIHdlbGNvbWUuCj4+Cj4+
IC0gVGhlcmUncyBwbGVudHkgb2Ygcm9vbSBmb3Igb3B0aW1pemF0aW9uLiBPZmYgdGhlIHRvcCBv
ZiBteSBoZWFkLCB1c2luZwo+PiDCoMKgIGJsb2NrIG1hcHBpbmdzIGF0IHN0YWdlIDIsIGJhdGNo
IHBpbm5pbmcgb2YgcGFnZXMgKHNpbWlsYXIgdG8gd2hhdCBWRklPCj4+IMKgwqAgZG9lcyksIG9w
dGltaXplIHRoZSB3YXkgS1ZNIGtlZXBzIHRyYWNrIG9mIHBpbm5lZCBwYWdlcyAodXNpbmcgYSBs
aW5rZWQKPj4gwqDCoCBsaXN0IHRyaXBsZXMgdGhlIG1lbW9yeSB1c2FnZSksIGNvbnRleHQtc3dp
dGNoIHRoZSBTUEUgcmVnaXN0ZXJzIG9uCj4+IMKgwqAgdmNwdV9sb2FkL3ZjcHVfcHV0IG9uIFZI
RSBpZiB0aGUgaG9zdCBpcyBub3QgcHJvZmlsaW5nLCBsb2NraW5nCj4+IMKgwqAgb3B0aW1pemF0
aW9ucywgZXRjLCBldGMuCj4+Cj4+IC0gLi4uYW5kIG90aGVycy4gSSdtIHN1cmUgSSdtIG1pc3Np
bmcgYXQgbGVhc3QgYSBmZXcgdGhpbmdzIHdoaWNoIGFyZQo+PiDCoMKgIGltcG9ydGFudCBmb3Ig
c29tZW9uZS4KPj4KPj4KPj4gS25vd24gaXNzdWVzCj4+ID09PT09PT09PT09PQo+Pgo+PiBUaGlz
IGlzIGFuIFJGQywgc28ga2VlcCBpbiBtaW5kIHRoYXQgYWxtb3N0IGRlZmluaXRlbHkgdGhlcmUg
d2lsbCBiZSBzY2FyeQo+PiBidWdzLiBGb3IgZXhhbXBsZSwgYmVsb3cgaXMgYSBsaXN0IG9mIGtu
b3duIGlzc3VlcyB3aGljaCBkb24ndCBhZmZlY3QgdGhlCj4+IGNvcnJlY3RuZXNzIG9mIHRoZSBl
bXVsYXRpb24sIGFuZCB3aGljaCBJJ20gcGxhbm5pbmcgdG8gZml4IGluIGEgZnV0dXJlCj4+IGl0
ZXJhdGlvbjoKPj4KPj4gLSBXaXRoIENPTkZJR19QUk9WRV9MT0NLSU5HPXksIGxvY2tkZXAgY29t
cGxhaW5zIGFib3V0IGxvY2sgY29udGVudGlvbiB3aGVuCj4+IMKgwqAgdGhlIFZDUFUgZXhlY3V0
ZXMgdGhlIGRjYWNoZSBjbGVhbiBwZW5kaW5nIG9wcy4KPj4KPj4gLSBXaXRoIENPTkZJR19QUk9W
RV9MT0NLSU5HPXksIEtWTSB3aWxsIGhpdCBhIEJVRyBhdAo+PiDCoMKgIGt2bV9sb2NrX2FsbF92
Y3B1cygpLT5tdXRleF90cnlsb2NrKCZ2Y3B1LT5tdXRleCkgd2l0aCBtb3JlIHRoYW4gNDgKPj4g
wqDCoCBWQ1BVcy4KPj4KPj4gVGhpcyBCVUcgc3RhdGVtZW50IGNhbiBhbHNvIGJlIHRyaWdnZXJl
ZCB3aXRoIG1haW5saW5lLiBUbyByZXByb2R1Y2UgaXQsCj4+IGNvbXBpbGUga3ZtdG9vbCBmcm9t
IHRoaXMgYnJhbmNoIFs1XSBhbmQgZm9sbG93IHRoZSBpbnN0cnVjdGlvbiBpbiB0aGUKPj4ga3Zt
dG9vbCBjb21taXQgbWVzc2FnZS4KPj4KPj4gT25lIHdvcmthcm91bmQgY291bGQgYmUgdG8gc3Rv
cCB0cnlpbmcgdG8gbG9jayBhbGwgVkNQVXMgd2hlbiBsb2NraW5nIGEKPj4gbWVtc2xvdCBhbmQg
ZG9jdW1lbnQgdGhlIGZhY3QgdGhhdCBpdCBpcyByZXF1aXJlZCB0aGF0IG5vIFZDUFVzIGFyZSBy
dW4KPj4gYmVmb3JlIHRoZSBpb2N0bCBjb21wbGV0ZXMsIG90aGVyd2lzZSBiYWQgdGhpbmdzIG1p
Z2h0IGhhcHBlbiB0byB0aGUgVk0uCj4+Cj4+Cj4+IE9wZW4gcXVlc3Rpb25zCj4+ID09PT09PT09
PT09PT09Cj4+Cj4+IDEuIEltcGxlbWVudGluZyBzdXBwb3J0IGZvciBob3N0IHByb2ZpbGluZyBh
IGd1ZXN0IHdpdGggdGhlIFNQRSBmZWF0dXJlCj4+IG1lYW5zIHNldHRpbmcgdGhlIHByb2ZpbGlu
ZyBidWZmZXIgb3duaW5nIHJlZ2ltZSB0byBFTDIuIFdoaWxlIHRoYXQgaXMgaW4KPj4gZWZmZWN0
LMKgIFBNQklEUl9FTDEuUCB3aWxsIGVxdWFsIDEuIFRoaXMgaGFzIHR3byBjb25zZXF1ZW5jZXM6
IGlmIHRoZSBndWVzdAo+PiBwcm9iZXMgU1BFIGR1cmluZyB0aGlzIHRpbWUsIHRoZSBkcml2ZXIg
d2lsbCBmYWlsOyBhbmQgdGhlIGd1ZXN0IHdpbGwgYmUKPj4gYWJsZSB0byBkZXRlcm1pbmUgd2hl
biBpdCBpcyBwcm9maWxlZC4gSSBzZWUgdHdvIG9wdGlvbnMgaGVyZToKPgo+IFRoaXMgZG9lc24n
dCBtZWFuIHRoZSBFTDIgaXMgb3duaW5nIHRoZSBTUEUuIEl0IG9ubHkgdGVsbHMgeW91IHRoYXQg
YQo+IGhpZ2hlciBsZXZlbCBFTCBpcyBvd25pbmcgdGhlIFNQRS4gSXQgY291bGQgYXMgd2VsbCBi
ZSBFTDMuIChlLmcsIE1EQ1JfRUwzLk5TUEIKPiA9PSAwIG9yIDEpLiBTbyBJIHRoaW5rIHRoaXMg
aXMgYXJjaGl0ZWN0dXJhbGx5IGNvcnJlY3QsCj4gYXMgbG9uZyBhcyB3ZSB0cmFwIHRoZSBndWVz
dCBhY2Nlc3MgdG8gb3RoZXIgU1BFIHJlZ2lzdGVycyBhbmQgaW5qZWN0Cj4gYW5kIFVOREVGLgoK
WW91IGFyZSByaWdodCwgSSB3YXMgd3JvbmcgYWJvdXQgdGhlIHBhcnQgYWJvdXQgdGhlIGd1ZXN0
IGJlaW5nIGFibGUgdG8gZGV0ZXJtaW5lCndoZW4gaXQgaXMgcHJvZmlsZWQsIEkgZm9yZ290IHRo
YXQgUE1CSURSX0VMMS5QIGNhbiBhbHNvIGJlIDEgaWYgRUwzIGlzIG93bmluZyB0aGUKYnVmZmVy
LgoKQnV0IEkgZG9uJ3QgdW5kZXJzdGFuZCB3aHkgeW91IGFyZSBzdWdnZXN0aW5nIHRoYXQgS1ZN
IGluamVjdHMgVU5ERUYgaW4gdGhpcyBjYXNlLgpJIHdhcyB0aGlua2luZyB0aGF0IHdoZW4gdGhl
IGhvc3QgaXMgcHJvZmlsaW5nIHRoZSBndWVzdCwgS1ZNIGNhbiBzdG9yZSBndWVzdAp3cml0ZXMg
dG8gdGhlIFNQRSByZWdpc3RlcnMgdG8gdGhlIHNoYWRvdyBjb3B5IG9mIHRoZSByZWdpc3RlcnMu
IE9uIGEgd29ybGQgc3dpdGNoCnRvIGd1ZXN0LCBLVk0gd2lsbCBub3QgcmVzdG9yZSB0aGUgcmVn
aXN0ZXJzIG9udG8gdGhlIGhhcmR3YXJlIGFzIHRvIG5vdCBpbnRlcmZlcmUKd2l0aCB0aGUgcHJv
ZmlsaW5nIG9wZXJhdGlvbiBwZXJmb3JtZWQgYnkgdGhlIGhvc3QuIFdoZW4gcHJvZmlsaW5nIGVu
ZHMsIEtWTSBjYW4KdGhlbiBsZXQgdGhlIGd1ZXN0IHVzZSBTUEUgYWdhaW4gYnkgcmVzdG9yaW5n
IHRoZSBndWVzdCByZWdpc3RlciB2YWx1ZXMgb250byB0aGUKaGFyZHdhcmUgYXQgZXZlcnkgd29y
bGQgc3dpdGNoIGFuZCBzZXR0aW5nIHRoZSBidWZmZXIgb3duaW5nIHJlZ2ltZSB0byBFTDEgYWdh
aW4uCgpJIHB1dCB0aGlzIGFzIGFuIG9wZW4gcXVlc3Rpb24gYmVjYXVzZSBpZiB0aGUgZ3Vlc3Qg
c2VlcyBQTUJJRFJfRUwxLlAgc2V0IHdoZW4gdGhlCmd1ZXN0IFNQRSBkcml2ZXIgcHJvYmVzLCB0
aGUgZHJpdmVyIHdpbGwgbGlrZWx5IGRlY2lkZSB0aGF0IFNQRSBpcyBub3QgYXZhaWxhYmxlLgpC
dXQgdGhlIFZNIGhhcyBiZWVuIGNyZWF0ZWQgd2l0aCBTUEUgZW5hYmxlZCBiZWNhdXNlIHRoZSBo
b3N0IHVzZXJzcGFjZSB3YW50cyB0aGUKZ3Vlc3QgdG8gaGF2ZSBhY2Nlc3MgdG8gU1BFLCBhbmQg
dGhlIGhvc3QgdXNlcnNwYWNlIG1pZ2h0IG5vdCByZWFsaXplIHRoYXQgdGhlIGFjdApvZiBwcm9m
aWxpbmcgYSBndWVzdCBjYW4gbWFrZSBTUEUgdW51c2FibGUgYnkgdGhhdCBndWVzdC4gSSBhbSBp
bmNsaW5lZCBub3cgdG8gbGV0CnRoZSBob3N0J3MgdXNlcnNwYWNlIGRvIHdoYXRldmVyIGl0IHdp
c2hlcyBhbmQgYWxsb3cgaXQgdG8gcHJvZmlsZSBhIGd1ZXN0IGlmIGl0CnNvIGRlc2lyZXMsIGFu
ZCBtZW50aW9uIHRoaXMgcG9zc2libGUgc2lkZSBlZmZlY3QgaW4gdGhlIEtWTSBkb2N1bWVudGF0
aW9uLCBhcyBpdAptaWdodCBiZSBzdXJwcmlzaW5nIGZvciBzb21lb25lIHdobyBpc24ndCBmYW1p
bGlhciB3aXRoIHRoZSBpbm5lciB3b3JraW5ncyBvZgpLVk0ncyBTUEUgZW11bGF0aW9uLgoKVGhh
bmtzLAoKQWxleAoKPgo+Cj4gVGhhbmtzCj4gU3V6dWtpCl9fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fCmt2bWFybSBtYWlsaW5nIGxpc3QKa3ZtYXJtQGxpc3Rz
LmNzLmNvbHVtYmlhLmVkdQpodHRwczovL2xpc3RzLmNzLmNvbHVtYmlhLmVkdS9tYWlsbWFuL2xp
c3RpbmZvL2t2bWFybQo=
